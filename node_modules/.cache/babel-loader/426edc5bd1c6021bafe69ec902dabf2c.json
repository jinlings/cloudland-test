{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/instances/ModifyInstances.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message, Row, Col, InputNumber } from \"antd\";\nimport { createInsApi, getInsInforById, editInsInfor } from \"../../service/instances\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport { imagesListApi } from \"../../service/images\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { secgroupsListApi } from \"../../service/secgroups\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nimport \"./instances.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\nconst {\n  Option\n} = Select;\nconst children = [];\n\nfor (let i = 10; i < 36; i++) {\n  children.push( /*#__PURE__*/_jsxDEV(Option, {\n    children: i.toString(36) + i\n  }, i.toString(36) + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }, this));\n}\n\nclass ModifyInstances extends Component {\n  constructor(props) {\n    super(props); //const { getFieldDecorator } = this.props.form;\n\n    this.listInstances = () => {\n      this.props.history.push(\"/instances\");\n    };\n\n    this.handleChange = value => {\n      console.log(`selected ${value}`);\n    };\n\n    this.hyperChanged = obj => {\n      console.log(`-----------selected`, obj);\n      let zone = this.state.hypers[obj.key].Zone;\n      this.setState({\n        zone: zone\n      });\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      let tempOwner = {};\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            let tempFlavorArr = values.flavor.split(\"-\");\n            let tempFlavor = parseInt(tempFlavorArr[0]);\n            values.flavor = tempFlavor;\n            console.log(\"tempFlavorArr\", tempFlavorArr);\n            console.log(\"tempFlavor\", tempFlavor);\n            console.log(\"values.flavor\", values.flavor);\n            console.log(\"instance-edit\", this.props.match.params.id, values);\n            editInsInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"instance-editInsInfor:\", res);\n              this.props.history.push(\"/instances\");\n            });\n          } else {\n            tempOwner = this.state.secgroups.map(item => {\n              if (item.Name === window.localStorage.token) {\n                console.log(\"item-secgroups\", item);\n                return item.ID;\n              }\n            });\n            console.log(\"tempOwner\", tempOwner);\n            values.hyper = values.hyper === undefined ? this.state.defaultHyper : values.hyper;\n            values.secgroups = values.secgroups === undefined ? `${tempOwner}` : `${values.secgroups}`;\n            values.keys = `${values.keys}`;\n            console.log(\"submit-value\", values);\n            createInsApi(values).then(res => {\n              console.log(\"handleSubmit-res-createInsApi:\", res);\n              this.props.history.push(\"/instances\"); // Utils.loadData(this.state.current, this.state.pageSize)\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.valueChange = e => {\n      console.log(\"valueChange-e\", e);\n    };\n\n    console.log(\"ModifyInstances~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      defaultHyper: -1,\n      currentData: [],\n      instZone: {},\n      instFlavor: {},\n      instInterface: {},\n      instSubnet: {},\n      images: [],\n      hypers: [],\n      zones: [],\n      flavors: [],\n      keys: [],\n      secgroups: [],\n      subnets: [],\n      zone: {\n        ID: \"\",\n        Name: \"\"\n      }\n    };\n    let that = this;\n\n    if (props.match.params.id) {\n      getInsInforById(props.match.params.id).then(res => {\n        console.log(\"getInsInforById-res:\", res);\n        let test = res.instance.FlavorID + \"-\" + res.instance.Flavor.Name;\n        that.setState({\n          currentData: res.instance,\n          isShowEdit: true,\n          instZone: res.instance.Zone,\n          instFlavor: res.instance.Flavor,\n          instInterface: res.instance.Interfaces[0].Address,\n          instSubnet: res.instance.Interfaces[0].Address.Subnet,\n          test: test\n        });\n        console.log(\"getInsInforById~state:\", this.state);\n      });\n    }\n\n    console.log(\"state:\", that.state);\n  }\n\n  componentWillMount() {\n    const _this = this; //let hyperArr = [];\n\n\n    imagesListApi().then(res => {\n      _this.setState({\n        images: res.images,\n        isLoaded: true\n      });\n\n      console.log(\"images:\", res.images);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    hypersListApi().then(res => {\n      _this.setState({\n        hypers: res.hypers //   isLoaded: true,\n\n      });\n\n      this.state.hypers.map(val => {\n        console.log(\"hyperSelect-val:\", val);\n      });\n      console.log(\"hyperSelect-res:\", res);\n      console.log(\"hyperSelect-state.hypers:\", this.state.hypers);\n    }).catch(error => {\n      _this.setState({\n        //   isLoaded: false,\n        error: error\n      });\n    });\n    flavorsListApi().then(res => {\n      _this.setState({\n        flavors: res.flavors,\n        isLoaded: true\n      });\n\n      console.log(\"flavors:\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    subnetsListApi().then(res => {\n      _this.setState({\n        subnets: res.subnets,\n        isLoaded: true\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    secgroupsListApi().then(res => {\n      _this.setState({\n        secgroups: res.secgroups,\n        isLoaded: true\n      });\n\n      console.log(\"secgroup\", res.secgroups);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    keysListApi().then(res => {\n      console.log(\"componentDidMount-keys:\", res);\n\n      _this.setState({\n        keys: res.keys,\n        isLoaded: true\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Instance\" : \"Create Instance\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.listInstances,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        onSubmit: e => {\n          this.handleSubmit(e);\n        },\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Hostname (or prefix)\",\n          name: \"hostname\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"hostname\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Hostname\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            ref: c => {\n              this.hostname = c;\n            },\n            disabled: this.state.isShowEdit // onChange={(e) => this.setState({ hostname: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Hyper\",\n          name: \"hyper\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"hyper\", {\n            rules: [],\n            initialValue: this.state.currentData.Hyper\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            ref: c => {\n              this.hyper = c;\n            } // labelInValue\n            ,\n            disabled: this.state.isShowEdit // onChange={this.hyperChanged}\n            // name=\"hyper\"\n            // onChange={this.valueChange}\n            // allowClear=\"true\"\n            //placeholder=\"Auto\"\n            ,\n            children: this.state.hypers.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: index,\n                children: item.Hostname\n              }, item.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Zone\",\n          name: \"zone\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"zone\", {\n            rules: [],\n            initialValue: this.state.currentData.Hyper\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit // labelInValue\n            // onChange={(e) => this.setState({ zoned: e.key })}\n            ,\n            children: /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: 1543,\n              children: \"zone0\"\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Created At\",\n          name: \"createdAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"createdAt\", {\n            rules: [],\n            initialValue: this.state.currentData.CreatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"createdAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Updated At\",\n          name: \"updatedAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"updatedAt\", {\n            rules: [],\n            initialValue: this.state.currentData.UpdatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"updatedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Count\",\n          name: \"count\",\n          labelCol: { ...layoutForm.labelCol\n          } // wrapperCol={{ ...layoutButton.wrapperCol }}\n          ,\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"count\", {\n            rules: [{\n              required: true\n            } // {\n            //   validator: checkCount,\n            // },\n            ],\n            initialValue: 1\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 1 // defaultValue={3}\n            // onChange={(e) => this.setState({ count: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"image\",\n          label: \"Image\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"image\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit // labelInValue\n            // onChange={(e) => this.setState({ image: e.key })}\n            ,\n            children: this.state.images.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"flavor\",\n          label: \"Flavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"flavor\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.FlavorID + \"-\" + this.state.instFlavor.Name\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"primary\",\n          label: \"Primary Interface\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"primary\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: this.state.subnets.map(val => {\n              if (val.Name === \"public\" || val.Name === \"private\" || val.Name === window.localStorage.token) {\n                return /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: val.ID,\n                  children: [val.Name, \"-\", val.Network, val.Gateway.substring(val.Gateway.indexOf(\"/\"))]\n                }, val.ID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 23\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"primaryID\",\n          label: \"Primary IP\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"primaryID\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"primaryid\" // onChange={(e) => this.setState({ primaryid: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"primaryMac\",\n          label: \"Primary Mac\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"primaryMac\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"primaryMac\" // onChange={(e) => this.setState({ primaryMac: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"secondary\",\n          label: \"Secondary Interface\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"secondary\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: this.state.subnets.map((val, index) => {\n              if (val.Name === \"public\" || val.Name === \"private\" || val.Name === window.localStorage.token) {\n                return /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: val.ID,\n                  children: [val.Name, \"-\", val.Network, val.Gateway.substring(val.Gateway.indexOf(\"/\"))]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"secgroups\",\n          label: \"Security Groups\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"secgroups\", {\n            rules: [] // initialValue: window.localStorage.token,\n\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            optionFilterProp: \"children\",\n            filterOption: (input, option) => console.log(\"filter\", input, option),\n            children: this.state.secgroups.map((val, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: [val.ID, \"-\", val.Name]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Interfaces\",\n          name: \"interfaces\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"interfaces\", {\n            rules: [],\n            initialValue: this.state.currentData.length === 0 ? \"\" : this.state.instSubnet.Name + \"-\" + this.state.instInterface.Address\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"tags\",\n            style: {\n              width: \"100%\"\n            },\n            placeholder: \"Please select\",\n            onChange: this.handleChange,\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Keys\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 8,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 19,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"keys\",\n                children: this.props.form.getFieldDecorator(\"keys\", {\n                  rules: []\n                })( /*#__PURE__*/_jsxDEV(Select, {\n                  disabled: this.state.isShowEdit,\n                  children: this.state.keys.map((val, index) => {\n                    return /*#__PURE__*/_jsxDEV(Select.Option, {\n                      value: val.ID,\n                      children: [val.ID, \" - \", val.Name]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 5,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                children: \"Create Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"userdata\",\n          label: \"User Data\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"userdata\", {\n            rules: [],\n            initialValue: this.state.currentData.Userdata\n          })( /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            autoSize: {\n              minRows: 3,\n              maxRows: 6\n            },\n            name: \"userdata\" // onChange={(e) => this.setState({ userdata: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create Instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifyInstances\"\n})(ModifyInstances);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/instances/ModifyInstances.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","Row","Col","InputNumber","createInsApi","getInsInforById","editInsInfor","hypersListApi","imagesListApi","flavorsListApi","secgroupsListApi","subnetsListApi","keysListApi","layoutButton","labelCol","span","wrapperCol","layoutForm","Option","children","i","push","toString","ModifyInstances","constructor","props","listInstances","history","handleChange","value","console","log","hyperChanged","obj","zone","state","hypers","key","Zone","setState","handleSubmit","e","tempOwner","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","tempFlavorArr","flavor","split","tempFlavor","parseInt","then","res","secgroups","map","item","Name","window","localStorage","token","ID","hyper","undefined","defaultHyper","keys","catch","error","valueChange","isShowEdit","currentData","instZone","instFlavor","instInterface","instSubnet","images","zones","flavors","subnets","that","test","instance","FlavorID","Flavor","Interfaces","Address","Subnet","componentWillMount","_this","isLoaded","val","render","getFieldDecorator","rules","required","initialValue","Hostname","c","hostname","Hyper","index","CreatedAt","UpdatedAt","length","Network","Gateway","substring","indexOf","input","option","width","Userdata","minRows","maxRows","offset","create","name"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Input,\n  Select,\n  Button,\n  message,\n  Row,\n  Col,\n  InputNumber,\n} from \"antd\";\nimport {\n  createInsApi,\n  getInsInforById,\n  editInsInfor,\n} from \"../../service/instances\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport { imagesListApi } from \"../../service/images\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { secgroupsListApi } from \"../../service/secgroups\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nimport \"./instances.css\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nconst { Option } = Select;\nconst children = [];\n\nfor (let i = 10; i < 36; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n\nclass ModifyInstances extends Component {\n  constructor(props) {\n    super(props);\n    //const { getFieldDecorator } = this.props.form;\n    console.log(\"ModifyInstances~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      defaultHyper: -1,\n      currentData: [],\n      instZone: {},\n      instFlavor: {},\n      instInterface: {},\n      instSubnet: {},\n      images: [],\n      hypers: [],\n      zones: [],\n      flavors: [],\n      keys: [],\n      secgroups: [],\n      subnets: [],\n      zone: {\n        ID: \"\",\n        Name: \"\",\n      },\n    };\n    let that = this;\n    if (props.match.params.id) {\n      getInsInforById(props.match.params.id).then((res) => {\n        console.log(\"getInsInforById-res:\", res);\n        let test = res.instance.FlavorID + \"-\" + res.instance.Flavor.Name;\n        that.setState({\n          currentData: res.instance,\n          isShowEdit: true,\n          instZone: res.instance.Zone,\n          instFlavor: res.instance.Flavor,\n          instInterface: res.instance.Interfaces[0].Address,\n          instSubnet: res.instance.Interfaces[0].Address.Subnet,\n          test: test,\n        });\n\n        console.log(\"getInsInforById~state:\", this.state);\n      });\n    }\n    console.log(\"state:\", that.state);\n  }\n  listInstances = () => {\n    this.props.history.push(\"/instances\");\n  };\n  handleChange = (value) => {\n    console.log(`selected ${value}`);\n  };\n  hyperChanged = (obj) => {\n    console.log(`-----------selected`, obj);\n    let zone = this.state.hypers[obj.key].Zone;\n    this.setState({\n      zone: zone,\n    });\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    let tempOwner = {};\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          let tempFlavorArr = values.flavor.split(\"-\");\n          let tempFlavor = parseInt(tempFlavorArr[0]);\n          values.flavor = tempFlavor;\n          console.log(\"tempFlavorArr\", tempFlavorArr);\n          console.log(\"tempFlavor\", tempFlavor);\n          console.log(\"values.flavor\", values.flavor);\n          console.log(\"instance-edit\", this.props.match.params.id, values);\n          editInsInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"instance-editInsInfor:\", res);\n            this.props.history.push(\"/instances\");\n          });\n        } else {\n          tempOwner = this.state.secgroups.map((item) => {\n            if (item.Name === window.localStorage.token) {\n              console.log(\"item-secgroups\", item);\n              return item.ID;\n            }\n          });\n          console.log(\"tempOwner\", tempOwner);\n          values.hyper =\n            values.hyper === undefined ? this.state.defaultHyper : values.hyper;\n\n          values.secgroups =\n            values.secgroups === undefined\n              ? `${tempOwner}`\n              : `${values.secgroups}`;\n\n          values.keys = `${values.keys}`;\n          console.log(\"submit-value\", values);\n          createInsApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createInsApi:\", res);\n              this.props.history.push(\"/instances\");\n              // Utils.loadData(this.state.current, this.state.pageSize)\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  valueChange = (e) => {\n    console.log(\"valueChange-e\", e);\n  };\n  componentWillMount() {\n    const _this = this;\n    //let hyperArr = [];\n    imagesListApi()\n      .then((res) => {\n        _this.setState({\n          images: res.images,\n          isLoaded: true,\n        });\n        console.log(\"images:\", res.images);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    hypersListApi()\n      .then((res) => {\n        _this.setState({\n          hypers: res.hypers,\n          //   isLoaded: true,\n        });\n\n        this.state.hypers.map((val) => {\n          console.log(\"hyperSelect-val:\", val);\n        });\n        console.log(\"hyperSelect-res:\", res);\n        console.log(\"hyperSelect-state.hypers:\", this.state.hypers);\n      })\n      .catch((error) => {\n        _this.setState({\n          //   isLoaded: false,\n          error: error,\n        });\n      });\n    flavorsListApi()\n      .then((res) => {\n        _this.setState({\n          flavors: res.flavors,\n          isLoaded: true,\n        });\n        console.log(\"flavors:\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    subnetsListApi()\n      .then((res) => {\n        _this.setState({\n          subnets: res.subnets,\n          isLoaded: true,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    secgroupsListApi()\n      .then((res) => {\n        _this.setState({\n          secgroups: res.secgroups,\n          isLoaded: true,\n        });\n        console.log(\"secgroup\", res.secgroups);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    keysListApi()\n      .then((res) => {\n        console.log(\"componentDidMount-keys:\", res);\n        _this.setState({\n          keys: res.keys,\n          isLoaded: true,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Card\n        title={this.state.isShowEdit ? \"Edit Instance\" : \"Create Instance\"}\n        extra={\n          <Button type=\"primary\" size=\"small\" onClick={this.listInstances}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          onSubmit={(e) => {\n            this.handleSubmit(e);\n          }}\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n        >\n          <Form.Item\n            label=\"Hostname (or prefix)\"\n            name=\"hostname\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"hostname\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Hostname,\n            })(\n              <Input\n                ref={(c) => {\n                  this.hostname = c;\n                }}\n                disabled={this.state.isShowEdit}\n                // onChange={(e) => this.setState({ hostname: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Hyper\"\n            name=\"hyper\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"hyper\", {\n              rules: [],\n              initialValue: this.state.currentData.Hyper,\n            })(\n              <Select\n                ref={(c) => {\n                  this.hyper = c;\n                }}\n                // labelInValue\n                disabled={this.state.isShowEdit}\n                // onChange={this.hyperChanged}\n                // name=\"hyper\"\n                // onChange={this.valueChange}\n                // allowClear=\"true\"\n                //placeholder=\"Auto\"\n              >\n                {this.state.hypers.map((item, index) => {\n                  return (\n                    <Select.Option key={item.ID} value={index}>\n                      {item.Hostname}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Zone\"\n            name=\"zone\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"zone\", {\n              rules: [],\n              initialValue: this.state.currentData.Hyper,\n            })(\n              <Select\n                disabled={this.state.isShowEdit}\n                // labelInValue\n                // onChange={(e) => this.setState({ zoned: e.key })}\n              >\n                <Select.Option key={1} value={1543}>\n                  zone0\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Created At\"\n            name=\"createdAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"createdAt\", {\n              rules: [],\n              initialValue: this.state.currentData.CreatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"createdAt\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Updated At\"\n            name=\"updatedAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"updatedAt\", {\n              rules: [],\n              initialValue: this.state.currentData.UpdatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"updatedAt\" />)}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Count\"\n            name=\"count\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // wrapperCol={{ ...layoutButton.wrapperCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"count\", {\n              rules: [\n                {\n                  required: true,\n                },\n                // {\n                //   validator: checkCount,\n                // },\n              ],\n              initialValue: 1,\n            })(\n              <InputNumber\n                min={1}\n                // defaultValue={3}\n                // onChange={(e) => this.setState({ count: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"image\"\n            label=\"Image\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"image\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select\n                disabled={this.state.isShowEdit}\n                // labelInValue\n                // onChange={(e) => this.setState({ image: e.key })}\n              >\n                {this.state.images.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"flavor\"\n            label=\"Flavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"flavor\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.FlavorID +\n                    \"-\" +\n                    this.state.instFlavor.Name,\n            })(\n              <Select>\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"primary\"\n            label=\"Primary Interface\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"primary\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                {this.state.subnets.map((val) => {\n                  if (\n                    val.Name === \"public\" ||\n                    val.Name === \"private\" ||\n                    val.Name === window.localStorage.token\n                  ) {\n                    return (\n                      <Select.Option key={val.ID} value={val.ID}>\n                        {val.Name}-{val.Network}\n                        {val.Gateway.substring(val.Gateway.indexOf(\"/\"))}\n                      </Select.Option>\n                    );\n                  }\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"primaryID\"\n            label=\"Primary IP\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"primaryID\", {\n              rules: [],\n            })(\n              <Input\n                name=\"primaryid\"\n                // onChange={(e) => this.setState({ primaryid: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"primaryMac\"\n            label=\"Primary Mac\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"primaryMac\", {\n              rules: [],\n            })(\n              <Input\n                name=\"primaryMac\"\n                // onChange={(e) => this.setState({ primaryMac: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"secondary\"\n            label=\"Secondary Interface\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"secondary\", {\n              rules: [],\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                {this.state.subnets.map((val, index) => {\n                  if (\n                    val.Name === \"public\" ||\n                    val.Name === \"private\" ||\n                    val.Name === window.localStorage.token\n                  ) {\n                    return (\n                      <Select.Option key={index} value={val.ID}>\n                        {val.Name}-{val.Network}\n                        {val.Gateway.substring(val.Gateway.indexOf(\"/\"))}\n                      </Select.Option>\n                    );\n                  }\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"secgroups\"\n            label=\"Security Groups\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"secgroups\", {\n              rules: [],\n              // initialValue: window.localStorage.token,\n            })(\n              <Select\n                disabled={this.state.isShowEdit}\n                optionFilterProp=\"children\"\n                filterOption={(input, option) =>\n                  console.log(\"filter\", input, option)\n                }\n              >\n                {this.state.secgroups.map((val, index) => {\n                  return (\n                    <Select.Option key={index} value={val.ID}>\n                      {val.ID}-{val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Interfaces\"\n            name=\"interfaces\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"interfaces\", {\n              rules: [],\n              initialValue:\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.instSubnet.Name +\n                    \"-\" +\n                    this.state.instInterface.Address,\n            })(\n              <Select\n                mode=\"tags\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Please select\"\n                onChange={this.handleChange}\n              >\n                {children}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Keys\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            <Row gutter={8}>\n              <Col span={19}>\n                <Form.Item name=\"keys\">\n                  {this.props.form.getFieldDecorator(\"keys\", {\n                    rules: [],\n                  })(\n                    <Select disabled={this.state.isShowEdit}>\n                      {this.state.keys.map((val, index) => {\n                        return (\n                          <Select.Option key={index} value={val.ID}>\n                            {val.ID} - {val.Name}\n                          </Select.Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Button type=\"primary\">Create Key</Button>\n              </Col>\n            </Row>\n          </Form.Item>\n\n          <Form.Item\n            name=\"userdata\"\n            label=\"User Data\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"userdata\", {\n              rules: [],\n              initialValue: this.state.currentData.Userdata,\n            })(\n              <Input.TextArea\n                autoSize={{ minRows: 3, maxRows: 6 }}\n                name=\"userdata\"\n                // onChange={(e) => this.setState({ userdata: e.target.value })}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Instance\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create Instance\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifyInstances\" })(ModifyInstances);\n"]},"metadata":{},"sourceType":"module"}