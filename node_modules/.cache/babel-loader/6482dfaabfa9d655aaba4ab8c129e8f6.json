{"ast":null,"code":"import _objectSpread from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Form,Card,Input,Select,Button,message}from\"antd\";import React,{Component}from\"react\";import{createSubApi,editSubInfor,getSubInforById}from\"../../service/subnets\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var layoutButton={labelCol:{span:8},wrapperCol:{span:16}};var layoutForm={labelCol:{span:6},wrapperCol:{span:10}};var ModifySubnets=/*#__PURE__*/function(_Component){_inherits(ModifySubnets,_Component);var _super=_createSuper(ModifySubnets);function ModifySubnets(props){var _this;_classCallCheck(this,ModifySubnets);_this=_super.call(this,props);_this.listSubnets=function(){_this.props.history.push(\"/subnets\");};_this.handleSubmit=function(e){console.log(\"handleSubmit:\",e);e.preventDefault();_this.props.form.validateFieldsAndScroll(function(err,values){if(!err){console.log(\"handleSubmit-value:\",values);console.log(\"提交\");if(_this.props.match.params.id){//const _this = this;\neditSubInfor(_this.props.match.params.id,values).then(function(res){console.log(\"editSubInfor:\",res);// _this.setState({\n//   isShowEdit: ! this.state.isShowEdit,\n// });\n_this.props.history.push(\"/subnets\");});}else{values.dns=values.dns===undefined?_this.state.dns:values.dns;values.dhcp=values.dhcp===undefined?_this.state.dhcp:values.dhcp;values.domain=values.domain===undefined?_this.state.domain:values.domain;values.routes=values.routes===undefined?_this.state.routes:values.routes;values.rtype=values.rtype===undefined?_this.state.rtype:values.rtype;values.vSwitch=values.vSwitch===undefined?_this.state.vSwitch:values.vSwitch;values.vlan=values.routes===undefined?_this.state.vlan:values.vlan;createSubApi(values).then(function(res){console.log(\"handleSubmit-res-createSubApi:\",res);_this.props.history.push(\"/subnets\");}).catch(function(err){console.log(\"handleSubmit-error:\",err);});}}else{message.error(\" input wrong information\");}});};_this.state={isShowEdit:false,currentData:[],dns:\"\",dhcp:\"yes\",domain:\"\",routes:\"\",rtype:\"\",vSwitch:\"\",vlan:\"\"};if(props.match.params.id){getSubInforById(props.match.params.id).then(function(res){console.log(\"getSubInforById:\",res);_this.setState({currentData:res,isShowEdit:true});});}return _this;}_createClass(ModifySubnets,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(Card,{title:\"Create New Subnet\",extra:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:this.listSubnets,children:\"Return\"}),children:[\" \",/*#__PURE__*/_jsxs(Form,{layout:\"horizontal\",wrapperCol:_objectSpread({},layoutForm.wrapperCol),onSubmit:function onSubmit(e){return _this2.handleSubmit(e);},children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Name\",name:\"name\",labelCol:_objectSpread({},layoutForm.labelCol),children:this.props.form.getFieldDecorator(\"name\",{rules:[{required:true}],initialValue:this.state.currentData.Name})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Netmask\",name:\"netmask\",labelCol:_objectSpread({},layoutForm.labelCol),children:this.props.form.getFieldDecorator(\"netmask\",{rules:[{required:true}],initialValue:this.state.currentData.Netmask})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Network\",name:\"network\",labelCol:_objectSpread({},layoutForm.labelCol),children:this.props.form.getFieldDecorator(\"network\",{rules:[{required:true}],initialValue:this.state.currentData.Network})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Zones\",name:\"zones\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"zones\",{rules:[]})(/*#__PURE__*/_jsx(Select,{children:/*#__PURE__*/_jsx(Select.Option,{value:\"1543\",children:\"zone0\"},\"zone\")}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Gateway\",name:\"gateway\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={!this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"gateway\",{rules:[],initialValue:this.state.currentData.gateways})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Start\",name:\"start\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={!this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"start\",{rules:[]//   initialValue: this.state.currentData.start,\n})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"End\",name:\"end\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"end\",{rules:[]})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Name Server\",name:\"dns\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"dns\",{rules:[]})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Base Domain\",name:\"domain\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"domain\",{rules:[]})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Dhcp\",name:\"dhcp\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"dhcp\",{rules:[]})(/*#__PURE__*/_jsxs(Select,{placeholder:\"yes\",children:[/*#__PURE__*/_jsx(Select.Option,{value:\"yes\",children:\"yes\"},\"yes\"),/*#__PURE__*/_jsx(Select.Option,{value:\"no\",children:\"no\"},\"no\")]}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"vSwitch\",name:\"vSwitch\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"vSwitch\",{rules:[]})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Vlan (admin only)\",name:\"vlan\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"vlan\",{rules:[]})(/*#__PURE__*/_jsx(Input,{}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Routing Type (admin only)\",name:\"rtype\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"rtype\",{rules:[]})(/*#__PURE__*/_jsxs(Select,{placeholder:\"internal\",children:[/*#__PURE__*/_jsx(Select.Option,{value:\"private\",children:\"private\"},\"private\"),/*#__PURE__*/_jsx(Select.Option,{value:\"public\",children:\"public\"},\"public\"),/*#__PURE__*/_jsx(Select.Option,{value:\"internal\",children:\"internal\"},\"internal\")]}))}),/*#__PURE__*/_jsx(Form.Item,{label:\"Routes (admin only)\",name:\"routes\",labelCol:_objectSpread({},layoutForm.labelCol)// hidden={this.state.isShowEdit}\n,children:this.props.form.getFieldDecorator(\"routes\",{rules:[]})(/*#__PURE__*/_jsx(Input,{placeholder:\"eg. 10.0.0.0/8:10.5.5.5 172.0.0.0/16:172.5.5.5\"}))}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:_objectSpread(_objectSpread({},layoutButton.wrapperCol),{},{offset:8}),labelCol:{span:6},children:this.state.isShowEdit?/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Update Subnet\"}):/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Create New Subnet\"})})]})]});}}]);return ModifySubnets;}(Component);export default Form.create({name:\"modifySubnets\"})(ModifySubnets);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/subnets/ModifySubnets.jsx"],"names":["Form","Card","Input","Select","Button","message","React","Component","createSubApi","editSubInfor","getSubInforById","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifySubnets","props","listSubnets","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","dns","undefined","state","dhcp","domain","routes","rtype","vSwitch","vlan","catch","error","isShowEdit","currentData","setState","getFieldDecorator","rules","required","initialValue","Name","Netmask","Network","gateways","offset","create","name"],"mappings":"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","sourcesContent":["import { Form, Card, Input, Select, Button, message } from \"antd\";\nimport React, { Component } from \"react\";\nimport {\n  createSubApi,\n  editSubInfor,\n  getSubInforById,\n} from \"../../service/subnets\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass ModifySubnets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      dns: \"\",\n      dhcp: \"yes\",\n      domain: \"\",\n      routes: \"\",\n      rtype: \"\",\n      vSwitch: \"\",\n      vlan: \"\",\n    };\n    if (props.match.params.id) {\n      getSubInforById(props.match.params.id).then((res) => {\n        console.log(\"getSubInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true,\n        });\n      });\n    }\n  }\n  listSubnets = () => {\n    this.props.history.push(\"/subnets\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          //const _this = this;\n          editSubInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"editSubInfor:\", res);\n            // _this.setState({\n            //   isShowEdit: ! this.state.isShowEdit,\n            // });\n            this.props.history.push(\"/subnets\");\n          });\n        } else {\n          values.dns = values.dns === undefined ? this.state.dns : values.dns;\n          values.dhcp =\n            values.dhcp === undefined ? this.state.dhcp : values.dhcp;\n          values.domain =\n            values.domain === undefined ? this.state.domain : values.domain;\n          values.routes =\n            values.routes === undefined ? this.state.routes : values.routes;\n          values.rtype =\n            values.rtype === undefined ? this.state.rtype : values.rtype;\n          values.vSwitch =\n            values.vSwitch === undefined ? this.state.vSwitch : values.vSwitch;\n          values.vlan =\n            values.routes === undefined ? this.state.vlan : values.vlan;\n          createSubApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createSubApi:\", res);\n              this.props.history.push(\"/subnets\");\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\"Create New Subnet\"}\n        extra={\n          <Button type=\"primary\" onClick={this.listSubnets}>\n            Return\n          </Button>\n        }\n      >\n        {\" \"}\n        <Form\n          layout=\"horizontal\"\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"name\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Name,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Netmask\"\n            name=\"netmask\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"netmask\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Netmask,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Network\"\n            name=\"network\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"network\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Network,\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Zones\"\n            name=\"zones\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"zones\", {\n              rules: [],\n            })(\n              <Select>\n                <Select.Option key=\"zone\" value=\"1543\">\n                  zone0\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Gateway\"\n            name=\"gateway\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"gateway\", {\n              rules: [],\n              initialValue: this.state.currentData.gateways,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Start\"\n            name=\"start\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"start\", {\n              rules: [],\n              //   initialValue: this.state.currentData.start,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"End\"\n            name=\"end\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"end\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Name Server\"\n            name=\"dns\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"dns\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Base Domain\"\n            name=\"domain\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"domain\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Dhcp\"\n            name=\"dhcp\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"dhcp\", {\n              rules: [],\n            })(\n              <Select placeholder=\"yes\">\n                <Select.Option key=\"yes\" value=\"yes\">\n                  yes\n                </Select.Option>\n                <Select.Option key=\"no\" value=\"no\">\n                  no\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"vSwitch\"\n            name=\"vSwitch\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"vSwitch\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Vlan (admin only)\"\n            name=\"vlan\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"vlan\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Routing Type (admin only)\"\n            name=\"rtype\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"rtype\", {\n              rules: [],\n            })(\n              <Select placeholder=\"internal\">\n                <Select.Option key=\"private\" value=\"private\">\n                  private\n                </Select.Option>\n                <Select.Option key=\"public\" value=\"public\">\n                  public\n                </Select.Option>\n                <Select.Option key=\"internal\" value=\"internal\">\n                  internal\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Routes (admin only)\"\n            name=\"routes\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"routes\", {\n              rules: [],\n            })(\n              <Input placeholder=\"eg. 10.0.0.0/8:10.5.5.5 172.0.0.0/16:172.5.5.5\" />\n            )}\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Subnet\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create New Subnet\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifySubnets\" })(ModifySubnets);\n"]},"metadata":{},"sourceType":"module"}