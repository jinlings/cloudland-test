{"ast":null,"code":"import { GW_LIST_FETCHED, GW_LIST_FILTER, GW_LIST_IS_FETCHING } from \"../../constants/actionTypes\";\nimport { regListApi } from \"../../service/registrys\";\nexport const filterGwList = keyword => ({\n  type: GW_LIST_FILTER,\n  keyword\n});\nexport const fetchGwList = () => {\n  return dispatch => {\n    dispatch(fetchingGwList(true));\n    regListApi().then(res => {\n      console.log(\"gwAction-res\", res); // let resData = res.data;\n\n      if (res) {\n        dispatch(fetchingGwList(false));\n        dispatch(fetchGwListSuccess(res.gateways, false)); //   } else {\n        //     //   dispatch(fetchingUserList(false));\n        //     //   dispatch(fetchUserListFailed(\"\b获取用户列表失败\"));\n      }\n    }); //   .catch((e) => dispatch(fetchUserListFailed(e.message)));\n  };\n};\nexport const fetchGwListSuccess = (gwList, loading) => ({\n  type: GW_LIST_FETCHED,\n  gwList,\n  loading\n});\nexport const fetchingGwList = loading => ({\n  type: GW_LIST_IS_FETCHING,\n  loading\n});","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/actions/GatewayAction.jsx"],"names":["GW_LIST_FETCHED","GW_LIST_FILTER","GW_LIST_IS_FETCHING","regListApi","filterGwList","keyword","type","fetchGwList","dispatch","fetchingGwList","then","res","console","log","fetchGwListSuccess","gateways","gwList","loading"],"mappings":"AAAA,SACEA,eADF,EAEEC,cAFF,EAGEC,mBAHF,QAIO,6BAJP;AAKA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEL,cADkC;AAExCI,EAAAA;AAFwC,CAAd,CAArB;AAIP,OAAO,MAAME,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,cAAc,CAAC,IAAD,CAAf,CAAR;AACAN,IAAAA,UAAU,GAAGO,IAAb,CAAmBC,GAAD,IAAS;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B,EADyB,CAEzB;;AACA,UAAIA,GAAJ,EAAS;AACPH,QAAAA,QAAQ,CAACC,cAAc,CAAC,KAAD,CAAf,CAAR;AACAD,QAAAA,QAAQ,CAACM,kBAAkB,CAACH,GAAG,CAACI,QAAL,EAAe,KAAf,CAAnB,CAAR,CAFO,CAGP;AACA;AACA;AACD;AACF,KAVD,EAFmB,CAanB;AACD,GAdD;AAeD,CAhBM;AAiBP,OAAO,MAAMD,kBAAkB,GAAG,CAACE,MAAD,EAASC,OAAT,MAAsB;AACtDX,EAAAA,IAAI,EAAEN,eADgD;AAEtDgB,EAAAA,MAFsD;AAGtDC,EAAAA;AAHsD,CAAtB,CAA3B;AAKP,OAAO,MAAMR,cAAc,GAAIQ,OAAD,KAAc;AAC1CX,EAAAA,IAAI,EAAEJ,mBADoC;AAE1Ce,EAAAA;AAF0C,CAAd,CAAvB","sourcesContent":["import {\n  GW_LIST_FETCHED,\n  GW_LIST_FILTER,\n  GW_LIST_IS_FETCHING,\n} from \"../../constants/actionTypes\";\nimport { regListApi } from \"../../service/registrys\";\nexport const filterGwList = (keyword) => ({\n  type: GW_LIST_FILTER,\n  keyword,\n});\nexport const fetchGwList = () => {\n  return (dispatch) => {\n    dispatch(fetchingGwList(true));\n    regListApi().then((res) => {\n      console.log(\"gwAction-res\", res);\n      // let resData = res.data;\n      if (res) {\n        dispatch(fetchingGwList(false));\n        dispatch(fetchGwListSuccess(res.gateways, false));\n        //   } else {\n        //     //   dispatch(fetchingUserList(false));\n        //     //   dispatch(fetchUserListFailed(\"\b获取用户列表失败\"));\n      }\n    });\n    //   .catch((e) => dispatch(fetchUserListFailed(e.message)));\n  };\n};\nexport const fetchGwListSuccess = (gwList, loading) => ({\n  type: GW_LIST_FETCHED,\n  gwList,\n  loading,\n});\nexport const fetchingGwList = (loading) => ({\n  type: GW_LIST_IS_FETCHING,\n  loading,\n});\n"]},"metadata":{},"sourceType":"module"}