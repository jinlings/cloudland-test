{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/registrys/ModifyRegistrys.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport { createRegApi, getRegInforById, editRegInfor } from \"../../service/registrys\";\nimport \"./registrys.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifyRegistrys extends Component {\n  constructor(props) {\n    super(props); //const { getFieldDecorator } = this.props.form;\n\n    this.listRegistrys = () => {\n      this.props.history.push(\"/registrys\");\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            //const _this = this;\n            editRegInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"editRegInfor:\", res); // _this.setState({\n              //   isShowEdit: ! this.state.isShowEdit,\n              // });\n\n              this.props.history.push(\"/registrys\");\n            });\n          } else {\n            createRegApi(values).then(res => {\n              console.log(\"handleSubmit-res-createRegApi:\", res);\n              this.props.history.push(\"/registrys\");\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.regContentValidate = (rule, value, callback) => {\n      console.log(\"regContentValidate:\", value);\n\n      if (value.indexOf(\"pullSecret\") === -1) {\n        callback(\"Registry Content should be started with 'pullSecret'\"); //调用api 接口\n      } else {\n        callback();\n      }\n    };\n\n    console.log(\"ModifyRegistry~~\", props);\n    this.state = {\n      isShowEdit: false,\n      currentData: []\n    };\n\n    if (props.match.params.id) {\n      getRegInforById(props.match.params.id).then(res => {\n        console.log(\"getRegInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Registry\" : \"Create Registry\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.listRegistrys,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Label\",\n          name: \"label\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"label\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Label\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Virtualization Type\",\n          name: \"virttype\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"virttype\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.VirtType\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"kvm on x86_64\",\n              children: \"KVM on x86_64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"kvm on z\",\n              children: \"KVM on Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"zvm\",\n              children: \"Z/VM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Ocp Version\",\n          name: \"ocpversion\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"ocpversion\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.OcpVersion\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"4.3\",\n              children: \"4.3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"4.4\",\n              children: \"4.4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"4.5\",\n              children: \"4.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"4.6\",\n              children: \"4.6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"4.7\",\n              children: \"4.7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"registrycontent\",\n          label: \"Registry Content\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"registrycontent\", {\n            rules: [{\n              required: true\n            }, {\n              validator: this.regContentValidate\n            }],\n            initialValue: this.state.currentData.RegistryContent\n          })( /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            showCount: \"true\",\n            autoSize: {\n              minRows: 3,\n              maxRows: 6\n            },\n            placeholder: \"pullSecret: ...\\nadditionalTrustBundle: | -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- \\nimageContentSources: ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"initramfs\",\n          label: \"RHCOS initramfs\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"initramfs\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Initramfs\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"kernel\",\n          label: \"RHCOS kernel\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"kernel\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Kernel\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"image\",\n          label: \"RHCOS image\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"image\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Image\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"installer\",\n          label: \"OCP installer\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"installer\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Installer\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"cli\",\n          label: \"OCP client\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"cli\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Cli\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Registry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create Registry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifyRegistrys\"\n})(ModifyRegistrys);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/registrys/ModifyRegistrys.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","createRegApi","getRegInforById","editRegInfor","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifyRegistrys","constructor","props","listRegistrys","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","catch","error","regContentValidate","rule","value","callback","indexOf","state","isShowEdit","currentData","setState","render","getFieldDecorator","rules","required","initialValue","Label","VirtType","OcpVersion","validator","RegistryContent","minRows","maxRows","Initramfs","Kernel","Image","Installer","Cli","offset","create","name"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport {\n  createRegApi,\n  getRegInforById,\n  editRegInfor,\n} from \"../../service/registrys\";\nimport \"./registrys.css\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass ModifyRegistrys extends Component {\n  constructor(props) {\n    super(props);\n    //const { getFieldDecorator } = this.props.form;\n    console.log(\"ModifyRegistry~~\", props);\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n    };\n    if (props.match.params.id) {\n      getRegInforById(props.match.params.id).then((res) => {\n        console.log(\"getRegInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true,\n        });\n      });\n    }\n  }\n\n  listRegistrys = () => {\n    this.props.history.push(\"/registrys\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          //const _this = this;\n          editRegInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"editRegInfor:\", res);\n            // _this.setState({\n            //   isShowEdit: ! this.state.isShowEdit,\n            // });\n            this.props.history.push(\"/registrys\");\n          });\n        } else {\n          createRegApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createRegApi:\", res);\n              this.props.history.push(\"/registrys\");\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  //check if Registry content starts with \"pullSecret\"\n  regContentValidate = (rule, value, callback) => {\n    console.log(\"regContentValidate:\", value);\n    if (value.indexOf(\"pullSecret\") === -1) {\n      callback(\"Registry Content should be started with 'pullSecret'\");\n\n      //调用api 接口\n    } else {\n      callback();\n    }\n  };\n  render() {\n    return (\n      <Card\n        title={this.state.isShowEdit ? \"Edit Registry\" : \"Create Registry\"}\n        extra={\n          <Button type=\"primary\" size=\"small\" onClick={this.listRegistrys}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"Label\"\n            name=\"label\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"label\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Label,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Virtualization Type\"\n            name=\"virttype\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"virttype\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.VirtType,\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                <Select.Option value=\"kvm on x86_64\">\n                  KVM on x86_64\n                </Select.Option>\n                <Select.Option value=\"kvm on z\">KVM on Z</Select.Option>\n                <Select.Option value=\"zvm\">Z/VM</Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Ocp Version\"\n            name=\"ocpversion\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"ocpversion\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.OcpVersion,\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                <Select.Option value=\"4.3\">4.3</Select.Option>\n                <Select.Option value=\"4.4\">4.4</Select.Option>\n                <Select.Option value=\"4.5\">4.5</Select.Option>\n                <Select.Option value=\"4.6\">4.6</Select.Option>\n                <Select.Option value=\"4.7\">4.7</Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"registrycontent\"\n            label=\"Registry Content\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"registrycontent\", {\n              rules: [\n                {\n                  required: true,\n                },\n                {\n                  validator: this.regContentValidate,\n                },\n              ],\n              initialValue: this.state.currentData.RegistryContent,\n            })(\n              <Input.TextArea\n                showCount=\"true\"\n                autoSize={{ minRows: 3, maxRows: 6 }}\n                placeholder=\"pullSecret: ...&#10;additionalTrustBundle: | -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- &#10;imageContentSources: ...\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"initramfs\"\n            label=\"RHCOS initramfs\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"initramfs\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Initramfs,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            name=\"kernel\"\n            label=\"RHCOS kernel\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"kernel\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Kernel,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            name=\"image\"\n            label=\"RHCOS image\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"image\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Image,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            name=\"installer\"\n            label=\"OCP installer\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"installer\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Installer,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            name=\"cli\"\n            label=\"OCP client\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"cli\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Cli,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Registry\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create Registry\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifyRegistrys\" })(ModifyRegistrys);\n"]},"metadata":{},"sourceType":"module"}