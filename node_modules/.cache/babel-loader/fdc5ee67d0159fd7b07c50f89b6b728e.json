{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/import request from\"../utils/request\";export function gwListApi(paramsObj){return request({url:\"/api/gateways\",method:\"get\",params:paramsObj?paramsObj:{}});}export function getGWInforById(gatewayid){return request({url:\"/api/gateways/\".concat(gatewayid),method:\"get\"});}export function createGWApi(objGW){return request({url:\"/api/gateways/new\",method:\"post\",data:objGW});}export function delGWInfor(gatewayid){return request({url:\"/api/gateways/\".concat(gatewayid),method:\"delete\"});}export function editGWInfor(gatewayid,obj){return request({url:\"/api/gateways/\".concat(gatewayid),method:\"post\",data:obj});}","map":{"version":3,"sources":["/Users/emily/cloudland/src/service/gateways.jsx"],"names":["request","gwListApi","paramsObj","url","method","params","getGWInforById","gatewayid","createGWApi","objGW","data","delGWInfor","editGWInfor","obj"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,MAAOA,CAAAA,OAAP,KAAoB,kBAApB,CAEA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,SAAnB,CAA8B,CACnC,MAAOF,CAAAA,OAAO,CAAC,CACbG,GAAG,CAAE,eADQ,CAEbC,MAAM,CAAE,KAFK,CAGbC,MAAM,CAAEH,SAAS,CAAGA,SAAH,CAAe,EAHnB,CAAD,CAAd,CAKD,CACD,MAAO,SAASI,CAAAA,cAAT,CAAwBC,SAAxB,CAAmC,CACxC,MAAOP,CAAAA,OAAO,CAAC,CACbG,GAAG,yBAAmBI,SAAnB,CADU,CAEbH,MAAM,CAAE,KAFK,CAAD,CAAd,CAID,CACD,MAAO,SAASI,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACjC,MAAOT,CAAAA,OAAO,CAAC,CACbG,GAAG,CAAE,mBADQ,CAEbC,MAAM,CAAE,MAFK,CAGbM,IAAI,CAAED,KAHO,CAAD,CAAd,CAKD,CACD,MAAO,SAASE,CAAAA,UAAT,CAAoBJ,SAApB,CAA+B,CACpC,MAAOP,CAAAA,OAAO,CAAC,CACbG,GAAG,yBAAmBI,SAAnB,CADU,CAEbH,MAAM,CAAE,QAFK,CAAD,CAAd,CAID,CACD,MAAO,SAASQ,CAAAA,WAAT,CAAqBL,SAArB,CAAgCM,GAAhC,CAAqC,CAC1C,MAAOb,CAAAA,OAAO,CAAC,CACbG,GAAG,yBAAmBI,SAAnB,CADU,CAEbH,MAAM,CAAE,MAFK,CAGbM,IAAI,CAAEG,GAHO,CAAD,CAAd,CAKD","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport request from \"../utils/request\";\n\nexport function gwListApi(paramsObj) {\n  return request({\n    url: \"/api/gateways\",\n    method: \"get\",\n    params: paramsObj ? paramsObj : {},\n  });\n}\nexport function getGWInforById(gatewayid) {\n  return request({\n    url: `/api/gateways/${gatewayid}`,\n    method: \"get\",\n  });\n}\nexport function createGWApi(objGW) {\n  return request({\n    url: \"/api/gateways/new\",\n    method: \"post\",\n    data: objGW,\n  });\n}\nexport function delGWInfor(gatewayid) {\n  return request({\n    url: `/api/gateways/${gatewayid}`,\n    method: \"delete\",\n  });\n}\nexport function editGWInfor(gatewayid, obj) {\n  return request({\n    url: `/api/gateways/${gatewayid}`,\n    method: \"post\",\n    data: obj,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}