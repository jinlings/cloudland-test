{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/openshifts/ModifyOpenshifts.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message, InputNumber } from \"antd\";\nimport { editOcpInfor, createOcpApi, getOcpInforById } from \"../../service/openshifts\";\nimport { regListApi } from \"../../service/registrys\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifyOpenshifts extends Component {\n  constructor(props) {\n    super(props); //const { getFieldDecorator } = this.props.form;\n\n    this.listOpenshifts = () => {\n      this.props.history.push(\"/openshifts\");\n    };\n\n    this.filterZones = () => {\n      var initZone = [];\n      var newZone = [];\n      this.state.zones.map(item => {\n        if (initZone.indexOf(item[\"Name\"]) === -1) {\n          initZone.push(item[\"Name\"]);\n          newZone.push(item);\n          console.log(\"zonearr\", initZone);\n        }\n\n        return newZone;\n      });\n      this.setState({\n        zones: newZone\n      });\n      console.log(\"test111\", this.state.zones);\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value-ocp:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            console.log(\"ocp-edit\", this.props.match.params.id, values);\n            editOcpInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"ocp-editInsInfor:\", res);\n              this.props.history.push(\"/openshifts\");\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          } else {\n            createOcpApi(values).then(res => {\n              console.log(\"handleSubmit-res-createOcpApi:\", res);\n              this.props.history.push(\"/openshifts\"); // Utils.loadData(this.state.current, this.state.pageSize)\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    console.log(\"ModifyOcp~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      openshifts: [],\n      currentData: [],\n      registrys: [],\n      flavors: [],\n      keys: [],\n      subnets: [],\n      zones: []\n    };\n    let that = this;\n\n    if (props.match.params.id) {\n      getOcpInforById(props.match.params.id).then(res => {\n        console.log(\"getOcpInforById-res:\", res);\n        that.setState({\n          currentData: res,\n          isShowEdit: true\n        });\n        console.log(\"getOcpInforById-currentData\", this.state);\n      });\n    }\n  }\n\n  componentDidMount() {\n    const _this = this;\n\n    regListApi().then(res => {\n      _this.setState({\n        registrys: res.registrys,\n        isLoaded: true\n      });\n\n      console.log(\"registrys:\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    flavorsListApi().then(res => {\n      _this.setState({\n        flavors: res.flavors,\n        isLoaded: true\n      });\n\n      console.log(\"flavors:\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    subnetsListApi().then(res => {\n      _this.setState({\n        subnets: res.subnets,\n        isLoaded: true\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    hypersListApi().then(res => {\n      _this.setState({\n        hypers: res.hypers,\n        isLoaded: true\n      });\n\n      this.state.hypers.forEach(val => {\n        let zoneList = {\n          Name: val.Zone.Name,\n          ID: val.Zone.ID\n        };\n        this.state.zones.push(zoneList);\n      });\n      this.filterZones();\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    keysListApi().then(res => {\n      console.log(\"componentWillMount-keys:\", res);\n\n      _this.setState({\n        keys: res.keys,\n        isLoaded: true\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Openshift Cluster\" : \"Create New Openshift Cluster\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.listOpenshifts,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        onSubmit: e => {\n          this.handleSubmit(e);\n        },\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Cluster Name\",\n          name: \"clustername\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"clustername\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.ClusterName\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            ref: c => {\n              this.hostname = c;\n            },\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Base Domain\",\n          name: \"basedomain\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"basedomain\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.BaseDomain\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Created At\",\n          name: \"createdAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"createdAt\", {\n            rules: [],\n            initialValue: this.state.currentData.CreatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"createdAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Updated At\",\n          name: \"updatedAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"updatedAt\", {\n            rules: [],\n            initialValue: this.state.currentData.UpdatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"updatedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Zone\",\n          name: \"zone\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"zone\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"None\",\n            children: this.state.zones.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item.ID,\n                children: item.Name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Infrastructure Type\",\n          name: \"infrtype\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"infrtype\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }] // initialValue: this.state.currentData.infrtype,\n\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Infrastructure Type\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"s390x\",\n              children: \"z/VM\"\n            }, \"s390x\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"kvm-x86_64\",\n              children: \"KVM on x84_64\"\n            }, \"x86-64\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"kvm-s390x\",\n              children: \"KVM on Z\"\n            }, \"2\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"LoadBalancer_IP\",\n          name: \"extip\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"extip\", {\n            rules: [],\n            initialValue: this.state.currentData.LoadBalancer\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            ref: c => {\n              this.hostname = c;\n            },\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"High Available\",\n          name: \"haflag\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"haflag\", {\n            rules: [],\n            initialValue: this.state.currentData.Haflag\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"no\",\n            disabled: this.state.isShowEdit,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"yes\",\n              children: \"yes\"\n            }, \"yes\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"no\",\n              children: \"no\"\n            }, \"no\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Number of Workers\",\n          name: \"nworkers\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"nworkers\", {\n            rules: [],\n            initialValue: this.state.isShowEdit ? this.state.currentData.WorkerNum : 2\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Registry\",\n          name: \"registry\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"registry\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"None\",\n            children: this.state.registrys.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Label\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"LB_Flavor\",\n          name: \"lflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"lflavor\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.Flavor\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"LB_Flavor\",\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Master_Flavor\",\n          name: \"mflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"mflavor\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.MasterFlavor\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Master_Flavor\",\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Worker_Flavor\",\n          name: \"wflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"wflavor\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.WorkerFlavor\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Worker_Flavor\",\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Subnet\",\n          name: \"sunbet\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"sunbet\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Subnet\",\n            children: this.state.subnets.map(val => {\n              if (val.Name === \"public\" || val.Name === \"private\" || val.Name === window.localStorage.token) {\n                return /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: val.ID,\n                  children: [val.Name, \"-\", val.Network, val.Gateway.substring(val.Gateway.indexOf(\"/\"))]\n                }, val.ID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 23\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Key\",\n          name: \"key\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"key\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }] // initialValue:\n\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Key\",\n            children: this.state.keys.map((val, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: [val.ID, \" - \", val.Name]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Openshift Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create New Openshift Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifyOpenshifts\"\n})(ModifyOpenshifts);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/openshifts/ModifyOpenshifts.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","InputNumber","editOcpInfor","createOcpApi","getOcpInforById","regListApi","hypersListApi","flavorsListApi","subnetsListApi","keysListApi","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifyOpenshifts","constructor","props","listOpenshifts","history","push","filterZones","initZone","newZone","state","zones","map","item","indexOf","console","log","setState","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","catch","error","value","isShowEdit","openshifts","currentData","registrys","flavors","keys","subnets","that","componentDidMount","_this","isLoaded","hypers","forEach","val","zoneList","Name","Zone","ID","render","getFieldDecorator","rules","required","initialValue","ClusterName","c","hostname","BaseDomain","CreatedAt","UpdatedAt","index","LoadBalancer","Haflag","WorkerNum","Label","length","Flavor","MasterFlavor","WorkerFlavor","window","localStorage","token","Network","Gateway","substring","offset","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message, InputNumber } from \"antd\";\nimport {\n  editOcpInfor,\n  createOcpApi,\n  getOcpInforById,\n} from \"../../service/openshifts\";\nimport { regListApi } from \"../../service/registrys\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass ModifyOpenshifts extends Component {\n  constructor(props) {\n    super(props);\n    //const { getFieldDecorator } = this.props.form;\n    console.log(\"ModifyOcp~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      openshifts: [],\n      currentData: [],\n      registrys: [],\n      flavors: [],\n      keys: [],\n      subnets: [],\n      zones: [],\n    };\n    let that = this;\n    if (props.match.params.id) {\n      getOcpInforById(props.match.params.id).then((res) => {\n        console.log(\"getOcpInforById-res:\", res);\n        that.setState({\n          currentData: res,\n          isShowEdit: true,\n        });\n        console.log(\"getOcpInforById-currentData\", this.state);\n      });\n    }\n  }\n  componentDidMount() {\n    const _this = this;\n    regListApi()\n      .then((res) => {\n        _this.setState({\n          registrys: res.registrys,\n          isLoaded: true,\n        });\n        console.log(\"registrys:\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    flavorsListApi()\n      .then((res) => {\n        _this.setState({\n          flavors: res.flavors,\n          isLoaded: true,\n        });\n        console.log(\"flavors:\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    subnetsListApi()\n      .then((res) => {\n        _this.setState({\n          subnets: res.subnets,\n          isLoaded: true,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    hypersListApi()\n      .then((res) => {\n        _this.setState({\n          hypers: res.hypers,\n          isLoaded: true,\n        });\n        this.state.hypers.forEach((val) => {\n          let zoneList = {\n            Name: val.Zone.Name,\n            ID: val.Zone.ID,\n          };\n          this.state.zones.push(zoneList);\n        });\n        this.filterZones();\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n\n    keysListApi()\n      .then((res) => {\n        console.log(\"componentWillMount-keys:\", res);\n        _this.setState({\n          keys: res.keys,\n          isLoaded: true,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  listOpenshifts = () => {\n    this.props.history.push(\"/openshifts\");\n  };\n  filterZones = () => {\n    var initZone = [];\n    var newZone = [];\n    this.state.zones.map((item) => {\n      if (initZone.indexOf(item[\"Name\"]) === -1) {\n        initZone.push(item[\"Name\"]);\n        newZone.push(item);\n        console.log(\"zonearr\", initZone);\n      }\n      return newZone;\n    });\n    this.setState({\n      zones: newZone,\n    });\n\n    console.log(\"test111\", this.state.zones);\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value-ocp:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          console.log(\"ocp-edit\", this.props.match.params.id, values);\n          editOcpInfor(this.props.match.params.id, values)\n            .then((res) => {\n              console.log(\"ocp-editInsInfor:\", res);\n              this.props.history.push(\"/openshifts\");\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        } else {\n          createOcpApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createOcpApi:\", res);\n              this.props.history.push(\"/openshifts\");\n              // Utils.loadData(this.state.current, this.state.pageSize)\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\n          this.state.isShowEdit\n            ? \"Edit Openshift Cluster\"\n            : \"Create New Openshift Cluster\"\n        }\n        extra={\n          <Button type=\"primary\" size=\"small\" onClick={this.listOpenshifts}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          onSubmit={(e) => {\n            this.handleSubmit(e);\n          }}\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n        >\n          <Form.Item\n            label=\"Cluster Name\"\n            name=\"clustername\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"clustername\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.ClusterName,\n            })(\n              <Input\n                ref={(c) => {\n                  this.hostname = c;\n                }}\n                disabled={this.state.isShowEdit}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Base Domain\"\n            name=\"basedomain\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"basedomain\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.BaseDomain,\n            })(<Input disabled={this.state.isShowEdit} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Created At\"\n            name=\"createdAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"createdAt\", {\n              rules: [],\n              initialValue: this.state.currentData.CreatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"createdAt\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Updated At\"\n            name=\"updatedAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"updatedAt\", {\n              rules: [],\n              initialValue: this.state.currentData.UpdatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"updatedAt\" />)}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Zone\"\n            name=\"zone\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"zone\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select placeholder=\"None\">\n                {this.state.zones.map((item, index) => {\n                  return (\n                    <Select.Option key={index} value={item.ID}>\n                      {item.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Infrastructure Type\"\n            name=\"infrtype\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"infrtype\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              // initialValue: this.state.currentData.infrtype,\n            })(\n              <Select placeholder=\"Infrastructure Type\">\n                <Select.Option key=\"s390x\" value=\"s390x\">\n                  z/VM\n                </Select.Option>\n                <Select.Option key=\"x86-64\" value=\"kvm-x86_64\">\n                  KVM on x84_64\n                </Select.Option>\n                <Select.Option key=\"2\" value=\"kvm-s390x\">\n                  KVM on Z\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"LoadBalancer_IP\"\n            name=\"extip\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"extip\", {\n              rules: [],\n              initialValue: this.state.currentData.LoadBalancer,\n            })(\n              <Input\n                ref={(c) => {\n                  this.hostname = c;\n                }}\n                disabled={this.state.isShowEdit}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"High Available\"\n            name=\"haflag\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"haflag\", {\n              rules: [],\n              initialValue: this.state.currentData.Haflag,\n            })(\n              <Select placeholder=\"no\" disabled={this.state.isShowEdit}>\n                <Select.Option key=\"yes\" value=\"yes\">\n                  yes\n                </Select.Option>\n                <Select.Option key=\"no\" value=\"no\">\n                  no\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Number of Workers\"\n            name=\"nworkers\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"nworkers\", {\n              rules: [],\n              initialValue: this.state.isShowEdit\n                ? this.state.currentData.WorkerNum\n                : 2,\n            })(<InputNumber />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Registry\"\n            name=\"registry\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"registry\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select placeholder=\"None\">\n                {this.state.registrys.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Label}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"LB_Flavor\"\n            name=\"lflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"lflavor\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.Flavor,\n            })(\n              <Select placeholder=\"LB_Flavor\">\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Master_Flavor\"\n            name=\"mflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"mflavor\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.MasterFlavor,\n            })(\n              <Select placeholder=\"Master_Flavor\">\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Worker_Flavor\"\n            name=\"wflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"wflavor\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.WorkerFlavor,\n            })(\n              <Select placeholder=\"Worker_Flavor\">\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Subnet\"\n            name=\"sunbet\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"sunbet\", {\n              rules: [],\n            })(\n              <Select placeholder=\"Subnet\">\n                {this.state.subnets.map((val) => {\n                  if (\n                    val.Name === \"public\" ||\n                    val.Name === \"private\" ||\n                    val.Name === window.localStorage.token\n                  ) {\n                    return (\n                      <Select.Option key={val.ID} value={val.ID}>\n                        {val.Name}-{val.Network}\n                        {val.Gateway.substring(val.Gateway.indexOf(\"/\"))}\n                      </Select.Option>\n                    );\n                  }\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Key\"\n            name=\"key\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"key\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              // initialValue:\n            })(\n              <Select placeholder=\"Key\">\n                {this.state.keys.map((val, index) => {\n                  return (\n                    <Select.Option key={index} value={val.ID}>\n                      {val.ID} - {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Openshift Cluster\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create New Openshift Cluster\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifyOpenshifts\" })(ModifyOpenshifts);\n"]},"metadata":{},"sourceType":"module"}