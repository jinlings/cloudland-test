{"ast":null,"code":"import _classCallCheck from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/emily/cloudland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/import React,{Component}from\"react\";import{Card,Table,Button,Popconfirm,message}from\"antd\";import{gwListApi,delGWInfor}from\"../../service/gateways\";import DataTable from\"../../components/DataTable/DataTable\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Gateways=/*#__PURE__*/function(_Component){_inherits(Gateways,_Component);var _super=_createSuper(Gateways);function Gateways(props){var _this2;_classCallCheck(this,Gateways);_this2=_super.call(this,props);_this2.columns=[{title:\"ID\",dataIndex:\"ID\",key:\"ID\",width:80,align:\"center\"},{title:\"Name\",dataIndex:\"Name\",align:\"center\"},{title:\"Interfaces\",dataIndex:\"Interfaces\",width:140,align:\"center\",render:function render(Interfaces){return/*#__PURE__*/_jsx(\"span\",{children:Interfaces.map(function(iface){return iface.Address.Address+\" \";})});}},{title:\"Subnets\",dataIndex:\"Subnets\",width:130,align:\"center\",render:function render(Subnets){return/*#__PURE__*/_jsx(\"span\",{children:Subnets.map(function(subnet){return subnet.Gateway+\" \";})});}},{title:\"Status\",dataIndex:\"Status\",align:\"center\"},{title:\"Hyper\",dataIndex:\"Hyper + Peer\",align:\"center\"},{title:\"Owner\",dataIndex:\"WorkerNum\",align:\"center\"},{title:\"Zone\",dataIndex:\"Zone.Name\",align:\"center\"},{title:\"Action\",align:\"center\",render:function render(txt,record,index){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{style:{marginTop:\"10px\"},type:\"primary\",size:\"small\",onClick:function onClick(){console.log(\"onClick:\",record);_this2.props.history.push(\"/gateways/new/\"+record.ID);},children:\"Edit\"}),/*#__PURE__*/_jsx(Popconfirm,{title:\"Are you sure to delete?\",onCancel:function onCancel(){console.log(\"cancelled\");},onConfirm:function onConfirm(){console.log(\"onClick-delete:\",record);//this.props.history.push(\"/registrys/new/\" + record.ID);\ndelGWInfor(record.ID).then(function(res){//const _this = this;\nmessage.success(res.Msg);_this2.loadData(_this2.state.current,_this2.state.pageSize);console.log(\"用户~~\",res);console.log(\"用户~~state\",_this2.state);});},children:/*#__PURE__*/_jsx(Button,{style:{margin:\"5px\",marginRight:\"0px\",marginTop:\"10px\"},type:\"danger\",size:\"small\",children:\"Delete\"})})]});}}];_this2.loadData=function(page,pageSize){console.log(\"gw-loadData~~\",page,pageSize);var _this=_assertThisInitialized(_this2);var offset=(page-1)*pageSize;var limit=pageSize;gwListApi(offset,limit).then(function(res){console.log(\"loadData\",res);_this.setState({gateways:res.gateways,isLoaded:true,total:res.total,pageSize:limit,current:page});console.log(\"loadData-page-\",page,_this.state);}).catch(function(error){_this.setState({isLoaded:false,error:error});});};_this2.toSelectchange=function(page,num){console.log(\"toSelectchange\",page,num);var _this=_assertThisInitialized(_this2);var offset=(page-1)*num;var limit=num;console.log(\"gw-toSelectchange~limit:\",offset,limit);gwListApi(offset,limit).then(function(res){console.log(\"loadData\",res);_this.setState({gateways:res.gateways,isLoaded:true,total:res.total,pageSize:limit,current:page});}).catch(function(error){_this.setState({isLoaded:false,error:error});});};_this2.onPaginationChange=function(e){console.log(\"onPaginationChange\",e);_this2.loadData(e,_this2.state.pageSize);};_this2.onShowSizeChange=function(current,pageSize){console.log(\"onShowSizeChange:\",current,pageSize);//当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n_this2.toSelectchange(current,pageSize);};_this2.createGateways=function(){_this2.props.history.push(\"/gateways/new\");};console.log(\"gateways.props:\",_this2.props);_this2.state={gateways:[],isLoaded:false,interfaces:\"\",total:0,pageSize:10,offset:0,pageSizeOptions:[\"5\",\"10\",\"15\",\"20\"],current:1};return _this2;}_createClass(Gateways,[{key:\"componentWillMount\",value://组件初始化的时候执行\nfunction componentWillMount(){var _this=this;//const hyper =''\nconsole.log(\"componentWillMount:\",this.state);gwListApi().then(function(res){_this.setState({gateways:res.gateways,isLoaded:true,total:res.total});//hyper = this.state.gateways.Interfaces[0].Hyper + Interfaces[2].Hyper\nconsole.log(\"gwListApi\",res);}).catch(function(error){_this.setState({isLoaded:false,error:error});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Card,{title:\"Gateway Manage Panel\"+\"(Total: \"+this.state.total+\")\",extra:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:this.createGateways,children:\"Create\"}),children:/*#__PURE__*/_jsx(DataTable,{rowKey:\"ID\",columns:this.columns,dataSource:this.state.gateways,bordered:true,total:this.state.total,pageSize:this.state.pageSize,scroll:{y:600},onPaginationChange:this.onPaginationChange,onShowSizeChange:this.onShowSizeChange,pageSizeOptions:this.state.pageSizeOptions,loading:!this.state.isLoaded})});}}]);return Gateways;}(Component);export default Gateways;","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/gateways/Gateways.jsx"],"names":["React","Component","Card","Table","Button","Popconfirm","message","gwListApi","delGWInfor","DataTable","Gateways","props","columns","title","dataIndex","key","width","align","render","Interfaces","map","iface","Address","Subnets","subnet","Gateway","txt","record","index","marginTop","console","log","history","push","ID","then","res","success","Msg","loadData","state","current","pageSize","margin","marginRight","page","_this","offset","limit","setState","gateways","isLoaded","total","catch","error","toSelectchange","num","onPaginationChange","e","onShowSizeChange","createGateways","interfaces","pageSizeOptions","y"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Card, Table, Button, Popconfirm, message } from \"antd\";\nimport { gwListApi, delGWInfor } from \"../../service/gateways\";\nimport DataTable from \"../../components/DataTable/DataTable\";\n\nclass Gateways extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"gateways.props:\", this.props);\n    this.state = {\n      gateways: [],\n      isLoaded: false,\n      interfaces: \"\",\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1,\n    };\n  }\n  columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"ID\",\n      key: \"ID\",\n      width: 80,\n      align: \"center\",\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"Name\",\n      align: \"center\",\n    },\n    {\n      title: \"Interfaces\",\n      dataIndex: \"Interfaces\",\n      width: 140,\n      align: \"center\",\n      render: (Interfaces) => (\n        <span>\n          {Interfaces.map((iface) => {\n            return iface.Address.Address + \" \";\n          })}\n        </span>\n      ),\n    },\n    {\n      title: \"Subnets\",\n      dataIndex: \"Subnets\",\n      width: 130,\n      align: \"center\",\n      render: (Subnets) => (\n        <span>\n          {Subnets.map((subnet) => {\n            return subnet.Gateway + \" \";\n          })}\n        </span>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"Status\",\n      align: \"center\",\n    },\n    {\n      title: \"Hyper\",\n      dataIndex: \"Hyper + Peer\",\n      align: \"center\",\n    },\n    {\n      title: \"Owner\",\n      dataIndex: \"WorkerNum\",\n      align: \"center\",\n    },\n    {\n      title: \"Zone\",\n      dataIndex: \"Zone.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"Action\",\n      align: \"center\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Button\n              style={{\n                marginTop: \"10px\",\n              }}\n              type=\"primary\"\n              size=\"small\"\n              onClick={() => {\n                console.log(\"onClick:\", record);\n                this.props.history.push(\"/gateways/new/\" + record.ID);\n              }}\n            >\n              Edit\n            </Button>\n            <Popconfirm\n              title=\"Are you sure to delete?\"\n              onCancel={() => {\n                console.log(\"cancelled\");\n              }}\n              onConfirm={() => {\n                console.log(\"onClick-delete:\", record);\n                //this.props.history.push(\"/registrys/new/\" + record.ID);\n                delGWInfor(record.ID).then((res) => {\n                  //const _this = this;\n                  message.success(res.Msg);\n                  this.loadData(this.state.current, this.state.pageSize);\n\n                  console.log(\"用户~~\", res);\n                  console.log(\"用户~~state\", this.state);\n                });\n              }}\n            >\n              <Button\n                style={{\n                  margin: \"5px\",\n                  marginRight: \"0px\",\n                  marginTop: \"10px\",\n                }}\n                type=\"danger\"\n                size=\"small\"\n              >\n                Delete\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n  //组件初始化的时候执行\n  componentWillMount() {\n    const _this = this;\n    //const hyper =''\n    console.log(\"componentWillMount:\", this.state);\n    gwListApi()\n      .then((res) => {\n        _this.setState({\n          gateways: res.gateways,\n          isLoaded: true,\n          total: res.total,\n        });\n        //hyper = this.state.gateways.Interfaces[0].Hyper + Interfaces[2].Hyper\n        console.log(\"gwListApi\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  loadData = (page, pageSize) => {\n    console.log(\"gw-loadData~~\", page, pageSize);\n    const _this = this;\n    const offset = (page - 1) * pageSize;\n    const limit = pageSize;\n    gwListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          gateways: res.gateways,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n        console.log(\"loadData-page-\", page, _this.state);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  toSelectchange = (page, num) => {\n    console.log(\"toSelectchange\", page, num);\n    const _this = this;\n    const offset = (page - 1) * num;\n    const limit = num;\n    console.log(\"gw-toSelectchange~limit:\", offset, limit);\n    gwListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          gateways: res.gateways,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  onPaginationChange = (e) => {\n    console.log(\"onPaginationChange\", e);\n    this.loadData(e, this.state.pageSize);\n  };\n  onShowSizeChange = (current, pageSize) => {\n    console.log(\"onShowSizeChange:\", current, pageSize);\n    //当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n    this.toSelectchange(current, pageSize);\n  };\n  createGateways = () => {\n    this.props.history.push(\"/gateways/new\");\n  };\n\n  render() {\n    return (\n      <Card\n        title={\"Gateway Manage Panel\" + \"(Total: \" + this.state.total + \")\"}\n        extra={\n          <Button type=\"primary\" onClick={this.createGateways}>\n            Create\n          </Button>\n        }\n      >\n        <DataTable\n          rowKey=\"ID\"\n          columns={this.columns}\n          dataSource={this.state.gateways}\n          bordered\n          total={this.state.total}\n          pageSize={this.state.pageSize}\n          scroll={{ y: 600 }}\n          onPaginationChange={this.onPaginationChange}\n          onShowSizeChange={this.onShowSizeChange}\n          pageSizeOptions={this.state.pageSizeOptions}\n          loading={!this.state.isLoaded}\n        />\n      </Card>\n    );\n  }\n}\nexport default Gateways;\n"]},"metadata":{},"sourceType":"module"}