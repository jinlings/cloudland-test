{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/secrules/ModifySecrules.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport { createSecruleApi, getSecruleInforById, editSecruleInfor } from \"../../service/secrules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifySecrules extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listSecrules = () => {\n      let tempSg = this.props.location.pathname.split(\"/\");\n      this.props.history.push(`/secgroups/${tempSg[2]}/secrules`);\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        let tempSg = this.props.location.pathname.split(\"/\");\n\n        if (!err) {\n          console.log(\"handleSubmit-value:\", this.props);\n          console.log(\"handleSubmit-value:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            //const _this = this;\n            editSecruleInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"editSecruleInfor:\", res); // _this.setState({\n              //   isShowEdit: ! this.state.isShowEdit,\n              // });\n\n              this.props.history.push(\"/secgroups\");\n            });\n          } else {\n            console.log(\"before-createSecruleApi:\", values); //   tempString = this.props.location.pathname;\n\n            console.log(\"temp\", tempSg);\n            console.log(\"this.props.location.pathname\", this.props.location.pathname);\n            createSecruleApi(tempSg[2], values).then(res => {\n              console.log(\"handleSubmit-res-createSecruleApi:\", res);\n              this.props.history.push(`/secgroups/${tempSg[2]}/secrules`); //   this.props.history.push(this.props.location.pathname);\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      PortMax: -1,\n      PortMin: -1\n    };\n\n    let _tempSg = this.props.location.pathname.split(\"/\");\n\n    if (props.match.params.id) {\n      console.log(\"props.match.params.id:\", this.props);\n      getSecruleInforById(_tempSg[2], props.match.params.id).then(res => {\n        console.log(\"getSecgroupInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true\n        });\n        console.log(\"getSecgroupInforById-this.state:\", this.state);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Security Rule\" : \"Create New Security Rule \",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.listSecrules,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"RemoteIp\",\n          name: \"remoteip\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"remoteip\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.RemoteIp\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Direction\",\n          name: \"direction\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"direction\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Direction\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Direction\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"ingress\",\n              children: \"ingress\"\n            }, \"ingress\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"egress\",\n              children: \"egress\"\n            }, \"egress\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Protocol\",\n          name: \"protocol\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"protocol\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Protocol\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Protocol\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"tcp\",\n              children: \"tcp\"\n            }, \"tcp\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"udp\",\n              children: \"udp\"\n            }, \"udp\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"icmp\",\n              children: \"icmp\"\n            }, \"icmp\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"vrrp\",\n              children: \"vrrp\"\n            }, \"vrrp\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"PortMin | Type\",\n          name: \"portmin\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"portmin\", {\n            rules: [],\n            initialValue: this.state.isShowEdit && this.state.currentData.PortMin === undefined ? this.state.PortMin : this.state.currentData.PortMin\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"PortMax | Type\",\n          name: \"portmax\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"portmax\", {\n            rules: [],\n            initialValue: this.state.isShowEdit && this.state.currentData.PortMax === undefined ? this.state.PortMax : this.state.currentData.PortMax\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Security Rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create New Security Rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifySecrules\"\n})(ModifySecrules);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/secrules/ModifySecrules.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","createSecruleApi","getSecruleInforById","editSecruleInfor","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifySecrules","constructor","props","listSecrules","tempSg","location","pathname","split","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","catch","error","state","isShowEdit","currentData","PortMax","PortMin","setState","render","getFieldDecorator","rules","required","initialValue","RemoteIp","Direction","Protocol","undefined","offset","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport {\n  createSecruleApi,\n  getSecruleInforById,\n  editSecruleInfor,\n} from \"../../service/secrules\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\n\nclass ModifySecrules extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      PortMax: -1,\n      PortMin: -1,\n    };\n    let tempSg = this.props.location.pathname.split(\"/\");\n    if (props.match.params.id) {\n      console.log(\"props.match.params.id:\", this.props);\n      getSecruleInforById(tempSg[2], props.match.params.id).then((res) => {\n        console.log(\"getSecgroupInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true,\n        });\n        console.log(\"getSecgroupInforById-this.state:\", this.state);\n      });\n    }\n  }\n  listSecrules = () => {\n    let tempSg = this.props.location.pathname.split(\"/\");\n    this.props.history.push(`/secgroups/${tempSg[2]}/secrules`);\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      let tempSg = this.props.location.pathname.split(\"/\");\n      if (!err) {\n        console.log(\"handleSubmit-value:\", this.props);\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          //const _this = this;\n          editSecruleInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"editSecruleInfor:\", res);\n            // _this.setState({\n            //   isShowEdit: ! this.state.isShowEdit,\n            // });\n            this.props.history.push(\"/secgroups\");\n          });\n        } else {\n          console.log(\"before-createSecruleApi:\", values);\n\n          //   tempString = this.props.location.pathname;\n\n          console.log(\"temp\", tempSg);\n          console.log(\n            \"this.props.location.pathname\",\n            this.props.location.pathname\n          );\n          createSecruleApi(tempSg[2], values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createSecruleApi:\", res);\n              this.props.history.push(`/secgroups/${tempSg[2]}/secrules`);\n              //   this.props.history.push(this.props.location.pathname);\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\n          this.state.isShowEdit\n            ? \"Edit Security Rule\"\n            : \"Create New Security Rule \"\n        }\n        extra={\n          <Button type=\"primary\" onClick={this.listSecrules}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"RemoteIp\"\n            name=\"remoteip\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"remoteip\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.RemoteIp,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Direction\"\n            name=\"direction\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"direction\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Direction,\n            })(\n              <Select placeholder=\"Direction\">\n                <Select.Option key=\"ingress\" value=\"ingress\">\n                  ingress\n                </Select.Option>\n                <Select.Option key=\"egress\" value=\"egress\">\n                  egress\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Protocol\"\n            name=\"protocol\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"protocol\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Protocol,\n            })(\n              <Select placeholder=\"Protocol\">\n                <Select.Option key=\"tcp\" value=\"tcp\">\n                  tcp\n                </Select.Option>\n                <Select.Option key=\"udp\" value=\"udp\">\n                  udp\n                </Select.Option>\n                <Select.Option key=\"icmp\" value=\"icmp\">\n                  icmp\n                </Select.Option>\n                <Select.Option key=\"vrrp\" value=\"vrrp\">\n                  vrrp\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"PortMin | Type\"\n            name=\"portmin\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"portmin\", {\n              rules: [],\n              initialValue:\n                this.state.isShowEdit &&\n                this.state.currentData.PortMin === undefined\n                  ? this.state.PortMin\n                  : this.state.currentData.PortMin,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"PortMax | Type\"\n            name=\"portmax\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"portmax\", {\n              rules: [],\n              initialValue:\n                this.state.isShowEdit &&\n                this.state.currentData.PortMax === undefined\n                  ? this.state.PortMax\n                  : this.state.currentData.PortMax,\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Security Rule\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create New Security Rule\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifySecrules\" })(ModifySecrules);\n"]},"metadata":{},"sourceType":"module"}