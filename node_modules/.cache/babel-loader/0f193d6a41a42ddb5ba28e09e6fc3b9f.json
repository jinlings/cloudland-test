{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { GW_LIST_IS_FETCHING, GW_LIST_FETCHED, GW_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  gwList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (gwList, keyword) => {\n  return gwList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Name.toLowerCase().indexOf(keyword) > -1 || item.Status.toLowerCase().indexOf(keyword) > -1 || item.Hyper.toString().indexOf(keyword) > -1);\n};\n\nexport default function RegReducer(state = initialState, action) {\n  switch (action.type) {\n    case GW_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case GW_LIST_FETCHED:\n      return { ...state,\n        // isLoading: action.loading,\n        gwList: action.gwList,\n        filteredList: getFilteredList(action.gwList, state.keyword)\n      };\n\n    case GW_LIST_FILTER:\n      console.log(\"LIST_FILTER-state\", state);\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.gwList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = RegReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/GatewayReducer.jsx"],"names":["GW_LIST_IS_FETCHING","GW_LIST_FETCHED","GW_LIST_FILTER","initialState","gwList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","filter","item","ID","toString","indexOf","Name","toLowerCase","Status","Hyper","RegReducer","state","action","type","loading","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,mBADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,MAAD,EAASK,OAAT,KAAqB;AAC3C,SAAOL,MAAM,CAACO,MAAP,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BN,OAA3B,IAAsC,CAAC,CAAvC,IACAG,IAAI,CAACI,IAAL,CAAUC,WAAV,GAAwBF,OAAxB,CAAgCN,OAAhC,IAA2C,CAAC,CAD5C,IAEAG,IAAI,CAACM,MAAL,CAAYD,WAAZ,GAA0BF,OAA1B,CAAkCN,OAAlC,IAA6C,CAAC,CAF9C,IAGAG,IAAI,CAACO,KAAL,CAAWL,QAAX,GAAsBC,OAAtB,CAA8BN,OAA9B,IAAyC,CAAC,CALvC,CAAP;AAOD,CARD;;AASA,eAAe,SAASW,UAAT,CAAoBC,KAAK,GAAGlB,YAA5B,EAA0CmB,MAA1C,EAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKvB,mBAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELd,QAAAA,SAAS,EAAEe,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKvB,eAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAEL;AACAjB,QAAAA,MAAM,EAAEkB,MAAM,CAAClB,MAHV;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACY,MAAM,CAAClB,MAAR,EAAgBiB,KAAK,CAACZ,OAAtB;AAJxB,OAAP;;AAMF,SAAKP,cAAL;AACEuB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,KAAjC;AACA,aAAO,EACL,GAAGA,KADE;AAELZ,QAAAA,OAAO,EAAEa,MAAM,CAACb,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACW,KAAK,CAACjB,MAAP,EAAekB,MAAM,CAACb,OAAtB;AAHxB,OAAP;;AAKF;AACE,aAAOY,KAAP;AArBJ;AAuBD;KAxBuBD,U","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  GW_LIST_IS_FETCHING,\n  GW_LIST_FETCHED,\n  GW_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  gwList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (gwList, keyword) => {\n  return gwList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Name.toLowerCase().indexOf(keyword) > -1 ||\n      item.Status.toLowerCase().indexOf(keyword) > -1 ||\n      item.Hyper.toString().indexOf(keyword) > -1\n  );\n};\nexport default function RegReducer(state = initialState, action) {\n  switch (action.type) {\n    case GW_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case GW_LIST_FETCHED:\n      return {\n        ...state,\n        // isLoading: action.loading,\n        gwList: action.gwList,\n        filteredList: getFilteredList(action.gwList, state.keyword),\n      };\n    case GW_LIST_FILTER:\n      console.log(\"LIST_FILTER-state\", state);\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.gwList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}