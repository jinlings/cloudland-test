{"ast":null,"code":"import { SECRULE_LIST_FETCHED, SECRULE_LIST_FILTER, SECRULE_LIST_IS_FETCHING } from \"../../constants/actionTypes\";\nimport { secrulesListApi } from \"../../service/secrules\";\nexport const filterRegList = keyword => ({\n  type: SECRULE_LIST_FILTER,\n  keyword\n});\nexport const fetchSecruleList = () => {\n  return dispatch => {\n    dispatch(fetchingSecruleList(true));\n    secrulesListApi().then(res => {\n      console.log(\"regAction-res\", res); // let resData = res.data;\n\n      if (res) {\n        dispatch(fetchingSecruleList(false));\n        dispatch(fetchSecruleListSuccess(res.secrules, false)); //   } else {\n        //     //   dispatch(fetchingUserList(false));\n        //     //   dispatch(fetchUserListFailed(\"\b获取用户列表失败\"));\n      }\n    }); //   .catch((e) => dispatch(fetchUserListFailed(e.message)));\n  };\n};\nexport const fetchSecruleListSuccess = (secruleList, loading) => ({\n  type: SECRULE_LIST_FETCHED,\n  secruleList,\n  loading\n});\nexport const fetchingSecruleList = loading => ({\n  type: SECRULE_LIST_IS_FETCHING,\n  loading\n});","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/actions/SecruleAction.jsx"],"names":["SECRULE_LIST_FETCHED","SECRULE_LIST_FILTER","SECRULE_LIST_IS_FETCHING","secrulesListApi","filterRegList","keyword","type","fetchSecruleList","dispatch","fetchingSecruleList","then","res","console","log","fetchSecruleListSuccess","secrules","secruleList","loading"],"mappings":"AAAA,SACEA,oBADF,EAEEC,mBAFF,EAGEC,wBAHF,QAIO,6BAJP;AAKA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,KAAc;AACzCC,EAAAA,IAAI,EAAEL,mBADmC;AAEzCI,EAAAA;AAFyC,CAAd,CAAtB;AAIP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AACpC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACAN,IAAAA,eAAe,GAAGO,IAAlB,CAAwBC,GAAD,IAAS;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAA7B,EAD8B,CAE9B;;AACA,UAAIA,GAAJ,EAAS;AACPH,QAAAA,QAAQ,CAACC,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACAD,QAAAA,QAAQ,CAACM,uBAAuB,CAACH,GAAG,CAACI,QAAL,EAAe,KAAf,CAAxB,CAAR,CAFO,CAGP;AACA;AACA;AACD;AACF,KAVD,EAFmB,CAanB;AACD,GAdD;AAeD,CAhBM;AAiBP,OAAO,MAAMD,uBAAuB,GAAG,CAACE,WAAD,EAAcC,OAAd,MAA2B;AAChEX,EAAAA,IAAI,EAAEN,oBAD0D;AAEhEgB,EAAAA,WAFgE;AAGhEC,EAAAA;AAHgE,CAA3B,CAAhC;AAKP,OAAO,MAAMR,mBAAmB,GAAIQ,OAAD,KAAc;AAC/CX,EAAAA,IAAI,EAAEJ,wBADyC;AAE/Ce,EAAAA;AAF+C,CAAd,CAA5B","sourcesContent":["import {\n  SECRULE_LIST_FETCHED,\n  SECRULE_LIST_FILTER,\n  SECRULE_LIST_IS_FETCHING,\n} from \"../../constants/actionTypes\";\nimport { secrulesListApi } from \"../../service/secrules\";\n\nexport const filterRegList = (keyword) => ({\n  type: SECRULE_LIST_FILTER,\n  keyword,\n});\nexport const fetchSecruleList = () => {\n  return (dispatch) => {\n    dispatch(fetchingSecruleList(true));\n    secrulesListApi().then((res) => {\n      console.log(\"regAction-res\", res);\n      // let resData = res.data;\n      if (res) {\n        dispatch(fetchingSecruleList(false));\n        dispatch(fetchSecruleListSuccess(res.secrules, false));\n        //   } else {\n        //     //   dispatch(fetchingUserList(false));\n        //     //   dispatch(fetchUserListFailed(\"\b获取用户列表失败\"));\n      }\n    });\n    //   .catch((e) => dispatch(fetchUserListFailed(e.message)));\n  };\n};\nexport const fetchSecruleListSuccess = (secruleList, loading) => ({\n  type: SECRULE_LIST_FETCHED,\n  secruleList,\n  loading,\n});\nexport const fetchingSecruleList = (loading) => ({\n  type: SECRULE_LIST_IS_FETCHING,\n  loading,\n});\n"]},"metadata":{},"sourceType":"module"}