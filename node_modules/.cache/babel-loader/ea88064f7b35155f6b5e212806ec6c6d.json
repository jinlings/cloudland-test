{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { KEY_LIST_IS_FETCHING, KEY_LIST_FETCHED, KEY_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  keyList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (keyList, keyword) => {\n  return keyList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Name.toLowerCase().indexOf(keyword) > -1);\n};\n\nexport default function KeyReducer(state = initialState, action) {\n  switch (action.type) {\n    case KEY_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case KEY_LIST_FETCHED:\n      return { ...state,\n        // isLoading: action.loading,\n        keyList: action.keyList,\n        filteredList: getFilteredList(action.keyList, state.keyword)\n      };\n\n    case KEY_LIST_FILTER:\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.keyList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = KeyReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"KeyReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/KeyReducer.jsx"],"names":["KEY_LIST_IS_FETCHING","KEY_LIST_FETCHED","KEY_LIST_FILTER","initialState","keyList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","filter","item","ID","toString","indexOf","Name","toLowerCase","KeyReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,oBADF,EAEEC,gBAFF,EAGEC,eAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,OAAD,EAAUK,OAAV,KAAsB;AAC5C,SAAOL,OAAO,CAACO,MAAR,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BN,OAA3B,IAAsC,CAAC,CAAvC,IACAG,IAAI,CAACI,IAAL,CAAUC,WAAV,GAAwBF,OAAxB,CAAgCN,OAAhC,IAA2C,CAAC,CAHzC,CAAP;AAKD,CAND;;AAOA,eAAe,SAASS,UAAT,CAAoBC,KAAK,GAAGhB,YAA5B,EAA0CiB,MAA1C,EAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKrB,oBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELZ,QAAAA,SAAS,EAAEa,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKrB,gBAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAEL;AACAf,QAAAA,OAAO,EAAEgB,MAAM,CAAChB,OAHX;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACU,MAAM,CAAChB,OAAR,EAAiBe,KAAK,CAACV,OAAvB;AAJxB,OAAP;;AAMF,SAAKP,eAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELV,QAAAA,OAAO,EAAEW,MAAM,CAACX,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACS,KAAK,CAACf,OAAP,EAAgBgB,MAAM,CAACX,OAAvB;AAHxB,OAAP;;AAKF;AACE,aAAOU,KAAP;AApBJ;AAsBD;KAvBuBD,U","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  KEY_LIST_IS_FETCHING,\n  KEY_LIST_FETCHED,\n  KEY_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  keyList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (keyList, keyword) => {\n  return keyList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Name.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function KeyReducer(state = initialState, action) {\n  switch (action.type) {\n    case KEY_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case KEY_LIST_FETCHED:\n      return {\n        ...state,\n        // isLoading: action.loading,\n        keyList: action.keyList,\n        filteredList: getFilteredList(action.keyList, state.keyword),\n      };\n    case KEY_LIST_FILTER:\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.keyList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}