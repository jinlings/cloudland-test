{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/instances/Instances.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Card, Button, Popconfirm, Row, Col, Menu, Dropdown, message, Tooltip, Input } from \"antd\";\nimport { insListApi, delInsInfor, getInsInforById, editInsInfor } from \"../../service/instances\";\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport InstModal from \"./InstModal\";\nimport \"./instances.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nclass Instances extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: \"ID\",\n      key: \"ID\",\n      width: 60,\n      align: \"center\",\n      dataIndex: \"ID\"\n    }, {\n      title: \"HostName\",\n      dataIndex: \"Hostname\",\n      align: \"center\"\n    }, {\n      title: \"Flavor\",\n      dataIndex: \"Flavor.Name\",\n      align: \"center\"\n    }, {\n      title: \"Image\",\n      dataIndex: \"Image.Name\",\n      align: \"center\"\n    }, {\n      title: \"IP Address\",\n      dataIndex: \"Interfaces\",\n      key: Math.random(),\n      align: \"center\",\n      render: Interfaces => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Interfaces.map(iface => {\n          return iface.Address.Address + \" \";\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: \"Console\",\n      dataIndex: \"\",\n      align: \"center\"\n    }, {\n      title: \"Status\",\n      align: \"center\",\n      width: \"60px\",\n      render: record => {\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: record.Reason,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#1890ff\"\n            },\n            children: record.Status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      title: \"Hyper\",\n      dataIndex: \"Hyper\",\n      align: \"center\",\n      className: this.props.loginInfo.isAdmin ? \"\" : \"columnHidden\"\n    }, {\n      title: \"Owner\",\n      dataIndex: \"OwnerInfo.name\",\n      align: \"center\",\n      className: this.props.loginInfo.isAdmin ? \"\" : \"columnHidden\"\n    }, {\n      title: \"Zone\",\n      dataIndex: \"Zone.Name\",\n      align: \"center\"\n    }, {\n      title: \"Action\",\n      align: \"center\",\n      render: (txt, record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actionStyle\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Button, {\n            type: \"primary\",\n            onClick: () => {\n              console.log(\"onClick:\", record);\n              this.props.history.push(\"/instances/new/\" + record.ID);\n            },\n            overlay: this.menu(record.ID),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"Are you sure to delete?\",\n            onCancel: () => {\n              console.log(\"cancelled\");\n            },\n            onConfirm: () => {\n              console.log(\"onClick-delete:\", record);\n              delInsInfor(record.ID).then(res => {\n                message.success(res.Msg);\n                this.loadData(this.state.current, this.state.pageSize);\n                console.log(\"用户~~\", res);\n                console.log(\"用户~~state\", this.state);\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: \"5px\",\n                marginRight: \"0px\",\n                marginTop: \"10px\",\n                height: \"32px\"\n              },\n              type: \"danger\",\n              size: \"small\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this);\n      }\n    }];\n\n    this.menu = r => /*#__PURE__*/_jsxDEV(Menu, {\n      onClick: this.handleModal.bind(this, r),\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Change Hostname\"\n      }, \"changeHostname\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Migrate Instance\"\n      }, \"migrateIns\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Resize Instance\"\n      }, \"resizeIns\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Change Status\"\n      }, \"changeStatus\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Start VM\"\n      }, \"startVm\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Stop VM\"\n      }, \"stopVm\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }, this);\n\n    this.handleModal = (id, {\n      key\n    }) => {\n      console.log(\"handleModal-key\", key);\n      this.handleChange(id);\n      console.log(\"handleModal\", id);\n\n      if (key === \"changeHostname\" || key === \"migrateIns\" || key === \"resizeIns\") {\n        this.setState({\n          visible: !this.state.visible\n        });\n      } else if (key === \"changeStatus\") {\n        this.setState({\n          visible: !this.state.visible,\n          flag: \"ChangeStatus\"\n        });\n      } else if (key === \"startVm\") {\n        this.setState({\n          flag: \"ChangeStatus\",\n          action: \"start\"\n        }, () => {\n          insListApi({\n            flag: this.state.flag,\n            action: this.state.action\n          }).then(res => {\n            console.log(\"startVm\", res);\n          }).catch(error => {\n            console.log(error);\n          });\n          message.success(\"Start VM successfully\");\n        });\n      } else {\n        this.setState({\n          flag: \"ChangeStatus\",\n          action: \"shutdown\"\n        }, () => {\n          insListApi({\n            flag: this.state.flag,\n            action: this.state.action\n          }).then(res => {\n            console.log(\"stopVm\", res);\n          }).catch(error => {\n            console.log(error);\n          });\n          message.success(\"Stop VM successfully\");\n        });\n      }\n\n      if (key) {\n        switch (key) {\n          case \"changeHostname\":\n            return this.setState({\n              menuKey: key,\n              title: \"Change Hostname\"\n            });\n\n          case \"migrateIns\":\n            return this.setState({\n              menuKey: key,\n              title: \"Migrate Instance\"\n            });\n\n          case \"resizeIns\":\n            return this.setState({\n              menuKey: key,\n              title: \"Resize Instance\"\n            });\n\n          case \"changeStatus\":\n            return this.setState({\n              title: \"Change Status\"\n            });\n\n          case \"startVm\":\n            return this.setState({\n              title: \"Start VM\"\n            });\n\n          case \"stopVm\":\n            return this.setState({\n              title: \"Stop VM\"\n            });\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.handleChange = id => {\n      getInsInforById(id).then(res => {\n        console.log(\"handleChange-getInsInforById-res:\", res);\n        this.setState(sta => sta.everyData = res.instance);\n        console.log(\"handleChange-state.everyData\", this.state);\n      });\n    };\n\n    this.onCancel = () => {\n      console.log(\"cancel\");\n      this.setState({\n        visible: false,\n        key: Math.random()\n      });\n    };\n\n    this.handleOk = () => {\n      console.log(\"ok\");\n      this.setState({\n        visible: false,\n        key: Math.random()\n      });\n    };\n\n    this.loadData = (page, pageSize) => {\n      console.log(\"ins-loadData~~\", page, pageSize);\n\n      const _this = this;\n\n      const offset = (page - 1) * pageSize;\n      const limit = pageSize;\n      insListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n\n        console.log(\"loadData-page-\", page, _this.state);\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.toSelectchange = (page, num) => {\n      console.log(\"toSelectchange\", page, num);\n\n      const _this = this;\n\n      const offset = (page - 1) * num;\n      const limit = num;\n      console.log(\"instance-toSelectchange~limit:\", offset, limit);\n      insListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.onPaginationChange = e => {\n      console.log(\"onPaginationChange\", e);\n      this.loadData(e, this.state.pageSize);\n    };\n\n    this.onShowSizeChange = (current, pageSize) => {\n      console.log(\"onShowSizeChange:\", current, pageSize); //当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n\n      this.toSelectchange(current, pageSize);\n    };\n\n    this.createInstances = () => {\n      this.props.history.push(\"/instances/new\");\n    };\n\n    this.modalFormList = data => {\n      console.log(\"instance-modalFormList\", data);\n      console.log(\"key-modalFormList\", this.state.menuKey);\n      const modalFormList = [{\n        type: \"INPUT\",\n        label: \"Hostname\",\n        name: \"hostname\",\n        field: \"Change Hostname\",\n        placeholder: \"Please input Hostname\",\n        width: \"90%\",\n        initialValue: data.Hostname,\n        id: data.ID\n      }, {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Hyper\",\n        name: \"hyper\",\n        field: \"Migrate Instance\",\n        // disabled:true,\n        initialValue: data.Hyper,\n        id: data.ID\n      }, {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Flavor\",\n        field: \"Resize Instance\",\n        name: \"flavor\",\n        initialValue: data.FlavorID,\n        id: data.ID\n      }, {\n        type: \"SELECT\",\n        label: \"Action\",\n        name: \"action\",\n        field: \"Change Status\",\n        placeholder: \"Please Select Status\",\n        width: \"90%\",\n        // disabled:true,\n        initialValue: data.Status,\n        id: data.ID\n      }];\n      return modalFormList;\n    };\n\n    this.handleSubmit = data => {\n      const id = this.state.everyData && this.state.everyData.ID;\n\n      if (id) {\n        const hostname = this.state.everyData && this.state.everyData.Hostname;\n        const hyper = this.state.everyData && this.state.everyData.Hyper;\n        const action = this.state.everyData && this.state.everyData.Status;\n        const flavor = this.state.everyData && this.state.everyData.FlavorID;\n        let ifaces = [];\n        this.state.everyData && this.state.everyData.Interfaces.map(item => {\n          ifaces.push(`${item.Address.SubnetID}`);\n          return ifaces;\n        });\n        let initInstance = {};\n        initInstance[\"hostname\"] = hostname;\n        initInstance[\"hyper\"] = hyper;\n        initInstance[\"action\"] = action;\n        initInstance[\"flavor\"] = flavor;\n        initInstance[\"ifaces\"] = ifaces;\n        this.setState({\n          updateInstance: initInstance\n        }, () => {\n          if (data.hostname) {\n            initInstance.hostname = data.hostname;\n          } else if (data.hyper) {\n            initInstance.hyper = data.hyper;\n          } else if (data.flavor) {\n            initInstance.flavor = data.flavor;\n          } else if (data.action) {\n            initInstance.action = data.action;\n          }\n\n          let dataInstance = Object.assign({}, this.state.updateInstance, initInstance, data);\n          console.log(\"dataInstance\", dataInstance);\n          this.handleUpdateList(id, dataInstance);\n        });\n      }\n    };\n\n    this.handleUpdateList = (id, paramsObj) => {\n      console.log(\"hangleUpdateList\", paramsObj, id);\n\n      if (id) {\n        editInsInfor(id, paramsObj).then(res => {\n          // let _json = res.data;\n          // if (_json.return_code === \"0\") {\n          console.log(\"handleUpdateList-editInsInfor:\", res); // } else {\n          //   message.error(res.message);\n          // }\n\n          this.loadData(this.state.current, this.state.pageSize);\n        }).catch(err => {\n          console.log(\"handleUpdateList-error:\", err);\n        });\n      }\n\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.filter = event => {\n      this.props.handleFilterInsList(event.target.value);\n    };\n\n    this.state = {\n      updateInstance: {},\n      selectedRowKeys: [],\n      instances: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1,\n      visible: false,\n      everyData: {},\n      menuKey: \"\",\n      flag: \"\",\n      action: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      insList\n    } = this.props.ins;\n    const {\n      handleFetchInsList\n    } = this.props;\n\n    if (!insList || insList.length === 0) {\n      handleFetchInsList();\n    }\n  }\n\n  render() {\n    const {\n      data,\n      everyData\n    } = this.state;\n    console.log(data, \"data\");\n    const {\n      filteredList,\n      isLoading\n    } = this.props.ins;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Instance Manage Panel\" + \"(Total: \" + filteredList.length + \")\",\n            extra: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                placeholder: \"Search...\",\n                onChange: this.filter,\n                enterButton: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  float: \"right\",\n                  paddingLeft: \"10px\",\n                  paddingRight: \"10px\"\n                },\n                type: \"primary\",\n                onClick: this.createInstances,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                children: [/*#__PURE__*/_jsxDEV(DataTable, {\n                  rowKey: \"ID\" // columns={loginInfo.isAdmin ? this.columns : this.columns2}\n                  ,\n                  columns: this.columns,\n                  dataSource: filteredList,\n                  bordered: true,\n                  total: filteredList.length,\n                  pageSize: this.state.pageSize // scroll={{ y: 600, x: 600 }}\n                  ,\n                  onPaginationChange: this.onPaginationChange,\n                  onShowSizeChange: this.onShowSizeChange,\n                  pageSizeOptions: this.state.pageSizeOptions,\n                  loading: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InstModal, {\n                  visible: this.state.visible,\n                  modalFormList: this.modalFormList(everyData),\n                  title: this.state.title,\n                  submit: this.handleSubmit.bind(this),\n                  close: () => {\n                    this.setState({\n                      visible: false,\n                      everyData: {}\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  ins,\n  loginInfo\n}) => {\n  console.log(\"mapStateToProps-state\", ins);\n  return {\n    ins,\n    loginInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleFetchInsList: () => dispatch(fetchInsList()),\n    handleFilterInsList: keyword => dispatch(filterInsList(keyword))\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(Instances);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/instances/Instances.jsx"],"names":["React","Component","Card","Button","Popconfirm","Row","Col","Menu","Dropdown","message","Tooltip","Input","insListApi","delInsInfor","getInsInforById","editInsInfor","DataTable","compose","withRouter","connect","InstModal","Search","Instances","constructor","props","columns","title","key","width","align","dataIndex","Math","random","render","Interfaces","map","iface","Address","record","Reason","color","Status","className","loginInfo","isAdmin","txt","index","console","log","history","push","ID","menu","then","res","success","Msg","loadData","state","current","pageSize","margin","marginRight","marginTop","height","r","handleModal","bind","id","handleChange","setState","visible","flag","action","catch","error","menuKey","sta","everyData","instance","onCancel","handleOk","page","_this","offset","limit","instances","isLoaded","total","toSelectchange","num","onPaginationChange","e","onShowSizeChange","createInstances","modalFormList","data","type","label","name","field","placeholder","initialValue","Hostname","Hyper","FlavorID","handleSubmit","hostname","hyper","flavor","ifaces","item","SubnetID","initInstance","updateInstance","dataInstance","Object","assign","handleUpdateList","paramsObj","err","filter","event","handleFilterInsList","target","value","selectedRowKeys","pageSizeOptions","componentDidMount","insList","ins","handleFetchInsList","length","filteredList","isLoading","float","paddingLeft","paddingRight","mapStateToProps","mapDispatchToProps","dispatch","fetchInsList","keyword","filterInsList"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Card,\n  Button,\n  Popconfirm,\n  Row,\n  Col,\n  Menu,\n  Dropdown,\n  message,\n  Tooltip,\n  Input,\n} from \"antd\";\nimport {\n  insListApi,\n  delInsInfor,\n  getInsInforById,\n  editInsInfor,\n} from \"../../service/instances\";\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport InstModal from \"./InstModal\";\nimport \"./instances.css\";\nconst { Search } = Input;\nclass Instances extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateInstance: {},\n      selectedRowKeys: [],\n      instances: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1,\n      visible: false,\n      everyData: {},\n      menuKey: \"\",\n      flag: \"\",\n      action: \"\",\n    };\n  }\n\n  columns = [\n    {\n      title: \"ID\",\n      key: \"ID\",\n      width: 60,\n      align: \"center\",\n      dataIndex: \"ID\",\n    },\n    {\n      title: \"HostName\",\n      dataIndex: \"Hostname\",\n      align: \"center\",\n    },\n    {\n      title: \"Flavor\",\n      dataIndex: \"Flavor.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"Image\",\n      dataIndex: \"Image.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"IP Address\",\n      dataIndex: \"Interfaces\",\n      key: Math.random(),\n      align: \"center\",\n      render: (Interfaces) => (\n        <span>\n          {Interfaces.map((iface) => {\n            return iface.Address.Address + \" \";\n          })}\n        </span>\n      ),\n    },\n    {\n      title: \"Console\",\n      dataIndex: \"\",\n      align: \"center\",\n    },\n    {\n      title: \"Status\",\n      align: \"center\",\n      width: \"60px\",\n      render: (record) => {\n        return (\n          <Tooltip title={record.Reason}>\n            <span style={{ color: \"#1890ff\" }}>{record.Status}</span>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: \"Hyper\",\n      dataIndex: \"Hyper\",\n      align: \"center\",\n      className: this.props.loginInfo.isAdmin ? \"\" : \"columnHidden\",\n    },\n    {\n      title: \"Owner\",\n      dataIndex: \"OwnerInfo.name\",\n      align: \"center\",\n      className: this.props.loginInfo.isAdmin ? \"\" : \"columnHidden\",\n    },\n    {\n      title: \"Zone\",\n      dataIndex: \"Zone.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"Action\",\n      align: \"center\",\n      render: (txt, record, index) => {\n        return (\n          <div className=\"actionStyle\">\n            <Dropdown.Button\n              type=\"primary\"\n              onClick={() => {\n                console.log(\"onClick:\", record);\n                this.props.history.push(\"/instances/new/\" + record.ID);\n              }}\n              overlay={this.menu(record.ID)}\n            >\n              Edit\n            </Dropdown.Button>\n            <Popconfirm\n              title=\"Are you sure to delete?\"\n              onCancel={() => {\n                console.log(\"cancelled\");\n              }}\n              onConfirm={() => {\n                console.log(\"onClick-delete:\", record);\n                delInsInfor(record.ID).then((res) => {\n                  message.success(res.Msg);\n                  this.loadData(this.state.current, this.state.pageSize);\n\n                  console.log(\"用户~~\", res);\n                  console.log(\"用户~~state\", this.state);\n                });\n              }}\n            >\n              <Button\n                style={{\n                  margin: \"5px\",\n                  marginRight: \"0px\",\n                  marginTop: \"10px\",\n                  height: \"32px\",\n                }}\n                type=\"danger\"\n                size=\"small\"\n              >\n                Delete\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n  menu = (r) => (\n    <Menu onClick={this.handleModal.bind(this, r)}>\n      <Menu.Item key=\"changeHostname\">Change Hostname</Menu.Item>\n      <Menu.Item key=\"migrateIns\">Migrate Instance</Menu.Item>\n      <Menu.Item key=\"resizeIns\">Resize Instance</Menu.Item>\n      <Menu.Item key=\"changeStatus\">Change Status</Menu.Item>\n      <Menu.Item key=\"startVm\">Start VM</Menu.Item>\n      <Menu.Item key=\"stopVm\">Stop VM</Menu.Item>\n    </Menu>\n  );\n\n  handleModal = (id, { key }) => {\n    console.log(\"handleModal-key\", key);\n    this.handleChange(id);\n    console.log(\"handleModal\", id);\n    if (\n      key === \"changeHostname\" ||\n      key === \"migrateIns\" ||\n      key === \"resizeIns\"\n    ) {\n      this.setState({\n        visible: !this.state.visible,\n      });\n    } else if (key === \"changeStatus\") {\n      this.setState({\n        visible: !this.state.visible,\n        flag: \"ChangeStatus\",\n      });\n    } else if (key === \"startVm\") {\n      this.setState(\n        {\n          flag: \"ChangeStatus\",\n          action: \"start\",\n        },\n        () => {\n          insListApi({ flag: this.state.flag, action: this.state.action })\n            .then((res) => {\n              console.log(\"startVm\", res);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n          message.success(\"Start VM successfully\");\n        }\n      );\n    } else {\n      this.setState(\n        {\n          flag: \"ChangeStatus\",\n          action: \"shutdown\",\n        },\n        () => {\n          insListApi({ flag: this.state.flag, action: this.state.action })\n            .then((res) => {\n              console.log(\"stopVm\", res);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n          message.success(\"Stop VM successfully\");\n        }\n      );\n    }\n\n    if (key) {\n      switch (key) {\n        case \"changeHostname\":\n          return this.setState({\n            menuKey: key,\n            title: \"Change Hostname\",\n          });\n        case \"migrateIns\":\n          return this.setState({\n            menuKey: key,\n            title: \"Migrate Instance\",\n          });\n        case \"resizeIns\":\n          return this.setState({\n            menuKey: key,\n            title: \"Resize Instance\",\n          });\n        case \"changeStatus\":\n          return this.setState({\n            title: \"Change Status\",\n          });\n        case \"startVm\":\n          return this.setState({\n            title: \"Start VM\",\n          });\n        case \"stopVm\":\n          return this.setState({\n            title: \"Stop VM\",\n          });\n        default:\n          return null;\n      }\n    }\n  };\n  handleChange = (id) => {\n    getInsInforById(id).then((res) => {\n      console.log(\"handleChange-getInsInforById-res:\", res);\n      this.setState((sta) => (sta.everyData = res.instance));\n      console.log(\"handleChange-state.everyData\", this.state);\n    });\n  };\n  onCancel = () => {\n    console.log(\"cancel\");\n    this.setState({\n      visible: false,\n      key: Math.random(),\n    });\n  };\n  handleOk = () => {\n    console.log(\"ok\");\n    this.setState({\n      visible: false,\n      key: Math.random(),\n    });\n  };\n  componentDidMount() {\n    const { insList } = this.props.ins;\n    const { handleFetchInsList } = this.props;\n    if (!insList || insList.length === 0) {\n      handleFetchInsList();\n    }\n  }\n  loadData = (page, pageSize) => {\n    console.log(\"ins-loadData~~\", page, pageSize);\n    const _this = this;\n    const offset = (page - 1) * pageSize;\n    const limit = pageSize;\n    insListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n        console.log(\"loadData-page-\", page, _this.state);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  toSelectchange = (page, num) => {\n    console.log(\"toSelectchange\", page, num);\n    const _this = this;\n    const offset = (page - 1) * num;\n    const limit = num;\n    console.log(\"instance-toSelectchange~limit:\", offset, limit);\n    insListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  onPaginationChange = (e) => {\n    console.log(\"onPaginationChange\", e);\n    this.loadData(e, this.state.pageSize);\n  };\n  onShowSizeChange = (current, pageSize) => {\n    console.log(\"onShowSizeChange:\", current, pageSize);\n    //当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n    this.toSelectchange(current, pageSize);\n  };\n\n  createInstances = () => {\n    this.props.history.push(\"/instances/new\");\n  };\n\n  modalFormList = (data) => {\n    console.log(\"instance-modalFormList\", data);\n    console.log(\"key-modalFormList\", this.state.menuKey);\n    const modalFormList = [\n      {\n        type: \"INPUT\",\n        label: \"Hostname\",\n        name: \"hostname\",\n        field: \"Change Hostname\",\n        placeholder: \"Please input Hostname\",\n        width: \"90%\",\n        initialValue: data.Hostname,\n        id: data.ID,\n      },\n      {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Hyper\",\n        name: \"hyper\",\n        field: \"Migrate Instance\",\n        // disabled:true,\n        initialValue: data.Hyper,\n        id: data.ID,\n      },\n      {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Flavor\",\n        field: \"Resize Instance\",\n        name: \"flavor\",\n        initialValue: data.FlavorID,\n        id: data.ID,\n      },\n      {\n        type: \"SELECT\",\n        label: \"Action\",\n        name: \"action\",\n        field: \"Change Status\",\n        placeholder: \"Please Select Status\",\n        width: \"90%\",\n        // disabled:true,\n        initialValue: data.Status,\n        id: data.ID,\n      },\n    ];\n    return modalFormList;\n  };\n  handleSubmit = (data) => {\n    const id = this.state.everyData && this.state.everyData.ID;\n    if (id) {\n      const hostname = this.state.everyData && this.state.everyData.Hostname;\n      const hyper = this.state.everyData && this.state.everyData.Hyper;\n      const action = this.state.everyData && this.state.everyData.Status;\n      const flavor = this.state.everyData && this.state.everyData.FlavorID;\n      let ifaces = [];\n\n      this.state.everyData &&\n        this.state.everyData.Interfaces.map((item) => {\n          ifaces.push(`${item.Address.SubnetID}`);\n          return ifaces;\n        });\n\n      let initInstance = {};\n      initInstance[\"hostname\"] = hostname;\n      initInstance[\"hyper\"] = hyper;\n      initInstance[\"action\"] = action;\n      initInstance[\"flavor\"] = flavor;\n      initInstance[\"ifaces\"] = ifaces;\n      this.setState(\n        {\n          updateInstance: initInstance,\n        },\n        () => {\n          if (data.hostname) {\n            initInstance.hostname = data.hostname;\n          } else if (data.hyper) {\n            initInstance.hyper = data.hyper;\n          } else if (data.flavor) {\n            initInstance.flavor = data.flavor;\n          } else if (data.action) {\n            initInstance.action = data.action;\n          }\n          let dataInstance = Object.assign(\n            {},\n            this.state.updateInstance,\n            initInstance,\n            data\n          );\n          console.log(\"dataInstance\", dataInstance);\n          this.handleUpdateList(id, dataInstance);\n        }\n      );\n    }\n  };\n  handleUpdateList = (id, paramsObj) => {\n    console.log(\"hangleUpdateList\", paramsObj, id);\n    if (id) {\n      editInsInfor(id, paramsObj)\n        .then((res) => {\n          // let _json = res.data;\n          // if (_json.return_code === \"0\") {\n          console.log(\"handleUpdateList-editInsInfor:\", res);\n          // } else {\n          //   message.error(res.message);\n          // }\n          this.loadData(this.state.current, this.state.pageSize);\n        })\n        .catch((err) => {\n          console.log(\"handleUpdateList-error:\", err);\n        });\n    }\n\n    this.setState({\n      visible: false,\n    });\n  };\n  filter = (event) => {\n    this.props.handleFilterInsList(event.target.value);\n  };\n  render() {\n    const { data, everyData } = this.state;\n    console.log(data, \"data\");\n    const { filteredList, isLoading } = this.props.ins;\n    return (\n      <div>\n        <Row>\n          <Col span={24}>\n            <Card\n              title={\n                \"Instance Manage Panel\" + \"(Total: \" + filteredList.length + \")\"\n              }\n              extra={\n                <div>\n                  <Search\n                    placeholder=\"Search...\"\n                    onChange={this.filter}\n                    enterButton\n                  />\n                  <Button\n                    style={{\n                      float: \"right\",\n                      paddingLeft: \"10px\",\n                      paddingRight: \"10px\",\n                    }}\n                    type=\"primary\"\n                    onClick={this.createInstances}\n                  >\n                    Create\n                  </Button>\n                </div>\n              }\n            >\n              <Row>\n                <Col span={24}>\n                  <DataTable\n                    rowKey=\"ID\"\n                    // columns={loginInfo.isAdmin ? this.columns : this.columns2}\n                    columns={this.columns}\n                    dataSource={filteredList}\n                    bordered\n                    total={filteredList.length}\n                    pageSize={this.state.pageSize}\n                    // scroll={{ y: 600, x: 600 }}\n                    onPaginationChange={this.onPaginationChange}\n                    onShowSizeChange={this.onShowSizeChange}\n                    pageSizeOptions={this.state.pageSizeOptions}\n                    loading={isLoading}\n                  />\n                  <InstModal\n                    visible={this.state.visible}\n                    modalFormList={this.modalFormList(everyData)}\n                    title={this.state.title}\n                    submit={this.handleSubmit.bind(this)}\n                    close={() => {\n                      this.setState({\n                        visible: false,\n                        everyData: {},\n                      });\n                    }}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ ins, loginInfo }) => {\n  console.log(\"mapStateToProps-state\", ins);\n  return {\n    ins,\n    loginInfo,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleFetchInsList: () => dispatch(fetchInsList()),\n    handleFilterInsList: (keyword) => dispatch(filterInsList(keyword)),\n  };\n};\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Instances);\n"]},"metadata":{},"sourceType":"module"}