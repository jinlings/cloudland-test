{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/subnets/ModifySubnets.jsx\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport React, { Component } from \"react\";\nimport { createSubApi, editSubInfor, getSubInforById } from \"../../service/subnets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifySubnets extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listSubnets = () => {\n      this.props.history.push(\"/subnets\");\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            //const _this = this;\n            editSubInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"editSubInfor:\", res); // _this.setState({\n              //   isShowEdit: ! this.state.isShowEdit,\n              // });\n\n              this.props.history.push(\"/subnets\");\n            });\n          } else {\n            values.dns = values.dns === undefined ? this.state.dns : values.dns;\n            values.dhcp = values.dhcp === undefined ? this.state.dhcp : values.dhcp;\n            values.domain = values.domain === undefined ? this.state.domain : values.domain;\n            values.routes = values.routes === undefined ? this.state.routes : values.routes;\n            values.rtype = values.rtype === undefined ? this.state.rtype : values.rtype;\n            values.vSwitch = values.vSwitch === undefined ? this.state.vSwitch : values.vSwitch;\n            values.vlan = values.routes === undefined ? this.state.vlan : values.vlan;\n            createSubApi(values).then(res => {\n              console.log(\"handleSubmit-res-createSubApi:\", res);\n              this.props.history.push(\"/subnets\");\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      zones: [],\n      dns: \"\",\n      dhcp: \"yes\",\n      domain: \"\",\n      routes: \"\",\n      rtype: \"\",\n      vSwitch: \"\",\n      vlan: \"\"\n    };\n\n    if (props.match.params.id) {\n      getSubInforById(props.match.params.id).then(res => {\n        console.log(\"getSubInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Create New Subnet\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.listSubnets,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this),\n      children: [\" \", /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"name\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Name\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Netmask\",\n          name: \"netmask\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"netmask\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Netmask\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Network\",\n          name: \"network\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"network\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Network\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Zones\",\n          name: \"zones\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"zones\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.zones.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item.ID,\n                children: item.Name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Gateway\",\n          name: \"gateway\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={!this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"gateway\", {\n            rules: [],\n            initialValue: this.state.currentData.gateways\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Start\",\n          name: \"start\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={!this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"start\", {\n            rules: [] //   initialValue: this.state.currentData.start,\n\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"End\",\n          name: \"end\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"end\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name Server\",\n          name: \"dns\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"dns\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Base Domain\",\n          name: \"domain\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"domain\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Dhcp\",\n          name: \"dhcp\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"dhcp\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"yes\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"yes\",\n              children: \"yes\"\n            }, \"yes\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"no\",\n              children: \"no\"\n            }, \"no\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"vSwitch\",\n          name: \"vSwitch\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"vSwitch\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Vlan (admin only)\",\n          name: \"vlan\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"vlan\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Routing Type (admin only)\",\n          name: \"rtype\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"rtype\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"internal\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"private\",\n              children: \"private\"\n            }, \"private\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"public\",\n              children: \"public\"\n            }, \"public\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"internal\",\n              children: \"internal\"\n            }, \"internal\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Routes (admin only)\",\n          name: \"routes\",\n          labelCol: { ...layoutForm.labelCol\n          } // hidden={this.state.isShowEdit}\n          ,\n          children: this.props.form.getFieldDecorator(\"routes\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"eg. 10.0.0.0/8:10.5.5.5 172.0.0.0/16:172.5.5.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Subnet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create New Subnet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifySubnets\"\n})(ModifySubnets);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/subnets/ModifySubnets.jsx"],"names":["Form","Card","Input","Select","Button","message","React","Component","createSubApi","editSubInfor","getSubInforById","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifySubnets","constructor","props","listSubnets","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","dns","undefined","state","dhcp","domain","routes","rtype","vSwitch","vlan","catch","error","isShowEdit","currentData","zones","setState","render","getFieldDecorator","rules","required","initialValue","Name","Netmask","Network","map","item","index","ID","gateways","offset","create","name"],"mappings":"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","sourcesContent":["import { Form, Card, Input, Select, Button, message } from \"antd\";\nimport React, { Component } from \"react\";\nimport {\n  createSubApi,\n  editSubInfor,\n  getSubInforById,\n} from \"../../service/subnets\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass ModifySubnets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      zones: [],\n      dns: \"\",\n      dhcp: \"yes\",\n      domain: \"\",\n      routes: \"\",\n      rtype: \"\",\n      vSwitch: \"\",\n      vlan: \"\",\n    };\n    if (props.match.params.id) {\n      getSubInforById(props.match.params.id).then((res) => {\n        console.log(\"getSubInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true,\n        });\n      });\n    }\n  }\n  listSubnets = () => {\n    this.props.history.push(\"/subnets\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          //const _this = this;\n          editSubInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"editSubInfor:\", res);\n            // _this.setState({\n            //   isShowEdit: ! this.state.isShowEdit,\n            // });\n            this.props.history.push(\"/subnets\");\n          });\n        } else {\n          values.dns = values.dns === undefined ? this.state.dns : values.dns;\n          values.dhcp =\n            values.dhcp === undefined ? this.state.dhcp : values.dhcp;\n          values.domain =\n            values.domain === undefined ? this.state.domain : values.domain;\n          values.routes =\n            values.routes === undefined ? this.state.routes : values.routes;\n          values.rtype =\n            values.rtype === undefined ? this.state.rtype : values.rtype;\n          values.vSwitch =\n            values.vSwitch === undefined ? this.state.vSwitch : values.vSwitch;\n          values.vlan =\n            values.routes === undefined ? this.state.vlan : values.vlan;\n          createSubApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createSubApi:\", res);\n              this.props.history.push(\"/subnets\");\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\"Create New Subnet\"}\n        extra={\n          <Button type=\"primary\" size=\"small\" onClick={this.listSubnets}>\n            Return\n          </Button>\n        }\n      >\n        {\" \"}\n        <Form\n          layout=\"horizontal\"\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"name\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Name,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Netmask\"\n            name=\"netmask\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"netmask\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Netmask,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Network\"\n            name=\"network\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"network\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Network,\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Zones\"\n            name=\"zones\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"zones\", {\n              rules: [],\n            })(\n              <Select>\n                {this.state.zones.map((item, index) => {\n                  return (\n                    <Select.Option key={index} value={item.ID}>\n                      {item.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Gateway\"\n            name=\"gateway\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"gateway\", {\n              rules: [],\n              initialValue: this.state.currentData.gateways,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Start\"\n            name=\"start\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"start\", {\n              rules: [],\n              //   initialValue: this.state.currentData.start,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"End\"\n            name=\"end\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"end\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Name Server\"\n            name=\"dns\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"dns\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Base Domain\"\n            name=\"domain\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"domain\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Dhcp\"\n            name=\"dhcp\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"dhcp\", {\n              rules: [],\n            })(\n              <Select placeholder=\"yes\">\n                <Select.Option key=\"yes\" value=\"yes\">\n                  yes\n                </Select.Option>\n                <Select.Option key=\"no\" value=\"no\">\n                  no\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"vSwitch\"\n            name=\"vSwitch\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"vSwitch\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Vlan (admin only)\"\n            name=\"vlan\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"vlan\", {\n              rules: [],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Routing Type (admin only)\"\n            name=\"rtype\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"rtype\", {\n              rules: [],\n            })(\n              <Select placeholder=\"internal\">\n                <Select.Option key=\"private\" value=\"private\">\n                  private\n                </Select.Option>\n                <Select.Option key=\"public\" value=\"public\">\n                  public\n                </Select.Option>\n                <Select.Option key=\"internal\" value=\"internal\">\n                  internal\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Routes (admin only)\"\n            name=\"routes\"\n            labelCol={{ ...layoutForm.labelCol }}\n            // hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"routes\", {\n              rules: [],\n            })(\n              <Input placeholder=\"eg. 10.0.0.0/8:10.5.5.5 172.0.0.0/16:172.5.5.5\" />\n            )}\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Subnet\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create New Subnet\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifySubnets\" })(ModifySubnets);\n"]},"metadata":{},"sourceType":"module"}