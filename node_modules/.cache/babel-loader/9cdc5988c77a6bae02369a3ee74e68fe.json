{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { REG_LIST_IS_FETCHING, REG_LIST_FETCHED, REG_LIST_FILTER, REG_LIST_DELETE_FAILED, REG_LIST_FETCH_FAILED, REG_LIST_DELETING, REG_LIST_DELETE_SUCCESS } from \"../../constants/actionTypes\";\nconst initialState = {\n  regList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n  message: \"\"\n};\n\nconst getFilteredList = (regList, keyword) => {\n  return regList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Label.toLowerCase().indexOf(keyword) > -1 || item.OcpVersion.toLowerCase().indexOf(keyword) > -1 || item.RegistryContent.toLowerCase().indexOf(keyword) > -1);\n};\n\nexport default function RegReducer(state = initialState, action) {\n  switch (action.type) {\n    case REG_LIST_DELETE_FAILED:\n    case REG_LIST_FETCH_FAILED:\n      return { ...state,\n        isLoading: false,\n        errorMessage: action.message\n      };\n\n    case REG_LIST_DELETING:\n    case REG_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case REG_LIST_DELETE_SUCCESS:\n    case REG_LIST_FETCHED:\n      return { ...state,\n        // isLoading: action.loading,\n        message: action.msg,\n        regList: action.regList,\n        filteredList: getFilteredList(action.regList, state.keyword)\n      };\n\n    case REG_LIST_FILTER:\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.regList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = RegReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/RegReducer.jsx"],"names":["REG_LIST_IS_FETCHING","REG_LIST_FETCHED","REG_LIST_FILTER","REG_LIST_DELETE_FAILED","REG_LIST_FETCH_FAILED","REG_LIST_DELETING","REG_LIST_DELETE_SUCCESS","initialState","regList","total","filteredList","isLoading","errorMessage","keyword","message","getFilteredList","filter","item","ID","toString","indexOf","Label","toLowerCase","OcpVersion","RegistryContent","RegReducer","state","action","type","loading","msg"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,oBADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,sBAJF,EAKEC,qBALF,EAMEC,iBANF,EAOEC,uBAPF,QAQO,6BARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE,EANU;AAOnBC,EAAAA,OAAO,EAAE;AAPU,CAArB;;AASA,MAAMC,eAAe,GAAG,CAACP,OAAD,EAAUK,OAAV,KAAsB;AAC5C,SAAOL,OAAO,CAACQ,MAAR,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BP,OAA3B,IAAsC,CAAC,CAAvC,IACAI,IAAI,CAACI,KAAL,CAAWC,WAAX,GAAyBF,OAAzB,CAAiCP,OAAjC,IAA4C,CAAC,CAD7C,IAEAI,IAAI,CAACM,UAAL,CAAgBD,WAAhB,GAA8BF,OAA9B,CAAsCP,OAAtC,IAAiD,CAAC,CAFlD,IAGAI,IAAI,CAACO,eAAL,CAAqBF,WAArB,GAAmCF,OAAnC,CAA2CP,OAA3C,IAAsD,CAAC,CALpD,CAAP;AAOD,CARD;;AASA,eAAe,SAASY,UAAT,CAAoBC,KAAK,GAAGnB,YAA5B,EAA0CoB,MAA1C,EAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKzB,sBAAL;AACA,SAAKC,qBAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELf,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,YAAY,EAAEe,MAAM,CAACb;AAHhB,OAAP;;AAKF,SAAKT,iBAAL;AACA,SAAKL,oBAAL;AACE,aAAO,EACL,GAAG0B,KADE;AAELf,QAAAA,SAAS,EAAEgB,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKvB,uBAAL;AACA,SAAKL,gBAAL;AACE,aAAO,EACL,GAAGyB,KADE;AAEL;AACAZ,QAAAA,OAAO,EAAEa,MAAM,CAACG,GAHX;AAILtB,QAAAA,OAAO,EAAEmB,MAAM,CAACnB,OAJX;AAKLE,QAAAA,YAAY,EAAEK,eAAe,CAACY,MAAM,CAACnB,OAAR,EAAiBkB,KAAK,CAACb,OAAvB;AALxB,OAAP;;AAOF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGwB,KADE;AAELb,QAAAA,OAAO,EAAEc,MAAM,CAACd,OAFX;AAGLH,QAAAA,YAAY,EAAEK,eAAe,CAACW,KAAK,CAAClB,OAAP,EAAgBmB,MAAM,CAACd,OAAvB;AAHxB,OAAP;;AAKF;AACE,aAAOa,KAAP;AA9BJ;AAgCD;KAjCuBD,U","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  REG_LIST_IS_FETCHING,\n  REG_LIST_FETCHED,\n  REG_LIST_FILTER,\n  REG_LIST_DELETE_FAILED,\n  REG_LIST_FETCH_FAILED,\n  REG_LIST_DELETING,\n  REG_LIST_DELETE_SUCCESS,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  regList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n  message: \"\",\n};\nconst getFilteredList = (regList, keyword) => {\n  return regList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Label.toLowerCase().indexOf(keyword) > -1 ||\n      item.OcpVersion.toLowerCase().indexOf(keyword) > -1 ||\n      item.RegistryContent.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function RegReducer(state = initialState, action) {\n  switch (action.type) {\n    case REG_LIST_DELETE_FAILED:\n    case REG_LIST_FETCH_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errorMessage: action.message,\n      };\n    case REG_LIST_DELETING:\n    case REG_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case REG_LIST_DELETE_SUCCESS:\n    case REG_LIST_FETCHED:\n      return {\n        ...state,\n        // isLoading: action.loading,\n        message: action.msg,\n        regList: action.regList,\n        filteredList: getFilteredList(action.regList, state.keyword),\n      };\n    case REG_LIST_FILTER:\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.regList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}