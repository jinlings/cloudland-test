{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/openshifts/ModifyOpenshifts.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message, Row, Col, InputNumber } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\nconst children = [];\n\nclass ModifyOpenshifts extends Component {\n  constructor(props) {\n    super(props); //const { getFieldDecorator } = this.props.form;\n\n    this.listOpenshifts = () => {\n      this.props.history.push(\"/openshifts\");\n    };\n\n    console.log(\"ModifyInstances~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      defaultHyper: -1,\n      currentData: [],\n      instZone: {},\n      instFlavor: {},\n      instInterface: {},\n      instSubnet: {},\n      images: [],\n      hypers: [],\n      zones: [],\n      flavors: [],\n      keys: [],\n      secgroups: [],\n      subnets: [],\n      zone: {\n        ID: \"\",\n        Name: \"\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Openshift Cluster\" : \"Create New Openshift Cluster\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.listOpenshifts,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        onSubmit: e => {\n          this.handleSubmit(e);\n        },\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Cluster Name\",\n          name: \"clustername\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"clustername\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.clustername\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            ref: c => {\n              this.hostname = c;\n            },\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Base Domain\",\n          name: \"basedomain\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"basedomain\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.basedomain\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Zone\",\n          name: \"zone\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"zone\", {\n            rules: [{\n              required: this.state.isShowEdit\n            }],\n            initialValue: this.state.currentData.Hyper\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: 1543,\n              children: \"zone0\"\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Infrastructure Type\",\n          name: \"infrtype\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"infrtype\", {\n            rules: [{\n              required: this.state.isShowEdit\n            }],\n            initialValue: this.state.currentData.infrtype\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Infrastructure Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"High Available\",\n          name: \"haflag\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"haflag\", {\n            rules: [],\n            initialValue: \"no\"\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"yes\",\n              children: \"yes\"\n            }, \"yes\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"no\",\n              children: \"no\"\n            }, \"no\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Number of Workers\",\n          name: \"nworkers\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"nworkers\", {\n            rules: [],\n            initialValue: 2\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 2,\n            name: \"nworkers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Registry\",\n          label: \"registry\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"registry\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.registrys.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"LB_Flavor\",\n          name: \"lflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"lflavor\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.FlavorID + \"-\" + this.state.instFlavor.Name\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Master_Flavor\",\n          name: \"mflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"mflavor\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.FlavorID + \"-\" + this.state.instFlavor.Name\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Worker_Flavor\",\n          name: \"wflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"wflavor\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.FlavorID + \"-\" + this.state.instFlavor.Name\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Subnet\",\n          name: \"sunbet\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"sunbet\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"public\",\n              children: \"public\"\n            }, \"public\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Key\",\n          name: \"key\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: this.props.form.getFieldDecorator(\"key\", {\n              rules: [{\n                required: this.state.isShowEdit\n              }]\n            })( /*#__PURE__*/_jsxDEV(Select, {\n              disabled: this.state.isShowEdit,\n              children: this.state.keys.map((val, index) => {\n                return /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: val.ID,\n                  children: [val.ID, \" - \", val.Name]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Openshift Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create New Openshift Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifyOpenshifts\"\n})(ModifyOpenshifts);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/openshifts/ModifyOpenshifts.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","Row","Col","InputNumber","layoutButton","labelCol","span","wrapperCol","layoutForm","children","ModifyOpenshifts","constructor","props","listOpenshifts","history","push","console","log","state","value","isShowEdit","defaultHyper","currentData","instZone","instFlavor","instInterface","instSubnet","images","hypers","zones","flavors","keys","secgroups","subnets","zone","ID","Name","render","e","handleSubmit","form","getFieldDecorator","rules","required","initialValue","clustername","c","hostname","basedomain","Hyper","infrtype","registrys","map","val","length","FlavorID","index","offset","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Input,\n  Select,\n  Button,\n  message,\n  Row,\n  Col,\n  InputNumber,\n} from \"antd\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nconst children = [];\nclass ModifyOpenshifts extends Component {\n  constructor(props) {\n    super(props);\n    //const { getFieldDecorator } = this.props.form;\n    console.log(\"ModifyInstances~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      defaultHyper: -1,\n      currentData: [],\n      instZone: {},\n      instFlavor: {},\n      instInterface: {},\n      instSubnet: {},\n      images: [],\n      hypers: [],\n      zones: [],\n      flavors: [],\n      keys: [],\n      secgroups: [],\n      subnets: [],\n      zone: {\n        ID: \"\",\n        Name: \"\",\n      },\n    };\n  }\n  listOpenshifts = () => {\n    this.props.history.push(\"/openshifts\");\n  };\n  render() {\n    return (\n      <Card\n        title={\n          this.state.isShowEdit\n            ? \"Edit Openshift Cluster\"\n            : \"Create New Openshift Cluster\"\n        }\n        extra={\n          <Button type=\"primary\" onClick={this.listOpenshifts}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          onSubmit={(e) => {\n            this.handleSubmit(e);\n          }}\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n        >\n          <Form.Item\n            label=\"Cluster Name\"\n            name=\"clustername\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"clustername\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.clustername,\n            })(\n              <Input\n                ref={(c) => {\n                  this.hostname = c;\n                }}\n                disabled={this.state.isShowEdit}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Base Domain\"\n            name=\"basedomain\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"basedomain\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.basedomain,\n            })(<Input disabled={this.state.isShowEdit} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Zone\"\n            name=\"zone\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"zone\", {\n              rules: [\n                {\n                  required: this.state.isShowEdit,\n                },\n              ],\n              initialValue: this.state.currentData.Hyper,\n            })(\n              <Select>\n                <Select.Option key={1} value={1543}>\n                  zone0\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Infrastructure Type\"\n            name=\"infrtype\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"infrtype\", {\n              rules: [\n                {\n                  required: this.state.isShowEdit,\n                },\n              ],\n              initialValue: this.state.currentData.infrtype,\n            })(<Input placeholder=\"Infrastructure Type\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"High Available\"\n            name=\"haflag\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"haflag\", {\n              rules: [],\n              initialValue: \"no\",\n            })(\n              <Select>\n                <Select.Option key=\"yes\" value=\"yes\">\n                  yes\n                </Select.Option>\n                <Select.Option key=\"no\" value=\"no\">\n                  no\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Number of Workers\"\n            name=\"nworkers\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"nworkers\", {\n              rules: [],\n              initialValue: 2,\n            })(<InputNumber min={2} name=\"nworkers\" />)}\n          </Form.Item>\n          <Form.Item\n            name=\"Registry\"\n            label=\"registry\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"registry\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select>\n                {this.state.registrys.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"LB_Flavor\"\n            name=\"lflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"lflavor\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.FlavorID +\n                    \"-\" +\n                    this.state.instFlavor.Name,\n            })(\n              <Select>\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Master_Flavor\"\n            name=\"mflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"mflavor\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.FlavorID +\n                    \"-\" +\n                    this.state.instFlavor.Name,\n            })(\n              <Select>\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Worker_Flavor\"\n            name=\"wflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"wflavor\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.FlavorID +\n                    \"-\" +\n                    this.state.instFlavor.Name,\n            })(\n              <Select>\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Subnet\"\n            name=\"sunbet\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"sunbet\", {\n              rules: [],\n            })(\n              <Select>\n                <Select.Option key=\"public\" value=\"public\">\n                  public\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Key\"\n            name=\"key\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            <Form.Item>\n              {this.props.form.getFieldDecorator(\"key\", {\n                rules: [\n                  {\n                    required: this.state.isShowEdit,\n                  },\n                ],\n              })(\n                <Select disabled={this.state.isShowEdit}>\n                  {this.state.keys.map((val, index) => {\n                    return (\n                      <Select.Option key={index} value={val.ID}>\n                        {val.ID} - {val.Name}\n                      </Select.Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Openshift Cluster\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create New Openshift Cluster\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifyOpenshifts\" })(ModifyOpenshifts);\n"]},"metadata":{},"sourceType":"module"}