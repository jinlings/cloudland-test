{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { GW_LIST_IS_FETCHING, GW_LIST_FETCHED, GW_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  gwList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (gwList, keyword) => {\n  console.log(\"getFilteredUserList-gwList:\", gwList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return gwList.filter(item => item.ID.toString().indexOf(keyword) > -1 // ||\n  // item.Label.toLowerCase().indexOf(keyword) > -1 ||\n  // item.OcpVersion.toLowerCase().indexOf(keyword) > -1 ||\n  // item.RegistryContent.toLowerCase().indexOf(keyword) > -1\n  );\n};\n\nexport default function GatewayReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n\n  switch (action.type) {\n    case GW_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case GW_LIST_FETCHED:\n      console.log(\"GW_LIST_FETCHED\", action);\n      return { ...state,\n        // isLoading: action.loading,\n        gwList: action.gwList,\n        filteredList: getFilteredList(action.gwList, state.keyword)\n      };\n\n    case GW_LIST_FILTER:\n      console.log(\"GW_LIST_FILTER-state\", state);\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.gwList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = GatewayReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GatewayReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/RegReducer copy.jsx"],"names":["GW_LIST_IS_FETCHING","GW_LIST_FETCHED","GW_LIST_FILTER","initialState","gwList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","console","log","filter","item","ID","toString","indexOf","GatewayReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,mBADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,MAAD,EAASK,OAAT,KAAqB;AAC3CE,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CR,MAA3C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,OAA5C;AACA,SAAOL,MAAM,CAACS,MAAP,CACJC,IAAD,IAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BR,OAA3B,IAAsC,CAAC,CAD5C,CAEL;AACA;AACA;AACA;AALK,GAAP;AAOD,CAVD;;AAWA,eAAe,SAASS,cAAT,CAAwBC,KAAK,GAAGhB,YAAhC,EAA8CiB,MAA9C,EAAsD;AACnET,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCO,KAAlC;;AACA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAKrB,mBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELZ,QAAAA,SAAS,EAAEa,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKrB,eAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BQ,MAA/B;AACA,aAAO,EACL,GAAGD,KADE;AAEL;AACAf,QAAAA,MAAM,EAAEgB,MAAM,CAAChB,MAHV;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACU,MAAM,CAAChB,MAAR,EAAgBe,KAAK,CAACV,OAAtB;AAJxB,OAAP;;AAMF,SAAKP,cAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCO,KAApC;AACA,aAAO,EACL,GAAGA,KADE;AAELV,QAAAA,OAAO,EAAEW,MAAM,CAACX,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACS,KAAK,CAACf,MAAP,EAAegB,MAAM,CAACX,OAAtB;AAHxB,OAAP;;AAKF;AACE,aAAOU,KAAP;AAtBJ;AAwBD;KA1BuBD,c","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  GW_LIST_IS_FETCHING,\n  GW_LIST_FETCHED,\n  GW_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  gwList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (gwList, keyword) => {\n  console.log(\"getFilteredUserList-gwList:\", gwList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return gwList.filter(\n    (item) => item.ID.toString().indexOf(keyword) > -1\n    // ||\n    // item.Label.toLowerCase().indexOf(keyword) > -1 ||\n    // item.OcpVersion.toLowerCase().indexOf(keyword) > -1 ||\n    // item.RegistryContent.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function GatewayReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n  switch (action.type) {\n    case GW_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case GW_LIST_FETCHED:\n      console.log(\"GW_LIST_FETCHED\", action);\n      return {\n        ...state,\n        // isLoading: action.loading,\n        gwList: action.gwList,\n        filteredList: getFilteredList(action.gwList, state.keyword),\n      };\n    case GW_LIST_FILTER:\n      console.log(\"GW_LIST_FILTER-state\", state);\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.gwList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}