{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/flavors/CreateFlavors.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Button, message, InputNumber } from \"antd\";\nimport { createFlavorApi } from \"../../service/flavors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass CreateFlavors extends Component {\n  constructor(props) {\n    super(props); //const { getFieldDecorator } = this.props.form;\n\n    this.listFlavors = () => {\n      this.props.history.push(\"/flavors\");\n    };\n\n    this.handleSubmit = event => {\n      console.log(\"handleSubmit-state:\", this.state);\n      console.log(\"handleSubmit:\", event);\n      console.log(\"handleSubmit-event.target.value:\", event.target.value);\n      event.preventDefault();\n      this.props.form.validateFieldsAndScroll(err => {\n        //   let _this = this;\n        if (!err) {\n          // this.setState({\n          //   flavors: {\n          //     Name: this.state.name,\n          //     Cpu: parseInt(this.state.cpu),\n          //     Memory: parseInt(this.state.memory),\n          //     Disk: parseInt(this.state.disk),\n          //     Swap: parseInt(this.state.swap),\n          //     Ephemeral: parseInt(this.state.ephemeral),\n          //   },\n          // });\n          console.log(\"提交\", this.state.flavors);\n          createFlavorApi({\n            Name: this.state.name,\n            Cpu: this.state.cpu,\n            Memory: parseInt(this.state.memory),\n            Disk: parseInt(this.state.disk),\n            Swap: parseInt(this.state.swap),\n            Ephemeral: parseInt(this.state.ephemeral)\n          }).then(res => {\n            console.log(\"handleSubmit-res-createFlavorApi:\", res);\n            this.props.history.push(\"/flavors\");\n          }).catch(err => {\n            console.log(\"handleSubmit-error:\", err);\n          });\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      cpu: 1,\n      memory: 1,\n      disk: 1,\n      swap: 0,\n      ephemeral: 0\n    };\n    console.log(\"CreateFlavors~~\", props);\n  } // flavorsChange = (e) => {\n  //   console.log(\"valueChange-e\", e);\n  //   this.setState({\n  //     [e.target.name]: e.target.value,\n  //   });\n  //   console.log(\"flavorsChange\", this.state);\n  // };\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Create New Flavor\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginRight: \"5%\"\n        },\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.listFlavors,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        onSubmit: e => this.handleSubmit(e),\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"Name\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"Name\", {\n            rules: [{\n              required: true\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"name\",\n            onChange: e => this.setState({\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"CPU\",\n          name: \"Cpu\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"Cpu\", {\n            rules: [{\n              required: true\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"cpu\",\n            onChange: e => this.setState({\n              cpu: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Memory(M)\",\n          name: \"Memory\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"Memory\", {\n            rules: [{\n              required: true\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"memory\",\n            onChange: e => this.setState({\n              memory: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Disk(G)\",\n          name: \"Disk\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"Disk\", {\n            rules: [{\n              required: true\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"disk\",\n            onChange: e => this.setState({\n              disk: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Swap(G)\",\n          name: \"Swap\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"Swap\", {\n            rules: [],\n            initialValue: 0\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"swap\",\n            onChange: e => this.setState({\n              swap: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Ephemeral(G)\",\n          name: \"Ephemeral\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"Ephemeral\", {\n            rules: [],\n            initialValue: 0\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"ephemeral\",\n            onChange: e => this.setState({\n              ephemeral: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create New Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"createFlavors\"\n})(CreateFlavors);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/flavors/CreateFlavors.jsx"],"names":["React","Component","Form","Card","Input","Button","message","InputNumber","createFlavorApi","layoutButton","labelCol","span","wrapperCol","layoutForm","CreateFlavors","constructor","props","listFlavors","history","push","handleSubmit","event","console","log","state","target","value","preventDefault","form","validateFieldsAndScroll","err","flavors","Name","name","Cpu","cpu","Memory","parseInt","memory","Disk","disk","Swap","swap","Ephemeral","ephemeral","then","res","catch","error","render","marginRight","e","getFieldDecorator","rules","required","setState","initialValue","offset","create"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Button, message, InputNumber } from \"antd\";\nimport { createFlavorApi } from \"../../service/flavors\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass CreateFlavors extends Component {\n  constructor(props) {\n    super(props);\n    //const { getFieldDecorator } = this.props.form;\n    this.state = {\n      name: \"\",\n      cpu: 1,\n      memory: 1,\n      disk: 1,\n      swap: 0,\n      ephemeral: 0,\n    };\n    console.log(\"CreateFlavors~~\", props);\n  }\n  // flavorsChange = (e) => {\n  //   console.log(\"valueChange-e\", e);\n  //   this.setState({\n  //     [e.target.name]: e.target.value,\n  //   });\n  //   console.log(\"flavorsChange\", this.state);\n  // };\n  listFlavors = () => {\n    this.props.history.push(\"/flavors\");\n  };\n  handleSubmit = (event) => {\n    console.log(\"handleSubmit-state:\", this.state);\n    console.log(\"handleSubmit:\", event);\n    console.log(\"handleSubmit-event.target.value:\", event.target.value);\n    event.preventDefault();\n    this.props.form.validateFieldsAndScroll((err) => {\n      //   let _this = this;\n      if (!err) {\n        // this.setState({\n        //   flavors: {\n        //     Name: this.state.name,\n        //     Cpu: parseInt(this.state.cpu),\n        //     Memory: parseInt(this.state.memory),\n        //     Disk: parseInt(this.state.disk),\n        //     Swap: parseInt(this.state.swap),\n        //     Ephemeral: parseInt(this.state.ephemeral),\n        //   },\n        // });\n        console.log(\"提交\", this.state.flavors);\n        createFlavorApi({\n          Name: this.state.name,\n          Cpu: this.state.cpu,\n          Memory: parseInt(this.state.memory),\n          Disk: parseInt(this.state.disk),\n          Swap: parseInt(this.state.swap),\n          Ephemeral: parseInt(this.state.ephemeral),\n        })\n          .then((res) => {\n            console.log(\"handleSubmit-res-createFlavorApi:\", res);\n            this.props.history.push(\"/flavors\");\n          })\n          .catch((err) => {\n            console.log(\"handleSubmit-error:\", err);\n          });\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\"Create New Flavor\"}\n        extra={\n          <Button\n            style={{ marginRight: \"5%\" }}\n            type=\"primary\"\n            size=\"small\"\n            onClick={this.listFlavors}\n          >\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          onSubmit={(e) => this.handleSubmit(e)}\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n        >\n          <Form.Item\n            label=\"Name\"\n            name=\"Name\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"Name\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n            })(\n              <Input\n                name=\"name\"\n                onChange={(e) => this.setState({ name: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"CPU\"\n            name=\"Cpu\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"Cpu\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n            })(\n              <Input\n                name=\"cpu\"\n                onChange={(e) => this.setState({ cpu: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Memory(M)\"\n            name=\"Memory\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"Memory\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n            })(\n              <Input\n                name=\"memory\"\n                onChange={(e) => this.setState({ memory: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Disk(G)\"\n            name=\"Disk\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"Disk\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n            })(\n              <Input\n                name=\"disk\"\n                onChange={(e) => this.setState({ disk: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Swap(G)\"\n            name=\"Swap\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"Swap\", {\n              rules: [],\n              initialValue: 0,\n            })(\n              <Input\n                name=\"swap\"\n                onChange={(e) => this.setState({ swap: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Ephemeral(G)\"\n            name=\"Ephemeral\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"Ephemeral\", {\n              rules: [],\n              initialValue: 0,\n            })(\n              <Input\n                name=\"ephemeral\"\n                onChange={(e) => this.setState({ ephemeral: e.target.value })}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create New Flavor\n              </Button>\n            }\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"createFlavors\" })(CreateFlavors);\n"]},"metadata":{},"sourceType":"module"}