{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/instances/InstModal.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Input, Select, Form, Modal } from \"antd\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport Utils from \"./Instances\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutForm = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 10\n  },\n  layouttype: \"horizontal\"\n};\nconst {\n  Option\n} = Select;\n\nclass InstModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOk = () => {\n      const p = this;\n      const {\n        form\n      } = this.props;\n      console.log(\"handleOk-form\", this.props);\n      form.validateFieldsAndScroll((err, values) => {\n        console.log(\"handleOk\", values);\n\n        if (err) {\n          return;\n        } // this.state.fileList?values.image = this.state.fileList : []\n\n\n        p.props.submit(values);\n      });\n    };\n\n    this.handleCancel = () => {\n      const {\n        close\n      } = this.props;\n      close();\n    };\n\n    this.initFormList = () => {\n      const p = this;\n      const {\n        getFieldDecorator\n      } = p.props.form;\n      const {\n        modalFormList\n      } = this.props;\n      console.log(\"basic-modalFormList\", modalFormList);\n      const formItemList = [];\n\n      if (modalFormList && modalFormList.length > 0) {\n        modalFormList.forEach(item => {\n          console.log(\"modalFormList-item\", item);\n          const {\n            label\n          } = item;\n          const {\n            rules\n          } = item;\n          const rulesType = rules || [{\n            required: true,\n            message: `${label}必填`\n          }];\n          const initialValue = item.initialValue || undefined;\n          const {\n            placeholder\n          } = item;\n          const {\n            width\n          } = item;\n          const {\n            style\n          } = item;\n          const {\n            name\n          } = item;\n          const {\n            disabled\n          } = item;\n          const formItemLayout = {\n            labelCol: {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 6\n              }\n            },\n            wrapperCol: {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 16\n              }\n            }\n          };\n\n          if (item.field === this.props.title) {\n            if (item.type === \"INPUT\") {\n              const INPUT = /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: label,\n                name: name,\n                style: style,\n                ...formItemLayout,\n                children: getFieldDecorator(`${name}`, {\n                  rules: rulesType,\n                  initialValue\n                })( /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  disabled: disabled || false,\n                  style: {\n                    width\n                  } // placeholder={placeholder}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this);\n\n              formItemList.push(INPUT);\n            } else if (item.type === \"SELECT\") {\n              if (name) {\n                switch (name) {\n                  case \"flavor\":\n                    {\n                      const SELECT = /*#__PURE__*/_jsxDEV(Form.Item, {\n                        label: label,\n                        name: name,\n                        ...formItemLayout,\n                        children: getFieldDecorator(`${name}`, {\n                          initialValue // true | false\n\n                        })( /*#__PURE__*/_jsxDEV(Select, {\n                          style: {\n                            width\n                          },\n                          placeholder: placeholder,\n                          children: this.getOptionList(this.state.flavors)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 25\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 21\n                      }, this);\n\n                      return formItemList.push(SELECT);\n                    }\n\n                  case \"hyper\":\n                    {\n                      const SELECT = /*#__PURE__*/_jsxDEV(Form.Item, {\n                        label: label,\n                        name: name,\n                        ...formItemLayout,\n                        children: getFieldDecorator(`${name}`, {\n                          initialValue // true | false\n\n                        })( /*#__PURE__*/_jsxDEV(Select, {\n                          style: {\n                            width\n                          },\n                          placeholder: placeholder,\n                          children: this.getOptionHyperList(this.state.hypers)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 25\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 21\n                      }, this);\n\n                      return formItemList.push(SELECT);\n                    }\n\n                  case \"action\":\n                    {\n                      const SELECT = /*#__PURE__*/_jsxDEV(Form.Item, {\n                        label: label,\n                        name: name,\n                        ...formItemLayout,\n                        children: getFieldDecorator(`${name}`, {\n                          initialValue // true | false\n\n                        })( /*#__PURE__*/_jsxDEV(Select, {\n                          style: {\n                            width\n                          },\n                          placeholder: placeholder,\n                          children: [/*#__PURE__*/_jsxDEV(Option, {\n                            value: \"stop\",\n                            children: \"stop\"\n                          }, \"stop\", false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 204,\n                            columnNumber: 27\n                          }, this), /*#__PURE__*/_jsxDEV(Option, {\n                            value: \"start\",\n                            children: \"start\"\n                          }, \"start\", false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 207,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 25\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 21\n                      }, this);\n\n                      return formItemList.push(SELECT);\n                    }\n\n                  default:\n                    return null;\n                }\n              }\n            }\n          }\n        });\n      }\n\n      return formItemList;\n    };\n\n    this.state = {\n      flavors: [],\n      hypers: [],\n      status: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRef(this);\n\n    const _this = this;\n\n    flavorsListApi().then(res => {\n      _this.setState({\n        flavors: res.flavors,\n        isLoaded: true\n      });\n\n      console.log(\"flavors:\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    hypersListApi().then(res => {\n      _this.setState({\n        hypers: res.hypers,\n        isLoaded: true\n      });\n\n      console.log(\"hypersListApi~~\", this.state.hypers);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  getOptionList(data) {\n    console.log(\"getOptionList\", data);\n\n    if (!data) {\n      return [];\n    }\n\n    const options = [];\n    data.map(item => {\n      options.push( /*#__PURE__*/_jsxDEV(Option, {\n        value: item.ID,\n        children: item.Name\n      }, item.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this));\n    });\n    return options;\n  }\n\n  getOptionHyperList(data) {\n    console.log(\"getOptionList\", data);\n\n    if (!data) {\n      return [];\n    }\n\n    const options = [];\n    data.map((item, index) => {\n      options.push( /*#__PURE__*/_jsxDEV(Option, {\n        value: index,\n        children: item.Hostname\n      }, item.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this));\n    });\n    return options;\n  }\n\n  render() {\n    const p = this;\n    console.log(\"instModal-key\", this.props.key); // const { getFieldDecorator } = this.props.form;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        destroyOnClose: true,\n        title: this.props.title,\n        visible: this.props.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        maskClosable: false,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            console.log(\"modal-e\", e); // this.handleModalSubmit(e);\n          } //   layout={{ ...layoutForm.LayoutType }}\n          ,\n          wrapperCol: { ...layoutForm.wrapperCol\n          },\n          children: p.initFormList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"instModal\"\n})(InstModal);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/instances/InstModal.jsx"],"names":["React","Component","Input","Select","Form","Modal","hypersListApi","Utils","flavorsListApi","layoutForm","labelCol","span","wrapperCol","layouttype","Option","InstModal","constructor","props","handleOk","p","form","console","log","validateFieldsAndScroll","err","values","submit","handleCancel","close","initFormList","getFieldDecorator","modalFormList","formItemList","length","forEach","item","label","rules","rulesType","required","message","initialValue","undefined","placeholder","width","style","name","disabled","formItemLayout","xs","sm","field","title","type","INPUT","push","SELECT","getOptionList","state","flavors","getOptionHyperList","hypers","status","isLoaded","componentDidMount","onRef","_this","then","res","setState","catch","error","data","options","map","ID","Name","index","Hostname","render","key","visible","e","create"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Input, Select, Form, Modal } from \"antd\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport Utils from \"./Instances\";\nimport { flavorsListApi } from \"../../service/flavors\";\nconst layoutForm = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 10 },\n  layouttype: \"horizontal\",\n};\nconst { Option } = Select;\nclass InstModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flavors: [],\n      hypers: [],\n      status: [],\n      isLoaded: false,\n    };\n  }\n  componentDidMount() {\n    this.props.onRef(this);\n    const _this = this;\n    flavorsListApi()\n      .then((res) => {\n        _this.setState({\n          flavors: res.flavors,\n          isLoaded: true,\n        });\n        console.log(\"flavors:\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    hypersListApi()\n      .then((res) => {\n        _this.setState({\n          hypers: res.hypers,\n          isLoaded: true,\n        });\n        console.log(\"hypersListApi~~\", this.state.hypers);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  handleOk = () => {\n    const p = this;\n    const { form } = this.props;\n    console.log(\"handleOk-form\", this.props);\n    form.validateFieldsAndScroll((err, values) => {\n      console.log(\"handleOk\", values);\n      if (err) {\n        return;\n      }\n      // this.state.fileList?values.image = this.state.fileList : []\n      p.props.submit(values);\n    });\n  };\n\n  handleCancel = () => {\n    const { close } = this.props;\n\n    close();\n  };\n\n  getOptionList(data) {\n    console.log(\"getOptionList\", data);\n    if (!data) {\n      return [];\n    }\n    const options = [];\n    data.map((item) => {\n      options.push(\n        <Option value={item.ID} key={item.ID}>\n          {item.Name}\n        </Option>\n      );\n    });\n    return options;\n  }\n  getOptionHyperList(data) {\n    console.log(\"getOptionList\", data);\n    if (!data) {\n      return [];\n    }\n    const options = [];\n    data.map((item, index) => {\n      options.push(\n        <Option value={index} key={item.ID}>\n          {item.Hostname}\n        </Option>\n      );\n    });\n    return options;\n  }\n\n  initFormList = () => {\n    const p = this;\n    const { getFieldDecorator } = p.props.form;\n    const { modalFormList } = this.props;\n    console.log(\"basic-modalFormList\", modalFormList);\n    const formItemList = [];\n    if (modalFormList && modalFormList.length > 0) {\n      modalFormList.forEach((item) => {\n        console.log(\"modalFormList-item\", item);\n        const { label } = item;\n        const { rules } = item;\n        const rulesType = rules || [\n          { required: true, message: `${label}必填` },\n        ];\n        const initialValue = item.initialValue || undefined;\n\n        const { placeholder } = item;\n        const { width } = item;\n        const { style } = item;\n        const { name } = item;\n        const { disabled } = item;\n        const formItemLayout = {\n          labelCol: {\n            xs: { span: 24 },\n            sm: { span: 6 },\n          },\n          wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n          },\n        };\n        if (item.field === this.props.title) {\n          if (item.type === \"INPUT\") {\n            const INPUT = (\n              <Form.Item\n                label={label}\n                name={name}\n                style={style}\n                {...formItemLayout}\n              >\n                {getFieldDecorator(`${name}`, {\n                  rules: rulesType,\n                  initialValue,\n                })(\n                  <Input\n                    type=\"text\"\n                    disabled={disabled || false}\n                    style={{ width }}\n                    // placeholder={placeholder}\n                  />\n                )}\n              </Form.Item>\n            );\n            formItemList.push(INPUT);\n          } else if (item.type === \"SELECT\") {\n            if (name) {\n              switch (name) {\n                case \"flavor\": {\n                  const SELECT = (\n                    <Form.Item label={label} name={name} {...formItemLayout}>\n                      {getFieldDecorator(`${name}`, {\n                        initialValue, // true | false\n                      })(\n                        <Select style={{ width }} placeholder={placeholder}>\n                          {this.getOptionList(this.state.flavors)}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  );\n                  return formItemList.push(SELECT);\n                }\n                case \"hyper\": {\n                  const SELECT = (\n                    <Form.Item label={label} name={name} {...formItemLayout}>\n                      {getFieldDecorator(`${name}`, {\n                        initialValue, // true | false\n                      })(\n                        <Select style={{ width }} placeholder={placeholder}>\n                          {this.getOptionHyperList(this.state.hypers)}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  );\n                  return formItemList.push(SELECT);\n                }\n                case \"action\": {\n                  const SELECT = (\n                    <Form.Item label={label} name={name} {...formItemLayout}>\n                      {getFieldDecorator(`${name}`, {\n                        initialValue, // true | false\n                      })(\n                        <Select style={{ width }} placeholder={placeholder}>\n                          <Option value=\"stop\" key=\"stop\">\n                            stop\n                          </Option>\n                          <Option value=\"start\" key=\"start\">\n                            start\n                          </Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n                  );\n                  return formItemList.push(SELECT);\n                }\n\n                default:\n                  return null;\n              }\n            }\n          }\n        }\n      });\n    }\n    return formItemList;\n  };\n\n  render() {\n    const p = this;\n    console.log(\"instModal-key\", this.props.key);\n    // const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Modal\n          destroyOnClose\n          title={this.props.title}\n          visible={this.props.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          maskClosable={false}\n        >\n          <Form\n            onSubmit={(e) => {\n              console.log(\"modal-e\", e);\n              // this.handleModalSubmit(e);\n            }}\n            //   layout={{ ...layoutForm.LayoutType }}\n            wrapperCol={{ ...layoutForm.wrapperCol }}\n          >\n            {p.initFormList()}\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Form.create({ name: \"instModal\" })(InstModal);\n"]},"metadata":{},"sourceType":"module"}