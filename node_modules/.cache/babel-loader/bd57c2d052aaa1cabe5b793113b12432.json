{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/instances/Instances.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Card, Table, Button, Popconfirm, Row, Col, Menu, Dropdown, message, Tooltip } from \"antd\";\nimport { insListApi, delInsInfor, getInsInforById, editInsInfor } from \"../../service/instances\";\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { connect } from \"react-redux\";\nimport InstModal from \"./InstModal\";\nimport \"./instances.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Instances extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: \"ID\",\n      key: \"ID\",\n      width: 60,\n      align: \"center\",\n      dataIndex: \"ID\"\n    }, {\n      title: \"HostName\",\n      dataIndex: \"Hostname\",\n      align: \"center\"\n    }, {\n      title: \"Flavor\",\n      dataIndex: \"Flavor.Name\",\n      align: \"center\"\n    }, {\n      title: \"Image\",\n      dataIndex: \"Image.Name\",\n      align: \"center\"\n    }, {\n      title: \"IP Address\",\n      dataIndex: \"Interfaces\",\n      key: Math.random(),\n      align: \"center\",\n      render: Interfaces => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Interfaces.map(iface => {\n          return iface.Address.Address + \" \";\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: \"Console\",\n      dataIndex: \"\",\n      align: \"center\"\n    }, {\n      title: \"Status\",\n      // dataIndex: \"Status\",\n      align: \"center\",\n      width: \"60px\",\n      render: record => {\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: record.Reason,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#1890ff\"\n            },\n            children: record.Status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this);\n      }\n    }, {\n      title: \"Hyper\",\n      dataIndex: \"Hyper\",\n      align: \"center\"\n    }, {\n      title: \"Owner\",\n      dataIndex: \"OwnerInfo.name\",\n      align: \"center\"\n    }, {\n      title: \"Zone\",\n      dataIndex: \"Zone.Name\",\n      align: \"center\"\n    }, {\n      title: \"Action\",\n      align: \"center\",\n      render: (txt, record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actionStyle\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Button, {\n            type: \"primary\",\n            onClick: () => {\n              console.log(\"onClick:\", record);\n              this.props.history.push(\"/instances/new/\" + record.ID);\n            },\n            overlay: this.menu(record.ID),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"Are you sure to delete?\",\n            onCancel: () => {\n              console.log(\"cancelled\");\n            },\n            onConfirm: () => {\n              console.log(\"onClick-delete:\", record);\n              delInsInfor(record.ID).then(res => {\n                message.success(res.Msg);\n                this.loadData(this.state.current, this.state.pageSize);\n                console.log(\"用户~~\", res);\n                console.log(\"用户~~state\", this.state);\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: \"5px\",\n                marginRight: \"0px\",\n                marginTop: \"10px\",\n                height: \"32px\"\n              },\n              type: \"danger\",\n              size: \"small\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this);\n      }\n    }];\n\n    this.menu = r => /*#__PURE__*/_jsxDEV(Menu, {\n      onClick: this.handleModal.bind(this, r),\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Change Hostname\"\n      }, \"changeHostname\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Migrate Instance\"\n      }, \"migrateIns\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Resize Instance\"\n      }, \"resizeIns\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Change Status\"\n      }, \"changeStatus\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Start VM\"\n      }, \"startVm\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"Stop VM\"\n      }, \"stopVm\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this);\n\n    this.handleModal = (id, {\n      key\n    }) => {\n      console.log(\"handleModal-key\", key);\n      this.handleChange(id);\n      console.log(\"handleModal\", id);\n\n      if (key === \"changeHostname\" || key === \"migrateIns\" || key === \"resizeIns\") {\n        this.setState({\n          visible: !this.state.visible\n        });\n      } else if (key === \"changeStatus\") {\n        this.setState({\n          visible: !this.state.visible,\n          flag: \"ChangeStatus\"\n        });\n      } else if (key === \"startVm\") {\n        this.setState({\n          flag: \"ChangeStatus\",\n          action: \"start\"\n        }, () => {\n          insListApi({\n            flag: this.state.flag,\n            action: this.state.action\n          }).then(res => {\n            console.log(\"startVm\", res);\n          }).catch(error => {\n            console.log(error);\n          });\n          message.success(\"Start VM successfully\");\n        });\n      } else {\n        this.setState({\n          flag: \"ChangeStatus\",\n          action: \"shutdown\"\n        }, () => {\n          insListApi({\n            flag: this.state.flag,\n            action: this.state.action\n          }).then(res => {\n            console.log(\"stopVm\", res);\n          }).catch(error => {\n            console.log(error);\n          });\n          message.success(\"Stop VM successfully\");\n        });\n      }\n\n      if (key) {\n        switch (key) {\n          case \"changeHostname\":\n            return this.setState({\n              menuKey: key,\n              title: \"Change Hostname\"\n            });\n\n          case \"migrateIns\":\n            return this.setState({\n              menuKey: key,\n              title: \"Migrate Instance\"\n            });\n\n          case \"resizeIns\":\n            return this.setState({\n              menuKey: key,\n              title: \"Resize Instance\"\n            });\n\n          case \"changeStatus\":\n            return this.setState({\n              title: \"Change Status\"\n            });\n\n          case \"startVm\":\n            return this.setState({\n              title: \"Start VM\"\n            });\n\n          case \"stopVm\":\n            return this.setState({\n              title: \"Stop VM\"\n            });\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.handleChange = id => {\n      getInsInforById(id).then(res => {\n        console.log(\"handleChange-getInsInforById-res:\", res);\n        this.setState(sta => sta.everyData = res.instance);\n        console.log(\"handleChange-state.everyData\", this.state);\n      });\n    };\n\n    this.onCancel = () => {\n      console.log(\"cancel\");\n      this.setState({\n        visible: false,\n        key: Math.random()\n      });\n    };\n\n    this.handleOk = () => {\n      console.log(\"ok\");\n      this.setState({\n        visible: false,\n        key: Math.random()\n      });\n    };\n\n    this.loadData = (page, pageSize) => {\n      console.log(\"ins-loadData~~\", page, pageSize);\n\n      const _this = this;\n\n      const offset = (page - 1) * pageSize;\n      const limit = pageSize;\n      insListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n\n        console.log(\"loadData-page-\", page, _this.state);\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.toSelectchange = (page, num) => {\n      console.log(\"toSelectchange\", page, num);\n\n      const _this = this;\n\n      const offset = (page - 1) * num;\n      const limit = num;\n      console.log(\"instance-toSelectchange~limit:\", offset, limit);\n      insListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.onPaginationChange = e => {\n      console.log(\"onPaginationChange\", e);\n      this.loadData(e, this.state.pageSize);\n    };\n\n    this.onShowSizeChange = (current, pageSize) => {\n      console.log(\"onShowSizeChange:\", current, pageSize); //当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n\n      this.toSelectchange(current, pageSize);\n    };\n\n    this.createInstance = () => {\n      this.props.history.push(\"/instances/new\");\n    };\n\n    this.onRef = (selectedRowKeys, selectedRows, selectedIds) => {\n      this.setState({\n        selectedRowKeys,\n        selectedRows,\n        selectedIds\n      });\n    };\n\n    this.onModalRef = ref => {\n      this.modalRef = ref;\n    };\n\n    this.modalFormList = data => {\n      console.log(\"instance-modalFormList\", data);\n      console.log(\"key-modalFormList\", this.state.menuKey);\n      const modalFormList = [{\n        type: \"INPUT\",\n        label: \"Hostname\",\n        name: \"hostname\",\n        field: \"Change Hostname\",\n        placeholder: \"Please input Hostname\",\n        width: \"90%\",\n        initialValue: data.Hostname,\n        id: data.ID\n      }, {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Hyper\",\n        name: \"hyper\",\n        field: \"Migrate Instance\",\n        // disabled:true,\n        initialValue: data.Hyper,\n        id: data.ID\n      }, {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Flavor\",\n        field: \"Resize Instance\",\n        name: \"flavor\",\n        initialValue: data.FlavorID,\n        id: data.ID\n      }, {\n        type: \"SELECT\",\n        label: \"Action\",\n        name: \"action\",\n        field: \"Change Status\",\n        placeholder: \"Please Select Status\",\n        width: \"90%\",\n        // disabled:true,\n        initialValue: data.Status,\n        id: data.ID\n      }];\n      return modalFormList;\n    };\n\n    this.handleSubmit = data => {\n      const id = this.state.everyData && this.state.everyData.ID;\n\n      if (id) {\n        const hostname = this.state.everyData && this.state.everyData.Hostname;\n        const hyper = this.state.everyData && this.state.everyData.Hyper;\n        const action = this.state.everyData && this.state.everyData.Status;\n        const flavor = this.state.everyData && this.state.everyData.FlavorID; // const ifaces = this.state.everyData.Interfaces[0].Address.SubnetID;\n\n        let ifaces = [];\n        this.state.everyData && this.state.everyData.Interfaces.map(item => {\n          ifaces.push(`${item.Address.SubnetID}`);\n          return ifaces;\n        });\n        let initInstance = {};\n        initInstance[\"hostname\"] = hostname;\n        initInstance[\"hyper\"] = hyper;\n        initInstance[\"action\"] = action;\n        initInstance[\"flavor\"] = flavor;\n        initInstance[\"ifaces\"] = ifaces;\n        this.setState({\n          updateInstance: initInstance\n        }, () => {\n          if (data.hostname) {\n            initInstance.hostname = data.hostname;\n          } else if (data.hyper) {\n            initInstance.hyper = data.hyper;\n          } else if (data.flavor) {\n            initInstance.flavor = data.flavor;\n          } else if (data.action) {\n            initInstance.action = data.action;\n          }\n\n          let dataInstance = Object.assign({}, this.state.updateInstance, initInstance, data);\n          console.log(\"dataInstance\", dataInstance);\n          this.handleUpdateList(id, dataInstance);\n        });\n      }\n    };\n\n    this.handleUpdateList = (id, paramsObj) => {\n      console.log(\"hangleUpdateList\", paramsObj, id);\n\n      if (id) {\n        editInsInfor(id, paramsObj).then(res => {\n          // let _json = res.data;\n          // if (_json.return_code === \"0\") {\n          console.log(\"handleUpdateList-editInsInfor:\", res); // } else {\n          //   message.error(res.message);\n          // }\n\n          this.loadData(this.state.current, this.state.pageSize);\n        }).catch(err => {\n          console.log(\"handleUpdateList-error:\", err);\n        });\n      }\n\n      this.modalRef.props.form.resetFields();\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      updateInstance: {},\n      selectedRowKeys: [],\n      instances: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1,\n      visible: false,\n      everyData: {},\n      menuKey: \"\",\n      flag: \"\",\n      action: \"\"\n    };\n  }\n\n  componentWillMount() {\n    const _this = this;\n\n    insListApi().then(res => {\n      console.log(\"componentDidMount-instances:\", res);\n\n      _this.setState({\n        instances: res.instances,\n        isLoaded: true,\n        total: res.total\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    const {\n      data,\n      everyData\n    } = this.state;\n    console.log(data, \"data\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Instance Manage Panel\" + \"(Total: \" + this.state.total + \")\",\n            extra: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              size: \"small\",\n              onClick: this.createInstance,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                children: [/*#__PURE__*/_jsxDEV(DataTable, {\n                  rowKey: \"ID\",\n                  columns: this.columns,\n                  dataSource: this.state.instances,\n                  bordered: true,\n                  total: this.state.total,\n                  pageSize: this.state.pageSize // scroll={{ y: 600, x: 600 }}\n                  ,\n                  onPaginationChange: this.onPaginationChange,\n                  onShowSizeChange: this.onShowSizeChange,\n                  pageSizeOptions: this.state.pageSizeOptions,\n                  loading: !this.state.isLoaded\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InstModal, {\n                  onRef: this.onModalRef,\n                  visible: this.state.visible,\n                  modalFormList: this.modalFormList(everyData),\n                  title: this.state.title,\n                  submit: this.handleSubmit.bind(this),\n                  close: () => {\n                    this.setState({\n                      visible: false,\n                      everyData: {}\n                    });\n                    this.modalRef.props.form.resetFields();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mapStateToProps-instance:\", state); // var loginInfo = JSON.parse(state.loginInfo);\n  // console.log(\"mapStateToProps-isadmin:\", JSON.parse(state.loginInfo));\n\n  return state;\n};\n\nexport default connect(mapStateToProps)(Instances);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/instances/Instances.jsx"],"names":["React","Component","Card","Table","Button","Popconfirm","Row","Col","Menu","Dropdown","message","Tooltip","insListApi","delInsInfor","getInsInforById","editInsInfor","DataTable","connect","InstModal","Instances","constructor","props","columns","title","key","width","align","dataIndex","Math","random","render","Interfaces","map","iface","Address","record","Reason","color","Status","txt","index","console","log","history","push","ID","menu","then","res","success","Msg","loadData","state","current","pageSize","margin","marginRight","marginTop","height","r","handleModal","bind","id","handleChange","setState","visible","flag","action","catch","error","menuKey","sta","everyData","instance","onCancel","handleOk","page","_this","offset","limit","instances","isLoaded","total","toSelectchange","num","onPaginationChange","e","onShowSizeChange","createInstance","onRef","selectedRowKeys","selectedRows","selectedIds","onModalRef","ref","modalRef","modalFormList","data","type","label","name","field","placeholder","initialValue","Hostname","Hyper","FlavorID","handleSubmit","hostname","hyper","flavor","ifaces","item","SubnetID","initInstance","updateInstance","dataInstance","Object","assign","handleUpdateList","paramsObj","err","form","resetFields","pageSizeOptions","componentWillMount","mapStateToProps","ownProps"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,GALF,EAMEC,GANF,EAOEC,IAPF,EAQEC,QARF,EASEC,OATF,EAUEC,OAVF,QAWO,MAXP;AAYA,SACEC,UADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,YAJF,QAKO,yBALP;AAMA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAN,SAAwBlB,SAAxB,CAAkC;AAChCmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAoBnBC,OApBmB,GAoBT,CACR;AACEC,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,GAAG,EAAE,IAFP;AAGEC,MAAAA,KAAK,EAAE,EAHT;AAIEC,MAAAA,KAAK,EAAE,QAJT;AAKEC,MAAAA,SAAS,EAAE;AALb,KADQ,EAQR;AACEJ,MAAAA,KAAK,EAAE,UADT;AAEEI,MAAAA,SAAS,EAAE,UAFb;AAGED,MAAAA,KAAK,EAAE;AAHT,KARQ,EAaR;AACEH,MAAAA,KAAK,EAAE,QADT;AAEEI,MAAAA,SAAS,EAAE,aAFb;AAGED,MAAAA,KAAK,EAAE;AAHT,KAbQ,EAkBR;AACEH,MAAAA,KAAK,EAAE,OADT;AAEEI,MAAAA,SAAS,EAAE,YAFb;AAGED,MAAAA,KAAK,EAAE;AAHT,KAlBQ,EAuBR;AACEH,MAAAA,KAAK,EAAE,YADT;AAEEI,MAAAA,SAAS,EAAE,YAFb;AAGEH,MAAAA,GAAG,EAAEI,IAAI,CAACC,MAAL,EAHP;AAIEH,MAAAA,KAAK,EAAE,QAJT;AAKEI,MAAAA,MAAM,EAAGC,UAAD,iBACN;AAAA,kBACGA,UAAU,CAACC,GAAX,CAAgBC,KAAD,IAAW;AACzB,iBAAOA,KAAK,CAACC,OAAN,CAAcA,OAAd,GAAwB,GAA/B;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AANJ,KAvBQ,EAoCR;AACEX,MAAAA,KAAK,EAAE,SADT;AAEEI,MAAAA,SAAS,EAAE,EAFb;AAGED,MAAAA,KAAK,EAAE;AAHT,KApCQ,EAyCR;AACEH,MAAAA,KAAK,EAAE,QADT;AAEE;AACAG,MAAAA,KAAK,EAAE,QAHT;AAIED,MAAAA,KAAK,EAAE,MAJT;AAKEK,MAAAA,MAAM,EAAGK,MAAD,IAAY;AAClB,4BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEA,MAAM,CAACC,MAAvB;AAAA,iCACE;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAA,sBAAoCF,MAAM,CAACG;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AAXH,KAzCQ,EAsDR;AACEf,MAAAA,KAAK,EAAE,OADT;AAEEI,MAAAA,SAAS,EAAE,OAFb;AAGED,MAAAA,KAAK,EAAE;AAHT,KAtDQ,EA2DR;AACEH,MAAAA,KAAK,EAAE,OADT;AAEEI,MAAAA,SAAS,EAAE,gBAFb;AAGED,MAAAA,KAAK,EAAE;AAHT,KA3DQ,EAgER;AACEH,MAAAA,KAAK,EAAE,MADT;AAEEI,MAAAA,SAAS,EAAE,WAFb;AAGED,MAAAA,KAAK,EAAE;AAHT,KAhEQ,EAqER;AACEH,MAAAA,KAAK,EAAE,QADT;AAEEG,MAAAA,KAAK,EAAE,QAFT;AAGEI,MAAAA,MAAM,EAAE,CAACS,GAAD,EAAMJ,MAAN,EAAcK,KAAd,KAAwB;AAC9B,4BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE,QAAC,QAAD,CAAU,MAAV;AACE,YAAA,IAAI,EAAC,SADP;AAEE,YAAA,OAAO,EAAE,MAAM;AACbC,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,MAAxB;AACA,mBAAKd,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,oBAAoBT,MAAM,CAACU,EAAnD;AACD,aALH;AAME,YAAA,OAAO,EAAE,KAAKC,IAAL,CAAUX,MAAM,CAACU,EAAjB,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,UAAD;AACE,YAAA,KAAK,EAAC,yBADR;AAEE,YAAA,QAAQ,EAAE,MAAM;AACdJ,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,aAJH;AAKE,YAAA,SAAS,EAAE,MAAM;AACfD,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,MAA/B;AACAtB,cAAAA,WAAW,CAACsB,MAAM,CAACU,EAAR,CAAX,CAAuBE,IAAvB,CAA6BC,GAAD,IAAS;AACnCtC,gBAAAA,OAAO,CAACuC,OAAR,CAAgBD,GAAG,CAACE,GAApB;AACA,qBAAKC,QAAL,CAAc,KAAKC,KAAL,CAAWC,OAAzB,EAAkC,KAAKD,KAAL,CAAWE,QAA7C;AAEAb,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,GAApB;AACAP,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKU,KAA9B;AACD,eAND;AAOD,aAdH;AAAA,mCAgBE,QAAC,MAAD;AACE,cAAA,KAAK,EAAE;AACLG,gBAAAA,MAAM,EAAE,KADH;AAELC,gBAAAA,WAAW,EAAE,KAFR;AAGLC,gBAAAA,SAAS,EAAE,MAHN;AAILC,gBAAAA,MAAM,EAAE;AAJH,eADT;AAOE,cAAA,IAAI,EAAC,QAPP;AAQE,cAAA,IAAI,EAAC,OARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBF;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AA2CD;AA/CH,KArEQ,CApBS;;AAAA,SA2InBZ,IA3ImB,GA2IXa,CAAD,iBACL,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BF,CAA5B,CAAf;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA,SAAe,gBAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA,SAAe,YAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA,SAAe,WAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA,SAAe,cAAf;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA,SAAe,SAAf;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA,SAAe,QAAf;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5IiB;;AAAA,SAsJnBC,WAtJmB,GAsJL,CAACE,EAAD,EAAK;AAAEtC,MAAAA;AAAF,KAAL,KAAiB;AAC7BiB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BlB,GAA/B;AACA,WAAKuC,YAAL,CAAkBD,EAAlB;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BoB,EAA3B;;AACA,UACEtC,GAAG,KAAK,gBAAR,IACAA,GAAG,KAAK,YADR,IAEAA,GAAG,KAAK,WAHV,EAIE;AACA,aAAKwC,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE,CAAC,KAAKb,KAAL,CAAWa;AADT,SAAd;AAGD,OARD,MAQO,IAAIzC,GAAG,KAAK,cAAZ,EAA4B;AACjC,aAAKwC,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE,CAAC,KAAKb,KAAL,CAAWa,OADT;AAEZC,UAAAA,IAAI,EAAE;AAFM,SAAd;AAID,OALM,MAKA,IAAI1C,GAAG,KAAK,SAAZ,EAAuB;AAC5B,aAAKwC,QAAL,CACE;AACEE,UAAAA,IAAI,EAAE,cADR;AAEEC,UAAAA,MAAM,EAAE;AAFV,SADF,EAKE,MAAM;AACJvD,UAAAA,UAAU,CAAC;AAAEsD,YAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWc,IAAnB;AAAyBC,YAAAA,MAAM,EAAE,KAAKf,KAAL,CAAWe;AAA5C,WAAD,CAAV,CACGpB,IADH,CACSC,GAAD,IAAS;AACbP,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,GAAvB;AACD,WAHH,EAIGoB,KAJH,CAIUC,KAAD,IAAW;AAChB5B,YAAAA,OAAO,CAACC,GAAR,CAAY2B,KAAZ;AACD,WANH;AAOA3D,UAAAA,OAAO,CAACuC,OAAR,CAAgB,uBAAhB;AACD,SAdH;AAgBD,OAjBM,MAiBA;AACL,aAAKe,QAAL,CACE;AACEE,UAAAA,IAAI,EAAE,cADR;AAEEC,UAAAA,MAAM,EAAE;AAFV,SADF,EAKE,MAAM;AACJvD,UAAAA,UAAU,CAAC;AAAEsD,YAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWc,IAAnB;AAAyBC,YAAAA,MAAM,EAAE,KAAKf,KAAL,CAAWe;AAA5C,WAAD,CAAV,CACGpB,IADH,CACSC,GAAD,IAAS;AACbP,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,GAAtB;AACD,WAHH,EAIGoB,KAJH,CAIUC,KAAD,IAAW;AAChB5B,YAAAA,OAAO,CAACC,GAAR,CAAY2B,KAAZ;AACD,WANH;AAOA3D,UAAAA,OAAO,CAACuC,OAAR,CAAgB,sBAAhB;AACD,SAdH;AAgBD;;AAED,UAAIzB,GAAJ,EAAS;AACP,gBAAQA,GAAR;AACE,eAAK,gBAAL;AACE,mBAAO,KAAKwC,QAAL,CAAc;AACnBM,cAAAA,OAAO,EAAE9C,GADU;AAEnBD,cAAAA,KAAK,EAAE;AAFY,aAAd,CAAP;;AAIF,eAAK,YAAL;AACE,mBAAO,KAAKyC,QAAL,CAAc;AACnBM,cAAAA,OAAO,EAAE9C,GADU;AAEnBD,cAAAA,KAAK,EAAE;AAFY,aAAd,CAAP;;AAIF,eAAK,WAAL;AACE,mBAAO,KAAKyC,QAAL,CAAc;AACnBM,cAAAA,OAAO,EAAE9C,GADU;AAEnBD,cAAAA,KAAK,EAAE;AAFY,aAAd,CAAP;;AAIF,eAAK,cAAL;AACE,mBAAO,KAAKyC,QAAL,CAAc;AACnBzC,cAAAA,KAAK,EAAE;AADY,aAAd,CAAP;;AAGF,eAAK,SAAL;AACE,mBAAO,KAAKyC,QAAL,CAAc;AACnBzC,cAAAA,KAAK,EAAE;AADY,aAAd,CAAP;;AAGF,eAAK,QAAL;AACE,mBAAO,KAAKyC,QAAL,CAAc;AACnBzC,cAAAA,KAAK,EAAE;AADY,aAAd,CAAP;;AAGF;AACE,mBAAO,IAAP;AA7BJ;AA+BD;AACF,KA5OkB;;AAAA,SA8OnBwC,YA9OmB,GA8OHD,EAAD,IAAQ;AACrBhD,MAAAA,eAAe,CAACgD,EAAD,CAAf,CAAoBf,IAApB,CAA0BC,GAAD,IAAS;AAChCP,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDM,GAAjD;AACA,aAAKgB,QAAL,CAAeO,GAAD,IAAUA,GAAG,CAACC,SAAJ,GAAgBxB,GAAG,CAACyB,QAA5C;AACAhC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,KAAKU,KAAjD;AACD,OAJD;AAKD,KApPkB;;AAAA,SAqPnBsB,QArPmB,GAqPR,MAAM;AACfjC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAKsB,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZzC,QAAAA,GAAG,EAAEI,IAAI,CAACC,MAAL;AAFO,OAAd;AAID,KA3PkB;;AAAA,SA4PnB8C,QA5PmB,GA4PR,MAAM;AACflC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAKsB,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZzC,QAAAA,GAAG,EAAEI,IAAI,CAACC,MAAL;AAFO,OAAd;AAID,KAlQkB;;AAAA,SAqRnBsB,QArRmB,GAqRR,CAACyB,IAAD,EAAOtB,QAAP,KAAoB;AAC7Bb,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BkC,IAA9B,EAAoCtB,QAApC;;AACA,YAAMuB,KAAK,GAAG,IAAd;;AACA,YAAMC,MAAM,GAAG,CAACF,IAAI,GAAG,CAAR,IAAatB,QAA5B;AACA,YAAMyB,KAAK,GAAGzB,QAAd;AACA1C,MAAAA,UAAU,CAACkE,MAAD,EAASC,KAAT,CAAV,CACGhC,IADH,CACSC,GAAD,IAAS;AACbP,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,GAAxB;;AACA6B,QAAAA,KAAK,CAACb,QAAN,CAAe;AACbgB,UAAAA,SAAS,EAAEhC,GAAG,CAACgC,SADF;AAEbC,UAAAA,QAAQ,EAAE,IAFG;AAGbC,UAAAA,KAAK,EAAElC,GAAG,CAACkC,KAHE;AAIb5B,UAAAA,QAAQ,EAAEyB,KAJG;AAKb1B,UAAAA,OAAO,EAAEuB;AALI,SAAf;;AAOAnC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BkC,IAA9B,EAAoCC,KAAK,CAACzB,KAA1C;AACD,OAXH,EAYGgB,KAZH,CAYUC,KAAD,IAAW;AAChBQ,QAAAA,KAAK,CAACb,QAAN,CAAe;AACbiB,UAAAA,QAAQ,EAAE,KADG;AAEbZ,UAAAA,KAAK,EAAEA;AAFM,SAAf;AAID,OAjBH;AAkBD,KA5SkB;;AAAA,SA6SnBc,cA7SmB,GA6SF,CAACP,IAAD,EAAOQ,GAAP,KAAe;AAC9B3C,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BkC,IAA9B,EAAoCQ,GAApC;;AACA,YAAMP,KAAK,GAAG,IAAd;;AACA,YAAMC,MAAM,GAAG,CAACF,IAAI,GAAG,CAAR,IAAaQ,GAA5B;AACA,YAAML,KAAK,GAAGK,GAAd;AACA3C,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CoC,MAA9C,EAAsDC,KAAtD;AACAnE,MAAAA,UAAU,CAACkE,MAAD,EAASC,KAAT,CAAV,CACGhC,IADH,CACSC,GAAD,IAAS;AACbP,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,GAAxB;;AACA6B,QAAAA,KAAK,CAACb,QAAN,CAAe;AACbgB,UAAAA,SAAS,EAAEhC,GAAG,CAACgC,SADF;AAEbC,UAAAA,QAAQ,EAAE,IAFG;AAGbC,UAAAA,KAAK,EAAElC,GAAG,CAACkC,KAHE;AAIb5B,UAAAA,QAAQ,EAAEyB,KAJG;AAKb1B,UAAAA,OAAO,EAAEuB;AALI,SAAf;AAOD,OAVH,EAWGR,KAXH,CAWUC,KAAD,IAAW;AAChBQ,QAAAA,KAAK,CAACb,QAAN,CAAe;AACbiB,UAAAA,QAAQ,EAAE,KADG;AAEbZ,UAAAA,KAAK,EAAEA;AAFM,SAAf;AAID,OAhBH;AAiBD,KApUkB;;AAAA,SAqUnBgB,kBArUmB,GAqUGC,CAAD,IAAO;AAC1B7C,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC4C,CAAlC;AACA,WAAKnC,QAAL,CAAcmC,CAAd,EAAiB,KAAKlC,KAAL,CAAWE,QAA5B;AACD,KAxUkB;;AAAA,SAyUnBiC,gBAzUmB,GAyUA,CAAClC,OAAD,EAAUC,QAAV,KAAuB;AACxCb,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCW,OAAjC,EAA0CC,QAA1C,EADwC,CAExC;;AACA,WAAK6B,cAAL,CAAoB9B,OAApB,EAA6BC,QAA7B;AACD,KA7UkB;;AAAA,SA+UnBkC,cA/UmB,GA+UF,MAAM;AACrB,WAAKnE,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB;AACD,KAjVkB;;AAAA,SAkVnB6C,KAlVmB,GAkVX,CAACC,eAAD,EAAkBC,YAAlB,EAAgCC,WAAhC,KAAgD;AACtD,WAAK5B,QAAL,CAAc;AACZ0B,QAAAA,eADY;AAEZC,QAAAA,YAFY;AAGZC,QAAAA;AAHY,OAAd;AAKD,KAxVkB;;AAAA,SAyVnBC,UAzVmB,GAyVLC,GAAD,IAAS;AACpB,WAAKC,QAAL,GAAgBD,GAAhB;AACD,KA3VkB;;AAAA,SA4VnBE,aA5VmB,GA4VFC,IAAD,IAAU;AACxBxD,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCuD,IAAtC;AACAxD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKU,KAAL,CAAWkB,OAA5C;AACA,YAAM0B,aAAa,GAAG,CACpB;AACEE,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,IAAI,EAAE,UAHR;AAIEC,QAAAA,KAAK,EAAE,iBAJT;AAKEC,QAAAA,WAAW,EAAE,uBALf;AAME7E,QAAAA,KAAK,EAAE,KANT;AAOE8E,QAAAA,YAAY,EAAEN,IAAI,CAACO,QAPrB;AAQE1C,QAAAA,EAAE,EAAEmC,IAAI,CAACpD;AARX,OADoB,EAWpB;AACEqD,QAAAA,IAAI,EAAE,QADR;AAEEzE,QAAAA,KAAK,EAAE,OAFT;AAGE0E,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,IAAI,EAAE,OAJR;AAKEC,QAAAA,KAAK,EAAE,kBALT;AAME;AACAE,QAAAA,YAAY,EAAEN,IAAI,CAACQ,KAPrB;AAQE3C,QAAAA,EAAE,EAAEmC,IAAI,CAACpD;AARX,OAXoB,EAqBpB;AACEqD,QAAAA,IAAI,EAAE,QADR;AAEEzE,QAAAA,KAAK,EAAE,OAFT;AAGE0E,QAAAA,KAAK,EAAE,QAHT;AAIEE,QAAAA,KAAK,EAAE,iBAJT;AAKED,QAAAA,IAAI,EAAE,QALR;AAMEG,QAAAA,YAAY,EAAEN,IAAI,CAACS,QANrB;AAOE5C,QAAAA,EAAE,EAAEmC,IAAI,CAACpD;AAPX,OArBoB,EA8BpB;AACEqD,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,IAAI,EAAE,QAHR;AAIEC,QAAAA,KAAK,EAAE,eAJT;AAKEC,QAAAA,WAAW,EAAE,sBALf;AAME7E,QAAAA,KAAK,EAAE,KANT;AAOE;AACA8E,QAAAA,YAAY,EAAEN,IAAI,CAAC3D,MARrB;AASEwB,QAAAA,EAAE,EAAEmC,IAAI,CAACpD;AATX,OA9BoB,CAAtB;AA0CA,aAAOmD,aAAP;AACD,KA1YkB;;AAAA,SA2YnBW,YA3YmB,GA2YHV,IAAD,IAAU;AACvB,YAAMnC,EAAE,GAAG,KAAKV,KAAL,CAAWoB,SAAX,IAAwB,KAAKpB,KAAL,CAAWoB,SAAX,CAAqB3B,EAAxD;;AACA,UAAIiB,EAAJ,EAAQ;AACN,cAAM8C,QAAQ,GAAG,KAAKxD,KAAL,CAAWoB,SAAX,IAAwB,KAAKpB,KAAL,CAAWoB,SAAX,CAAqBgC,QAA9D;AACA,cAAMK,KAAK,GAAG,KAAKzD,KAAL,CAAWoB,SAAX,IAAwB,KAAKpB,KAAL,CAAWoB,SAAX,CAAqBiC,KAA3D;AACA,cAAMtC,MAAM,GAAG,KAAKf,KAAL,CAAWoB,SAAX,IAAwB,KAAKpB,KAAL,CAAWoB,SAAX,CAAqBlC,MAA5D;AACA,cAAMwE,MAAM,GAAG,KAAK1D,KAAL,CAAWoB,SAAX,IAAwB,KAAKpB,KAAL,CAAWoB,SAAX,CAAqBkC,QAA5D,CAJM,CAKN;;AACA,YAAIK,MAAM,GAAG,EAAb;AAEA,aAAK3D,KAAL,CAAWoB,SAAX,IACE,KAAKpB,KAAL,CAAWoB,SAAX,CAAqBzC,UAArB,CAAgCC,GAAhC,CAAqCgF,IAAD,IAAU;AAC5CD,UAAAA,MAAM,CAACnE,IAAP,CAAa,GAAEoE,IAAI,CAAC9E,OAAL,CAAa+E,QAAS,EAArC;AACA,iBAAOF,MAAP;AACD,SAHD,CADF;AAMA,YAAIG,YAAY,GAAG,EAAnB;AACAA,QAAAA,YAAY,CAAC,UAAD,CAAZ,GAA2BN,QAA3B;AACAM,QAAAA,YAAY,CAAC,OAAD,CAAZ,GAAwBL,KAAxB;AACAK,QAAAA,YAAY,CAAC,QAAD,CAAZ,GAAyB/C,MAAzB;AACA+C,QAAAA,YAAY,CAAC,QAAD,CAAZ,GAAyBJ,MAAzB;AACAI,QAAAA,YAAY,CAAC,QAAD,CAAZ,GAAyBH,MAAzB;AACA,aAAK/C,QAAL,CACE;AACEmD,UAAAA,cAAc,EAAED;AADlB,SADF,EAIE,MAAM;AACJ,cAAIjB,IAAI,CAACW,QAAT,EAAmB;AACjBM,YAAAA,YAAY,CAACN,QAAb,GAAwBX,IAAI,CAACW,QAA7B;AACD,WAFD,MAEO,IAAIX,IAAI,CAACY,KAAT,EAAgB;AACrBK,YAAAA,YAAY,CAACL,KAAb,GAAqBZ,IAAI,CAACY,KAA1B;AACD,WAFM,MAEA,IAAIZ,IAAI,CAACa,MAAT,EAAiB;AACtBI,YAAAA,YAAY,CAACJ,MAAb,GAAsBb,IAAI,CAACa,MAA3B;AACD,WAFM,MAEA,IAAIb,IAAI,CAAC9B,MAAT,EAAiB;AACtB+C,YAAAA,YAAY,CAAC/C,MAAb,GAAsB8B,IAAI,CAAC9B,MAA3B;AACD;;AACD,cAAIiD,YAAY,GAAGC,MAAM,CAACC,MAAP,CACjB,EADiB,EAEjB,KAAKlE,KAAL,CAAW+D,cAFM,EAGjBD,YAHiB,EAIjBjB,IAJiB,CAAnB;AAMAxD,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B0E,YAA5B;AACA,eAAKG,gBAAL,CAAsBzD,EAAtB,EAA0BsD,YAA1B;AACD,SAtBH;AAwBD;AACF,KA1bkB;;AAAA,SA2bnBG,gBA3bmB,GA2bA,CAACzD,EAAD,EAAK0D,SAAL,KAAmB;AACpC/E,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC8E,SAAhC,EAA2C1D,EAA3C;;AACA,UAAIA,EAAJ,EAAQ;AACN/C,QAAAA,YAAY,CAAC+C,EAAD,EAAK0D,SAAL,CAAZ,CACGzE,IADH,CACSC,GAAD,IAAS;AACb;AACA;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CM,GAA9C,EAHa,CAIb;AACA;AACA;;AACA,eAAKG,QAAL,CAAc,KAAKC,KAAL,CAAWC,OAAzB,EAAkC,KAAKD,KAAL,CAAWE,QAA7C;AACD,SATH,EAUGc,KAVH,CAUUqD,GAAD,IAAS;AACdhF,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC+E,GAAvC;AACD,SAZH;AAaD;;AAED,WAAK1B,QAAL,CAAc1E,KAAd,CAAoBqG,IAApB,CAAyBC,WAAzB;AACA,WAAK3D,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAjdkB;;AAEjB,SAAKb,KAAL,GAAa;AACX+D,MAAAA,cAAc,EAAE,EADL;AAEXzB,MAAAA,eAAe,EAAE,EAFN;AAGXV,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,QAAQ,EAAE,KAJC;AAKXC,MAAAA,KAAK,EAAE,CALI;AAMX5B,MAAAA,QAAQ,EAAE,EANC;AAOXwB,MAAAA,MAAM,EAAE,CAPG;AAQX8C,MAAAA,eAAe,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CARN;AASXvE,MAAAA,OAAO,EAAE,CATE;AAUXY,MAAAA,OAAO,EAAE,KAVE;AAWXO,MAAAA,SAAS,EAAE,EAXA;AAYXF,MAAAA,OAAO,EAAE,EAZE;AAaXJ,MAAAA,IAAI,EAAE,EAbK;AAcXC,MAAAA,MAAM,EAAE;AAdG,KAAb;AAgBD;;AAiPD0D,EAAAA,kBAAkB,GAAG;AACnB,UAAMhD,KAAK,GAAG,IAAd;;AACAjE,IAAAA,UAAU,GACPmC,IADH,CACSC,GAAD,IAAS;AACbP,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CM,GAA5C;;AACA6B,MAAAA,KAAK,CAACb,QAAN,CAAe;AACbgB,QAAAA,SAAS,EAAEhC,GAAG,CAACgC,SADF;AAEbC,QAAAA,QAAQ,EAAE,IAFG;AAGbC,QAAAA,KAAK,EAAElC,GAAG,CAACkC;AAHE,OAAf;AAKD,KARH,EASGd,KATH,CASUC,KAAD,IAAW;AAChBQ,MAAAA,KAAK,CAACb,QAAN,CAAe;AACbiB,QAAAA,QAAQ,EAAE,KADG;AAEbZ,QAAAA,KAAK,EAAEA;AAFM,OAAf;AAID,KAdH;AAeD;;AA+LDvC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEmE,MAAAA,IAAF;AAAQzB,MAAAA;AAAR,QAAsB,KAAKpB,KAAjC;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYuD,IAAZ,EAAkB,MAAlB;AACA,wBACE;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAE,EAAX;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,KAAK,EACH,0BAA0B,UAA1B,GAAuC,KAAK7C,KAAL,CAAW8B,KAAlD,GAA0D,GAF9D;AAIE,YAAA,KAAK,eACH,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,SADP;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,OAAO,EAAE,KAAKM,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA,mCAcE,QAAC,GAAD;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,IAAI,EAAE,EAAX;AAAA,wCACE,QAAC,SAAD;AACE,kBAAA,MAAM,EAAC,IADT;AAEE,kBAAA,OAAO,EAAE,KAAKlE,OAFhB;AAGE,kBAAA,UAAU,EAAE,KAAK8B,KAAL,CAAW4B,SAHzB;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,KAAK,EAAE,KAAK5B,KAAL,CAAW8B,KALpB;AAME,kBAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAWE,QANvB,CAOE;AAPF;AAQE,kBAAA,kBAAkB,EAAE,KAAK+B,kBAR3B;AASE,kBAAA,gBAAgB,EAAE,KAAKE,gBATzB;AAUE,kBAAA,eAAe,EAAE,KAAKnC,KAAL,CAAWwE,eAV9B;AAWE,kBAAA,OAAO,EAAE,CAAC,KAAKxE,KAAL,CAAW6B;AAXvB;AAAA;AAAA;AAAA;AAAA,wBADF,eAcE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAE,KAAKY,UADd;AAEE,kBAAA,OAAO,EAAE,KAAKzC,KAAL,CAAWa,OAFtB;AAGE,kBAAA,aAAa,EAAE,KAAK+B,aAAL,CAAmBxB,SAAnB,CAHjB;AAIE,kBAAA,KAAK,EAAE,KAAKpB,KAAL,CAAW7B,KAJpB;AAKE,kBAAA,MAAM,EAAE,KAAKoF,YAAL,CAAkB9C,IAAlB,CAAuB,IAAvB,CALV;AAME,kBAAA,KAAK,EAAE,MAAM;AACX,yBAAKG,QAAL,CAAc;AACZC,sBAAAA,OAAO,EAAE,KADG;AAEZO,sBAAAA,SAAS,EAAE;AAFC,qBAAd;AAIA,yBAAKuB,QAAL,CAAc1E,KAAd,CAAoBqG,IAApB,CAAyBC,WAAzB;AACD;AAZH;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsDD;;AA7gB+B;;AA+gBlC,MAAMG,eAAe,GAAG,CAAC1E,KAAD,EAAQ2E,QAAR,KAAqB;AAC3CtF,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCU,KAAzC,EAD2C,CAE3C;AACA;;AAEA,SAAOA,KAAP;AACD,CAND;;AAOA,eAAenC,OAAO,CAAC6G,eAAD,CAAP,CAAyB3G,SAAzB,CAAf","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Button,\n  Popconfirm,\n  Row,\n  Col,\n  Menu,\n  Dropdown,\n  message,\n  Tooltip,\n} from \"antd\";\nimport {\n  insListApi,\n  delInsInfor,\n  getInsInforById,\n  editInsInfor,\n} from \"../../service/instances\";\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { connect } from \"react-redux\";\nimport InstModal from \"./InstModal\";\nimport \"./instances.css\";\n\nclass Instances extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateInstance: {},\n      selectedRowKeys: [],\n      instances: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1,\n      visible: false,\n      everyData: {},\n      menuKey: \"\",\n      flag: \"\",\n      action: \"\",\n    };\n  }\n\n  columns = [\n    {\n      title: \"ID\",\n      key: \"ID\",\n      width: 60,\n      align: \"center\",\n      dataIndex: \"ID\",\n    },\n    {\n      title: \"HostName\",\n      dataIndex: \"Hostname\",\n      align: \"center\",\n    },\n    {\n      title: \"Flavor\",\n      dataIndex: \"Flavor.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"Image\",\n      dataIndex: \"Image.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"IP Address\",\n      dataIndex: \"Interfaces\",\n      key: Math.random(),\n      align: \"center\",\n      render: (Interfaces) => (\n        <span>\n          {Interfaces.map((iface) => {\n            return iface.Address.Address + \" \";\n          })}\n        </span>\n      ),\n    },\n    {\n      title: \"Console\",\n      dataIndex: \"\",\n      align: \"center\",\n    },\n    {\n      title: \"Status\",\n      // dataIndex: \"Status\",\n      align: \"center\",\n      width: \"60px\",\n      render: (record) => {\n        return (\n          <Tooltip title={record.Reason}>\n            <span style={{ color: \"#1890ff\" }}>{record.Status}</span>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      title: \"Hyper\",\n      dataIndex: \"Hyper\",\n      align: \"center\",\n    },\n    {\n      title: \"Owner\",\n      dataIndex: \"OwnerInfo.name\",\n      align: \"center\",\n    },\n    {\n      title: \"Zone\",\n      dataIndex: \"Zone.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"Action\",\n      align: \"center\",\n      render: (txt, record, index) => {\n        return (\n          <div className=\"actionStyle\">\n            <Dropdown.Button\n              type=\"primary\"\n              onClick={() => {\n                console.log(\"onClick:\", record);\n                this.props.history.push(\"/instances/new/\" + record.ID);\n              }}\n              overlay={this.menu(record.ID)}\n            >\n              Edit\n            </Dropdown.Button>\n            <Popconfirm\n              title=\"Are you sure to delete?\"\n              onCancel={() => {\n                console.log(\"cancelled\");\n              }}\n              onConfirm={() => {\n                console.log(\"onClick-delete:\", record);\n                delInsInfor(record.ID).then((res) => {\n                  message.success(res.Msg);\n                  this.loadData(this.state.current, this.state.pageSize);\n\n                  console.log(\"用户~~\", res);\n                  console.log(\"用户~~state\", this.state);\n                });\n              }}\n            >\n              <Button\n                style={{\n                  margin: \"5px\",\n                  marginRight: \"0px\",\n                  marginTop: \"10px\",\n                  height: \"32px\",\n                }}\n                type=\"danger\"\n                size=\"small\"\n              >\n                Delete\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n  menu = (r) => (\n    <Menu onClick={this.handleModal.bind(this, r)}>\n      <Menu.Item key=\"changeHostname\">Change Hostname</Menu.Item>\n      <Menu.Item key=\"migrateIns\">Migrate Instance</Menu.Item>\n      <Menu.Item key=\"resizeIns\">Resize Instance</Menu.Item>\n      <Menu.Item key=\"changeStatus\">Change Status</Menu.Item>\n      <Menu.Item key=\"startVm\">Start VM</Menu.Item>\n      <Menu.Item key=\"stopVm\">Stop VM</Menu.Item>\n    </Menu>\n  );\n\n  handleModal = (id, { key }) => {\n    console.log(\"handleModal-key\", key);\n    this.handleChange(id);\n    console.log(\"handleModal\", id);\n    if (\n      key === \"changeHostname\" ||\n      key === \"migrateIns\" ||\n      key === \"resizeIns\"\n    ) {\n      this.setState({\n        visible: !this.state.visible,\n      });\n    } else if (key === \"changeStatus\") {\n      this.setState({\n        visible: !this.state.visible,\n        flag: \"ChangeStatus\",\n      });\n    } else if (key === \"startVm\") {\n      this.setState(\n        {\n          flag: \"ChangeStatus\",\n          action: \"start\",\n        },\n        () => {\n          insListApi({ flag: this.state.flag, action: this.state.action })\n            .then((res) => {\n              console.log(\"startVm\", res);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n          message.success(\"Start VM successfully\");\n        }\n      );\n    } else {\n      this.setState(\n        {\n          flag: \"ChangeStatus\",\n          action: \"shutdown\",\n        },\n        () => {\n          insListApi({ flag: this.state.flag, action: this.state.action })\n            .then((res) => {\n              console.log(\"stopVm\", res);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n          message.success(\"Stop VM successfully\");\n        }\n      );\n    }\n\n    if (key) {\n      switch (key) {\n        case \"changeHostname\":\n          return this.setState({\n            menuKey: key,\n            title: \"Change Hostname\",\n          });\n        case \"migrateIns\":\n          return this.setState({\n            menuKey: key,\n            title: \"Migrate Instance\",\n          });\n        case \"resizeIns\":\n          return this.setState({\n            menuKey: key,\n            title: \"Resize Instance\",\n          });\n        case \"changeStatus\":\n          return this.setState({\n            title: \"Change Status\",\n          });\n        case \"startVm\":\n          return this.setState({\n            title: \"Start VM\",\n          });\n        case \"stopVm\":\n          return this.setState({\n            title: \"Stop VM\",\n          });\n        default:\n          return null;\n      }\n    }\n  };\n\n  handleChange = (id) => {\n    getInsInforById(id).then((res) => {\n      console.log(\"handleChange-getInsInforById-res:\", res);\n      this.setState((sta) => (sta.everyData = res.instance));\n      console.log(\"handleChange-state.everyData\", this.state);\n    });\n  };\n  onCancel = () => {\n    console.log(\"cancel\");\n    this.setState({\n      visible: false,\n      key: Math.random(),\n    });\n  };\n  handleOk = () => {\n    console.log(\"ok\");\n    this.setState({\n      visible: false,\n      key: Math.random(),\n    });\n  };\n  componentWillMount() {\n    const _this = this;\n    insListApi()\n      .then((res) => {\n        console.log(\"componentDidMount-instances:\", res);\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  loadData = (page, pageSize) => {\n    console.log(\"ins-loadData~~\", page, pageSize);\n    const _this = this;\n    const offset = (page - 1) * pageSize;\n    const limit = pageSize;\n    insListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n        console.log(\"loadData-page-\", page, _this.state);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  toSelectchange = (page, num) => {\n    console.log(\"toSelectchange\", page, num);\n    const _this = this;\n    const offset = (page - 1) * num;\n    const limit = num;\n    console.log(\"instance-toSelectchange~limit:\", offset, limit);\n    insListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  onPaginationChange = (e) => {\n    console.log(\"onPaginationChange\", e);\n    this.loadData(e, this.state.pageSize);\n  };\n  onShowSizeChange = (current, pageSize) => {\n    console.log(\"onShowSizeChange:\", current, pageSize);\n    //当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n    this.toSelectchange(current, pageSize);\n  };\n\n  createInstance = () => {\n    this.props.history.push(\"/instances/new\");\n  };\n  onRef = (selectedRowKeys, selectedRows, selectedIds) => {\n    this.setState({\n      selectedRowKeys,\n      selectedRows,\n      selectedIds,\n    });\n  };\n  onModalRef = (ref) => {\n    this.modalRef = ref;\n  };\n  modalFormList = (data) => {\n    console.log(\"instance-modalFormList\", data);\n    console.log(\"key-modalFormList\", this.state.menuKey);\n    const modalFormList = [\n      {\n        type: \"INPUT\",\n        label: \"Hostname\",\n        name: \"hostname\",\n        field: \"Change Hostname\",\n        placeholder: \"Please input Hostname\",\n        width: \"90%\",\n        initialValue: data.Hostname,\n        id: data.ID,\n      },\n      {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Hyper\",\n        name: \"hyper\",\n        field: \"Migrate Instance\",\n        // disabled:true,\n        initialValue: data.Hyper,\n        id: data.ID,\n      },\n      {\n        type: \"SELECT\",\n        width: \"200px\",\n        label: \"Flavor\",\n        field: \"Resize Instance\",\n        name: \"flavor\",\n        initialValue: data.FlavorID,\n        id: data.ID,\n      },\n      {\n        type: \"SELECT\",\n        label: \"Action\",\n        name: \"action\",\n        field: \"Change Status\",\n        placeholder: \"Please Select Status\",\n        width: \"90%\",\n        // disabled:true,\n        initialValue: data.Status,\n        id: data.ID,\n      },\n    ];\n    return modalFormList;\n  };\n  handleSubmit = (data) => {\n    const id = this.state.everyData && this.state.everyData.ID;\n    if (id) {\n      const hostname = this.state.everyData && this.state.everyData.Hostname;\n      const hyper = this.state.everyData && this.state.everyData.Hyper;\n      const action = this.state.everyData && this.state.everyData.Status;\n      const flavor = this.state.everyData && this.state.everyData.FlavorID;\n      // const ifaces = this.state.everyData.Interfaces[0].Address.SubnetID;\n      let ifaces = [];\n\n      this.state.everyData &&\n        this.state.everyData.Interfaces.map((item) => {\n          ifaces.push(`${item.Address.SubnetID}`);\n          return ifaces;\n        });\n\n      let initInstance = {};\n      initInstance[\"hostname\"] = hostname;\n      initInstance[\"hyper\"] = hyper;\n      initInstance[\"action\"] = action;\n      initInstance[\"flavor\"] = flavor;\n      initInstance[\"ifaces\"] = ifaces;\n      this.setState(\n        {\n          updateInstance: initInstance,\n        },\n        () => {\n          if (data.hostname) {\n            initInstance.hostname = data.hostname;\n          } else if (data.hyper) {\n            initInstance.hyper = data.hyper;\n          } else if (data.flavor) {\n            initInstance.flavor = data.flavor;\n          } else if (data.action) {\n            initInstance.action = data.action;\n          }\n          let dataInstance = Object.assign(\n            {},\n            this.state.updateInstance,\n            initInstance,\n            data\n          );\n          console.log(\"dataInstance\", dataInstance);\n          this.handleUpdateList(id, dataInstance);\n        }\n      );\n    }\n  };\n  handleUpdateList = (id, paramsObj) => {\n    console.log(\"hangleUpdateList\", paramsObj, id);\n    if (id) {\n      editInsInfor(id, paramsObj)\n        .then((res) => {\n          // let _json = res.data;\n          // if (_json.return_code === \"0\") {\n          console.log(\"handleUpdateList-editInsInfor:\", res);\n          // } else {\n          //   message.error(res.message);\n          // }\n          this.loadData(this.state.current, this.state.pageSize);\n        })\n        .catch((err) => {\n          console.log(\"handleUpdateList-error:\", err);\n        });\n    }\n\n    this.modalRef.props.form.resetFields();\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { data, everyData } = this.state;\n    console.log(data, \"data\");\n    return (\n      <div>\n        <Row>\n          <Col span={24}>\n            <Card\n              title={\n                \"Instance Manage Panel\" + \"(Total: \" + this.state.total + \")\"\n              }\n              extra={\n                <Button\n                  type=\"primary\"\n                  size=\"small\"\n                  onClick={this.createInstance}\n                >\n                  Create\n                </Button>\n              }\n            >\n              <Row>\n                <Col span={24}>\n                  <DataTable\n                    rowKey=\"ID\"\n                    columns={this.columns}\n                    dataSource={this.state.instances}\n                    bordered\n                    total={this.state.total}\n                    pageSize={this.state.pageSize}\n                    // scroll={{ y: 600, x: 600 }}\n                    onPaginationChange={this.onPaginationChange}\n                    onShowSizeChange={this.onShowSizeChange}\n                    pageSizeOptions={this.state.pageSizeOptions}\n                    loading={!this.state.isLoaded}\n                  />\n                  <InstModal\n                    onRef={this.onModalRef}\n                    visible={this.state.visible}\n                    modalFormList={this.modalFormList(everyData)}\n                    title={this.state.title}\n                    submit={this.handleSubmit.bind(this)}\n                    close={() => {\n                      this.setState({\n                        visible: false,\n                        everyData: {},\n                      });\n                      this.modalRef.props.form.resetFields();\n                    }}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mapStateToProps-instance:\", state);\n  // var loginInfo = JSON.parse(state.loginInfo);\n  // console.log(\"mapStateToProps-isadmin:\", JSON.parse(state.loginInfo));\n\n  return state;\n};\nexport default connect(mapStateToProps)(Instances);\n"]},"metadata":{},"sourceType":"module"}