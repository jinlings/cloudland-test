{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/orgs/Orgs.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Card, Button, Popconfirm, message, Input } from \"antd\";\nimport { orgsListApi, delOrgInfor } from \"../../service/orgs\";\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { filterOrgList, fetchOrgList } from \"../../redux/actions/OrgAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nclass Orgs extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: \"ID\",\n      dataIndex: \"ID\",\n      key: \"ID\",\n      width: 80,\n      align: \"center\"\n    }, {\n      title: \"Name\",\n      dataIndex: \"name\"\n    }, {\n      title: \"Created At\",\n      dataIndex: \"CreatedAt\",\n      render: record => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: moment(record).format(\"YYYY-MM-DD HH:mm:ss\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, {\n      title: \"Action\",\n      render: (txt, record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            size: \"small\",\n            onClick: () => {\n              this.props.history.push(\"/orgs/new/\" + record.ID);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"Do you want to delete?\",\n            onCancel: () => {\n              console.log(\"Cancel delete.\");\n            },\n            onConfirm: () => {\n              console.log(\"Confirm delete.\");\n              delOrgInfor(record.ID).then(res => {\n                message.success(res.Msg);\n                this.loadData(this.state.current, this.state.pageSize);\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: \"0 1rem\"\n              },\n              type: \"danger\",\n              size: \"small\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this);\n      }\n    }];\n\n    this.loadData = (page, pageSize) => {\n      const _this = this;\n\n      const offset = (page - 1) * pageSize;\n      const limit = pageSize;\n      orgsListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          orgs: res.orgs,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n\n        console.log(\"loadData-page-\", page, _this.state);\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.toSelectchange = (page, num) => {\n      console.log(\"toSelectchange\", page, num);\n\n      const _this = this;\n\n      const offset = (page - 1) * num;\n      const limit = num;\n      orgsListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          orgs: res.orgs,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.createOrg = () => {\n      this.props.history.push(\"/orgs/new\");\n    };\n\n    this.filter = event => {\n      this.props.handleFilterOrgList(event.target.value);\n    };\n\n    this.state = {\n      orgs: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1\n    };\n  }\n\n  componentDidMount() {\n    const _this = this;\n\n    const {\n      orgList\n    } = this.props.user;\n    const {\n      handleFetchOrgList\n    } = this.props;\n\n    if (!orgList || orgList.length === 0) {\n      handleFetchOrgList();\n    }\n  }\n\n  render() {\n    const {\n      filteredList,\n      isLoading\n    } = this.props.user;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Organization Manage Panel\" + \"(Total: \" + filteredList.length + \")\",\n      extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"Search...\",\n          onChange: this.filter,\n          enterButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            float: \"right\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\"\n          },\n          type: \"primary\",\n          onClick: this.createOrg,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        rowKey: \"ID\",\n        columns: this.columns,\n        dataSource: filteredList,\n        bordered: true,\n        total: filteredList.length,\n        pageSize: this.state.pageSize,\n        scroll: {\n          y: 600\n        },\n        onPaginationChange: this.onPaginationChange,\n        onShowSizeChange: this.onShowSizeChange,\n        pageSizeOptions: this.state.pageSizeOptions,\n        loading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  org\n}) => {\n  console.log(\"mapStateToProps-state\", org);\n  return {\n    org\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleFetchOrgList: () => dispatch(fetchOrgList()),\n    handleFilterOrgList: keyword => dispatch(filterOrgList(keyword))\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(Orgs);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/orgs/Orgs.jsx"],"names":["React","Component","moment","Card","Button","Popconfirm","message","Input","orgsListApi","delOrgInfor","DataTable","compose","withRouter","connect","filterOrgList","fetchOrgList","Search","Orgs","constructor","props","columns","title","dataIndex","key","width","align","render","record","format","txt","index","history","push","ID","console","log","then","res","success","Msg","loadData","state","current","pageSize","margin","page","_this","offset","limit","setState","orgs","isLoaded","total","catch","error","toSelectchange","num","createOrg","filter","event","handleFilterOrgList","target","value","pageSizeOptions","componentDidMount","orgList","user","handleFetchOrgList","length","filteredList","isLoading","float","paddingLeft","paddingRight","y","onPaginationChange","onShowSizeChange","mapStateToProps","org","mapDispatchToProps","dispatch","keyword"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Card, Button, Popconfirm, message, Input } from \"antd\";\nimport { orgsListApi, delOrgInfor } from \"../../service/orgs\";\nimport DataTable from \"../../components/DataTable/DataTable\";\n\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { filterOrgList, fetchOrgList } from \"../../redux/actions/OrgAction\";\n\nconst { Search } = Input;\n\nclass Orgs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orgs: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1,\n    };\n  }\n\n  columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"ID\",\n      key: \"ID\",\n      width: 80,\n      align: \"center\",\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"CreatedAt\",\n      render: (record) => (\n        <span>{moment(record).format(\"YYYY-MM-DD HH:mm:ss\")}</span>\n      ),\n    },\n    {\n      title: \"Action\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              onClick={() => {\n                this.props.history.push(\"/orgs/new/\" + record.ID);\n              }}\n            >\n              Edit\n            </Button>\n            <Popconfirm\n              title=\"Do you want to delete?\"\n              onCancel={() => {\n                console.log(\"Cancel delete.\");\n              }}\n              onConfirm={() => {\n                console.log(\"Confirm delete.\");\n                delOrgInfor(record.ID).then((res) => {\n                  message.success(res.Msg);\n                  this.loadData(this.state.current, this.state.pageSize);\n                });\n              }}\n            >\n              <Button style={{ margin: \"0 1rem\" }} type=\"danger\" size=\"small\">\n                Delete\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n\n  componentDidMount() {\n    const _this = this;\n    const { orgList } = this.props.user;\n    const { handleFetchOrgList } = this.props;\n    if (!orgList || orgList.length === 0) {\n      handleFetchOrgList();\n    }\n  }\n\n  loadData = (page, pageSize) => {\n    const _this = this;\n    const offset = (page - 1) * pageSize;\n    const limit = pageSize;\n    orgsListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          orgs: res.orgs,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n        console.log(\"loadData-page-\", page, _this.state);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n\n  toSelectchange = (page, num) => {\n    console.log(\"toSelectchange\", page, num);\n    const _this = this;\n    const offset = (page - 1) * num;\n    const limit = num;\n    orgsListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          orgs: res.orgs,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n\n  createOrg = () => {\n    this.props.history.push(\"/orgs/new\");\n  };\n  filter = (event) => {\n    this.props.handleFilterOrgList(event.target.value);\n  };\n\n  render() {\n    const { filteredList, isLoading } = this.props.user;\n\n    return (\n      <Card\n        title={\n          \"Organization Manage Panel\" + \"(Total: \" + filteredList.length + \")\"\n        }\n        extra={\n          <div>\n            <Search\n              placeholder=\"Search...\"\n              onChange={this.filter}\n              enterButton\n            />\n            <Button\n              style={{\n                float: \"right\",\n                paddingLeft: \"10px\",\n                paddingRight: \"10px\",\n              }}\n              type=\"primary\"\n              onClick={this.createOrg}\n            >\n              Create\n            </Button>\n          </div>\n        }\n      >\n        <DataTable\n          rowKey=\"ID\"\n          columns={this.columns}\n          dataSource={filteredList}\n          bordered\n          total={filteredList.length}\n          pageSize={this.state.pageSize}\n          scroll={{ y: 600 }}\n          onPaginationChange={this.onPaginationChange}\n          onShowSizeChange={this.onShowSizeChange}\n          pageSizeOptions={this.state.pageSizeOptions}\n          loading={isLoading}\n        />\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = ({ org }) => {\n  console.log(\"mapStateToProps-state\", org);\n  return {\n    org,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleFetchOrgList: () => dispatch(fetchOrgList()),\n    handleFilterOrgList: (keyword) => dispatch(filterOrgList(keyword)),\n  };\n};\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Orgs);\n"]},"metadata":{},"sourceType":"module"}