{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { IMAGE_LIST_IS_FETCHING, IMAGE_LIST_FETCHED, IMAGE_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  imageList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (imageList, keyword) => {\n  console.log(\"getFilteredUserList-imageList:\", imageList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return imageList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Name.toLowerCase().indexOf(keyword) > -1 || item.Format.toLowerCase().indexOf(keyword) > -1 || item.Status.toLowerCase().indexOf(keyword) > -1 || item.UserName.toLowerCase().indexOf(keyword) > -1 || item.VirtType.toLowerCase().indexOf(keyword) > -1 || item.Architecture.toLowerCase().indexOf(keyword) > -1);\n};\n\nexport default function ImageReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n\n  switch (action.type) {\n    case IMAGE_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case IMAGE_LIST_FETCHED:\n      console.log(\"IMAGE_LIST_FETCHED\", action);\n      return { ...state,\n        // isLoading: action.loading,\n        imageList: action.imageList,\n        filteredList: getFilteredList(action.imageList, state.keyword)\n      };\n\n    case IMAGE_LIST_FILTER:\n      console.log(\"LIST_FILTER-state\", state);\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.imageList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = ImageReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/ImageReducer.jsx"],"names":["IMAGE_LIST_IS_FETCHING","IMAGE_LIST_FETCHED","IMAGE_LIST_FILTER","initialState","imageList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","console","log","filter","item","ID","toString","indexOf","Name","toLowerCase","Format","Status","UserName","VirtType","Architecture","ImageReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,sBADF,EAEEC,kBAFF,EAGEC,iBAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,SAAD,EAAYK,OAAZ,KAAwB;AAC9CE,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CR,SAA9C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,OAA5C;AACA,SAAOL,SAAS,CAACS,MAAV,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BR,OAA3B,IAAsC,CAAC,CAAvC,IACAK,IAAI,CAACI,IAAL,CAAUC,WAAV,GAAwBF,OAAxB,CAAgCR,OAAhC,IAA2C,CAAC,CAD5C,IAEAK,IAAI,CAACM,MAAL,CAAYD,WAAZ,GAA0BF,OAA1B,CAAkCR,OAAlC,IAA6C,CAAC,CAF9C,IAGAK,IAAI,CAACO,MAAL,CAAYF,WAAZ,GAA0BF,OAA1B,CAAkCR,OAAlC,IAA6C,CAAC,CAH9C,IAIAK,IAAI,CAACQ,QAAL,CAAcH,WAAd,GAA4BF,OAA5B,CAAoCR,OAApC,IAA+C,CAAC,CAJhD,IAKAK,IAAI,CAACS,QAAL,CAAcJ,WAAd,GAA4BF,OAA5B,CAAoCR,OAApC,IAA+C,CAAC,CALhD,IAMAK,IAAI,CAACU,YAAL,CAAkBL,WAAlB,GAAgCF,OAAhC,CAAwCR,OAAxC,IAAmD,CAAC,CARjD,CAAP;AAUD,CAbD;;AAcA,eAAe,SAASgB,YAAT,CAAsBC,KAAK,GAAGvB,YAA9B,EAA4CwB,MAA5C,EAAoD;AACjEhB,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCc,KAAlC;;AACA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAK5B,sBAAL;AACE,aAAO,EACL,GAAG0B,KADE;AAELnB,QAAAA,SAAS,EAAEoB,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAK5B,kBAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCe,MAAlC;AACA,aAAO,EACL,GAAGD,KADE;AAEL;AACAtB,QAAAA,SAAS,EAAEuB,MAAM,CAACvB,SAHb;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACiB,MAAM,CAACvB,SAAR,EAAmBsB,KAAK,CAACjB,OAAzB;AAJxB,OAAP;;AAMF,SAAKP,iBAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCc,KAAjC;AACA,aAAO,EACL,GAAGA,KADE;AAELjB,QAAAA,OAAO,EAAEkB,MAAM,CAAClB,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACgB,KAAK,CAACtB,SAAP,EAAkBuB,MAAM,CAAClB,OAAzB;AAHxB,OAAP;;AAKF;AACE,aAAOiB,KAAP;AAtBJ;AAwBD;KA1BuBD,Y","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  IMAGE_LIST_IS_FETCHING,\n  IMAGE_LIST_FETCHED,\n  IMAGE_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  imageList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (imageList, keyword) => {\n  console.log(\"getFilteredUserList-imageList:\", imageList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return imageList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Name.toLowerCase().indexOf(keyword) > -1 ||\n      item.Format.toLowerCase().indexOf(keyword) > -1 ||\n      item.Status.toLowerCase().indexOf(keyword) > -1 ||\n      item.UserName.toLowerCase().indexOf(keyword) > -1 ||\n      item.VirtType.toLowerCase().indexOf(keyword) > -1 ||\n      item.Architecture.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function ImageReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n  switch (action.type) {\n    case IMAGE_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case IMAGE_LIST_FETCHED:\n      console.log(\"IMAGE_LIST_FETCHED\", action);\n      return {\n        ...state,\n        // isLoading: action.loading,\n        imageList: action.imageList,\n        filteredList: getFilteredList(action.imageList, state.keyword),\n      };\n    case IMAGE_LIST_FILTER:\n      console.log(\"LIST_FILTER-state\", state);\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.imageList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}