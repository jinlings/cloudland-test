{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { SECGROUP_LIST_IS_FETCHING, SECGROUP_LIST_FETCHED, SECGROUP_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  secgroupList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (secgroupList, keyword) => {\n  console.log(\"getFilteredUserList-secgroupList:\", secgroupList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return secgroupList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Name.toLowerCase().indexOf(keyword) > -1 || item.IsDefault.toString().indexOf(keyword) > -1);\n};\n\nexport default function RegReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n\n  switch (action.type) {\n    case SECGROUP_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case SECGROUP_LIST_FETCHED:\n      console.log(\"REG_LIST_FETCHED\", action);\n      return { ...state,\n        // isLoading: action.loading,\n        secgroupList: action.secgroupList,\n        filteredList: getFilteredList(action.secgroupList, state.keyword)\n      };\n\n    case SECGROUP_LIST_FILTER:\n      console.log(\"SECGROUP_LIST_FILTER-state\", state);\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.secgroupList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = RegReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/SecgroupReducer.jsx"],"names":["SECGROUP_LIST_IS_FETCHING","SECGROUP_LIST_FETCHED","SECGROUP_LIST_FILTER","initialState","secgroupList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","console","log","filter","item","ID","toString","indexOf","Name","toLowerCase","IsDefault","RegReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,yBADF,EAEEC,qBAFF,EAGEC,oBAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,YAAD,EAAeK,OAAf,KAA2B;AACjDE,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDR,YAAjD;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,OAA5C;AACA,SAAOL,YAAY,CAACS,MAAb,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BR,OAA3B,IAAsC,CAAC,CAAvC,IACAK,IAAI,CAACI,IAAL,CAAUC,WAAV,GAAwBF,OAAxB,CAAgCR,OAAhC,IAA2C,CAAC,CAD5C,IAEAK,IAAI,CAACM,SAAL,CAAeJ,QAAf,GAA0BC,OAA1B,CAAkCR,OAAlC,IAA6C,CAAC,CAJ3C,CAAP;AAMD,CATD;;AAUA,eAAe,SAASY,UAAT,CAAoBC,KAAK,GAAGnB,YAA5B,EAA0CoB,MAA1C,EAAkD;AAC/DZ,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCU,KAAlC;;AACA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAKxB,yBAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELf,QAAAA,SAAS,EAAEgB,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKxB,qBAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCW,MAAhC;AACA,aAAO,EACL,GAAGD,KADE;AAEL;AACAlB,QAAAA,YAAY,EAAEmB,MAAM,CAACnB,YAHhB;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACa,MAAM,CAACnB,YAAR,EAAsBkB,KAAK,CAACb,OAA5B;AAJxB,OAAP;;AAMF,SAAKP,oBAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CU,KAA1C;AACA,aAAO,EACL,GAAGA,KADE;AAELb,QAAAA,OAAO,EAAEc,MAAM,CAACd,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACY,KAAK,CAAClB,YAAP,EAAqBmB,MAAM,CAACd,OAA5B;AAHxB,OAAP;;AAKF;AACE,aAAOa,KAAP;AAtBJ;AAwBD;KA1BuBD,U","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  SECGROUP_LIST_IS_FETCHING,\n  SECGROUP_LIST_FETCHED,\n  SECGROUP_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  secgroupList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (secgroupList, keyword) => {\n  console.log(\"getFilteredUserList-secgroupList:\", secgroupList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return secgroupList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Name.toLowerCase().indexOf(keyword) > -1 ||\n      item.IsDefault.toString().indexOf(keyword) > -1\n  );\n};\nexport default function RegReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n  switch (action.type) {\n    case SECGROUP_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case SECGROUP_LIST_FETCHED:\n      console.log(\"REG_LIST_FETCHED\", action);\n      return {\n        ...state,\n        // isLoading: action.loading,\n        secgroupList: action.secgroupList,\n        filteredList: getFilteredList(action.secgroupList, state.keyword),\n      };\n    case SECGROUP_LIST_FILTER:\n      console.log(\"SECGROUP_LIST_FILTER-state\", state);\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.secgroupList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}