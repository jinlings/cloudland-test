{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/users/ModifyUser.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport { getUserInforById, editUserInfor } from \"../../api/users\";\nimport \"./users.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  },\n  LayoutType: \"horizontal\"\n};\n\nclass ModifyUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listUsers = () => {\n      this.props.history.push(\"/users\");\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value:\", values);\n          console.log(\"提交\"); //const _this = this;\n\n          editUserInfor(this.props.match.params.id, values).then(res => {\n            console.log(\"editUserInfor:\", res);\n            this.props.history.push(\"/users\");\n          });\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    console.log(\"ModifyUser~~\", props);\n    this.state = {\n      isShowEdit: false,\n      currentData: []\n    };\n    getUserInforById(props.match.params.id).then(res => {\n      console.log(\"getUserInforById:\", res);\n      this.setState({\n        currentData: res,\n        isShowEdit: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Edit Registry\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.listUsers,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: { ...layoutForm.LayoutType\n        },\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"password\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Password\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Organizations\",\n          name: \"members\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"members\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Members\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            children: this.state.currentData.Members.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item.OrgName,\n                children: item.OrgName\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Registry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifyUser\"\n})(ModifyUser);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/users/ModifyUser.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","getUserInforById","editUserInfor","layoutButton","labelCol","span","wrapperCol","layoutForm","LayoutType","ModifyUser","constructor","props","listUsers","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","error","state","isShowEdit","currentData","setState","render","getFieldDecorator","rules","required","initialValue","Password","Members","map","item","i","OrgName","offset","create","name"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport {\n  getUserInforById,\n  editUserInfor,\n} from \"../../api/users\";\nimport \"./users.css\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n  LayoutType: \"horizontal\",\n};\nclass ModifyUser extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"ModifyUser~~\", props);\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n    };\n\n    getUserInforById(props.match.params.id).then((res) => {\n      console.log(\"getUserInforById:\", res);\n      this.setState({\n        currentData: res,\n        isShowEdit: true,\n      });\n    });\n    \n  }\n\n  listUsers = () => {\n    this.props.history.push(\"/users\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n          //const _this = this;\n        editUserInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"editUserInfor:\", res);\n        \n            this.props.history.push(\"/users\");\n          });\n        \n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Card\n        title={\"Edit Registry\"}\n        extra={\n          <Button type=\"primary\" onClick={this.listUsers}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout={{ ...layoutForm.LayoutType }}\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"password\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Password,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Organizations\"\n            name=\"members\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"members\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Members,\n            })(\n              <Select\n                multiple={true}\n              >\n                {\n\t              this.state.currentData.Members.map((item,i)=>{\n\t\t            return(\n\t\t\t         <Select.Option key={i} value={item.OrgName}>{item.OrgName}</Select.Option>\n\t\t            )\n\t              }\n\t              )\n                }\n                \n              </Select>\n              \n            )}\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {\n\t          <Button type=\"primary\" htmlType=\"submit\">\n                Update Registry\n              </Button>\n            }\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifyUser\" })(ModifyUser);\n"]},"metadata":{},"sourceType":"module"}