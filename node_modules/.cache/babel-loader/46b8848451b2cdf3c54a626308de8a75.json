{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/openshifts/ModifyOpenshifts.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message, Row, Col, InputNumber } from \"antd\";\nimport { editOcpInfor, createOcpApi, getOcpInforById } from \"../../service/openshifts\";\nimport { regListApi } from \"../../service/registrys\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifyOpenshifts extends Component {\n  constructor(props) {\n    super(props); //const { getFieldDecorator } = this.props.form;\n\n    this.listOpenshifts = () => {\n      this.props.history.push(\"/openshifts\");\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value-ocp:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            console.log(\"ocp-edit\", this.props.match.params.id, values);\n            editOcpInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"ocp-editInsInfor:\", res);\n              this.props.history.push(\"/openshifts\");\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          } else {\n            createOcpApi(values).then(res => {\n              console.log(\"handleSubmit-res-createOcpApi:\", res);\n              this.props.history.push(\"/openshifts\"); // Utils.loadData(this.state.current, this.state.pageSize)\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    console.log(\"ModifyOcp~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      openshifts: [],\n      currentData: [],\n      registrys: [],\n      flavors: [],\n      keys: [],\n      subnets: []\n    };\n    let that = this;\n\n    if (props.match.params.id) {\n      getOcpInforById(props.match.params.id).then(res => {\n        console.log(\"getOcpInforById-res:\", res);\n        that.setState({\n          currentData: res,\n          isShowEdit: true\n        });\n      });\n    }\n  }\n\n  componentWillMount() {\n    const _this = this;\n\n    regListApi().then(res => {\n      _this.setState({\n        registrys: res.registrys,\n        isLoaded: true\n      });\n\n      console.log(\"registrys:\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    flavorsListApi().then(res => {\n      _this.setState({\n        flavors: res.flavors,\n        isLoaded: true\n      });\n\n      console.log(\"flavors:\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    subnetsListApi().then(res => {\n      _this.setState({\n        subnets: res.subnets,\n        isLoaded: true\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    keysListApi().then(res => {\n      console.log(\"componentWillMount-keys:\", res);\n\n      _this.setState({\n        keys: res.keys,\n        isLoaded: true\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Openshift Cluster\" : \"Create New Openshift Cluster\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.listOpenshifts,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        onSubmit: e => {\n          this.handleSubmit(e);\n        },\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Cluster Name\",\n          name: \"clustername\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"clustername\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.ClusterName\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            ref: c => {\n              this.hostname = c;\n            },\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Base Domain\",\n          name: \"basedomain\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"basedomain\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.BaseDomain\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Created At\",\n          name: \"createdAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"createdAt\", {\n            rules: [],\n            initialValue: this.state.currentData.CreatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"createdAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Updated At\",\n          name: \"updatedAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"updatedAt\", {\n            rules: [],\n            initialValue: this.state.currentData.UpdatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"updatedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Zone\",\n          name: \"zone\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"zone\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"None\",\n            children: /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: 1543,\n              children: \"zone0\"\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Infrastructure Type\",\n          name: \"infrtype\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"infrtype\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }] // initialValue: this.state.currentData.infrtype,\n\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Infrastructure Type\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"s390x\",\n              children: \"z/VM\"\n            }, \"s390x\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"kvm-x86_64\",\n              children: \"KVM on x84_64\"\n            }, \"x86-64\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"kvm-s390x\",\n              children: \"KVM on Z\"\n            }, \"2\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"LoadBalancer_IP\",\n          name: \"extip\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"extip\", {\n            rules: [],\n            initialValue: this.state.currentData.LoadBalancer\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            ref: c => {\n              this.hostname = c;\n            },\n            disabled: this.state.isShowEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"High Available\",\n          name: \"haflag\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"haflag\", {\n            rules: [],\n            initialValue: this.state.currentData.Haflag\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"no\",\n            disabled: this.state.isShowEdit,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"yes\",\n              children: \"yes\"\n            }, \"yes\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"no\",\n              children: \"no\"\n            }, \"no\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Number of Workers\",\n          name: \"nworkers\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"nworkers\", {\n            rules: [],\n            initialValue: this.state.isShowEdit ? this.state.currentData.WorkerNum : 2\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Registry\",\n          name: \"registry\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"registry\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"None\",\n            children: this.state.registrys.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Label\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"LB_Flavor\",\n          name: \"lflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"lflavor\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.Flavor\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"LB_Flavor\",\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Master_Flavor\",\n          name: \"mflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"mflavor\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.MasterFlavor\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Master_Flavor\",\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Worker_Flavor\",\n          name: \"wflavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"wflavor\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: // this.state.test,\n            this.state.currentData.length === 0 ? \"\" : this.state.currentData.WorkerFlavor\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Worker_Flavor\",\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Subnet\",\n          name: \"sunbet\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"sunbet\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Subnet\",\n            children: this.state.subnets.map(val => {\n              if (val.Name === \"public\" || val.Name === \"private\" || val.Name === window.localStorage.token) {\n                return /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: val.ID,\n                  children: [val.Name, \"-\", val.Network, val.Gateway.substring(val.Gateway.indexOf(\"/\"))]\n                }, val.ID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 23\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Key\",\n          name: \"key\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"key\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }] // initialValue:\n\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Key\",\n            children: this.state.keys.map((val, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: [val.ID, \" - \", val.Name]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Openshift Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create New Openshift Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifyOpenshifts\"\n})(ModifyOpenshifts);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/openshifts/ModifyOpenshifts.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","Row","Col","InputNumber","editOcpInfor","createOcpApi","getOcpInforById","regListApi","flavorsListApi","subnetsListApi","keysListApi","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifyOpenshifts","constructor","props","listOpenshifts","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","catch","error","state","value","isShowEdit","openshifts","currentData","registrys","flavors","keys","subnets","that","setState","componentWillMount","_this","isLoaded","render","getFieldDecorator","rules","required","initialValue","ClusterName","c","hostname","BaseDomain","CreatedAt","UpdatedAt","LoadBalancer","Haflag","WorkerNum","map","val","ID","Label","length","Flavor","Name","MasterFlavor","WorkerFlavor","window","localStorage","token","Network","Gateway","substring","indexOf","index","offset","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Input,\n  Select,\n  Button,\n  message,\n  Row,\n  Col,\n  InputNumber,\n} from \"antd\";\nimport {\n  editOcpInfor,\n  createOcpApi,\n  getOcpInforById,\n} from \"../../service/openshifts\";\nimport { regListApi } from \"../../service/registrys\";\n\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass ModifyOpenshifts extends Component {\n  constructor(props) {\n    super(props);\n    //const { getFieldDecorator } = this.props.form;\n    console.log(\"ModifyOcp~~\", this);\n    this.state = {\n      value: \"\",\n      isShowEdit: false,\n      openshifts: [],\n      currentData: [],\n      registrys: [],\n      flavors: [],\n      keys: [],\n      subnets: [],\n    };\n    let that = this;\n    if (props.match.params.id) {\n      getOcpInforById(props.match.params.id).then((res) => {\n        console.log(\"getOcpInforById-res:\", res);\n        that.setState({\n          currentData: res,\n          isShowEdit: true,\n        });\n      });\n    }\n  }\n  componentWillMount() {\n    const _this = this;\n    regListApi()\n      .then((res) => {\n        _this.setState({\n          registrys: res.registrys,\n          isLoaded: true,\n        });\n        console.log(\"registrys:\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    flavorsListApi()\n      .then((res) => {\n        _this.setState({\n          flavors: res.flavors,\n          isLoaded: true,\n        });\n        console.log(\"flavors:\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    subnetsListApi()\n      .then((res) => {\n        _this.setState({\n          subnets: res.subnets,\n          isLoaded: true,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n\n    keysListApi()\n      .then((res) => {\n        console.log(\"componentWillMount-keys:\", res);\n        _this.setState({\n          keys: res.keys,\n          isLoaded: true,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  listOpenshifts = () => {\n    this.props.history.push(\"/openshifts\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value-ocp:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          console.log(\"ocp-edit\", this.props.match.params.id, values);\n          editOcpInfor(this.props.match.params.id, values)\n            .then((res) => {\n              console.log(\"ocp-editInsInfor:\", res);\n              this.props.history.push(\"/openshifts\");\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        } else {\n          createOcpApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createOcpApi:\", res);\n              this.props.history.push(\"/openshifts\");\n              // Utils.loadData(this.state.current, this.state.pageSize)\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\n          this.state.isShowEdit\n            ? \"Edit Openshift Cluster\"\n            : \"Create New Openshift Cluster\"\n        }\n        extra={\n          <Button type=\"primary\" size=\"small\" onClick={this.listOpenshifts}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          onSubmit={(e) => {\n            this.handleSubmit(e);\n          }}\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n        >\n          <Form.Item\n            label=\"Cluster Name\"\n            name=\"clustername\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"clustername\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.ClusterName,\n            })(\n              <Input\n                ref={(c) => {\n                  this.hostname = c;\n                }}\n                disabled={this.state.isShowEdit}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Base Domain\"\n            name=\"basedomain\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"basedomain\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.BaseDomain,\n            })(<Input disabled={this.state.isShowEdit} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Created At\"\n            name=\"createdAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"createdAt\", {\n              rules: [],\n              initialValue: this.state.currentData.CreatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"createdAt\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Updated At\"\n            name=\"updatedAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"updatedAt\", {\n              rules: [],\n              initialValue: this.state.currentData.UpdatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"updatedAt\" />)}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Zone\"\n            name=\"zone\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"zone\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select placeholder=\"None\">\n                <Select.Option key={1} value={1543}>\n                  zone0\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Infrastructure Type\"\n            name=\"infrtype\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"infrtype\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              // initialValue: this.state.currentData.infrtype,\n            })(\n              <Select placeholder=\"Infrastructure Type\">\n                <Select.Option key=\"s390x\" value=\"s390x\">\n                  z/VM\n                </Select.Option>\n                <Select.Option key=\"x86-64\" value=\"kvm-x86_64\">\n                  KVM on x84_64\n                </Select.Option>\n                <Select.Option key=\"2\" value=\"kvm-s390x\">\n                  KVM on Z\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"LoadBalancer_IP\"\n            name=\"extip\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"extip\", {\n              rules: [],\n              initialValue: this.state.currentData.LoadBalancer,\n            })(\n              <Input\n                ref={(c) => {\n                  this.hostname = c;\n                }}\n                disabled={this.state.isShowEdit}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"High Available\"\n            name=\"haflag\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"haflag\", {\n              rules: [],\n              initialValue: this.state.currentData.Haflag,\n            })(\n              <Select placeholder=\"no\" disabled={this.state.isShowEdit}>\n                <Select.Option key=\"yes\" value=\"yes\">\n                  yes\n                </Select.Option>\n                <Select.Option key=\"no\" value=\"no\">\n                  no\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Number of Workers\"\n            name=\"nworkers\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"nworkers\", {\n              rules: [],\n              initialValue: this.state.isShowEdit\n                ? this.state.currentData.WorkerNum\n                : 2,\n            })(<InputNumber />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Registry\"\n            name=\"registry\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"registry\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select placeholder=\"None\">\n                {this.state.registrys.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Label}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"LB_Flavor\"\n            name=\"lflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"lflavor\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.Flavor,\n            })(\n              <Select placeholder=\"LB_Flavor\">\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Master_Flavor\"\n            name=\"mflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"mflavor\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.MasterFlavor,\n            })(\n              <Select placeholder=\"Master_Flavor\">\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Worker_Flavor\"\n            name=\"wflavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"wflavor\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue:\n                // this.state.test,\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.WorkerFlavor,\n            })(\n              <Select placeholder=\"Worker_Flavor\">\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Subnet\"\n            name=\"sunbet\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"sunbet\", {\n              rules: [],\n            })(\n              <Select placeholder=\"Subnet\">\n                {this.state.subnets.map((val) => {\n                  if (\n                    val.Name === \"public\" ||\n                    val.Name === \"private\" ||\n                    val.Name === window.localStorage.token\n                  ) {\n                    return (\n                      <Select.Option key={val.ID} value={val.ID}>\n                        {val.Name}-{val.Network}\n                        {val.Gateway.substring(val.Gateway.indexOf(\"/\"))}\n                      </Select.Option>\n                    );\n                  }\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Key\"\n            name=\"key\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"key\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n              // initialValue:\n            })(\n              <Select placeholder=\"Key\">\n                {this.state.keys.map((val, index) => {\n                  return (\n                    <Select.Option key={index} value={val.ID}>\n                      {val.ID} - {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Openshift Cluster\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create New Openshift Cluster\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifyOpenshifts\" })(ModifyOpenshifts);\n"]},"metadata":{},"sourceType":"module"}