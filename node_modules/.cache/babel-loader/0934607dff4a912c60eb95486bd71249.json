{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { REG_LIST_IS_FETCHING, REG_LIST_FETCHED, REG_LIST_FILTER, REG_LIST_DELETE_FAILED, REG_LIST_FETCH_FAILED } from \"../../constants/actionTypes\";\nconst initialState = {\n  regList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (regList, keyword) => {\n  return regList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Label.toLowerCase().indexOf(keyword) > -1 || item.OcpVersion.toLowerCase().indexOf(keyword) > -1 || item.RegistryContent.toLowerCase().indexOf(keyword) > -1);\n};\n\nexport default function RegReducer(state = initialState, action) {\n  switch (action.type) {\n    case REG_LIST_DELETE_FAILED:\n    case REG_LIST_FETCH_FAILED:\n      return { ...state,\n        isLoading: false,\n        errorMessage: action.message\n      };\n\n    case REG_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case REG_LIST_FETCHED:\n      return { ...state,\n        // isLoading: action.loading,\n        regList: action.regList,\n        filteredList: getFilteredList(action.regList, state.keyword)\n      };\n\n    case REG_LIST_FILTER:\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.regList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = RegReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/RegReducer.jsx"],"names":["REG_LIST_IS_FETCHING","REG_LIST_FETCHED","REG_LIST_FILTER","REG_LIST_DELETE_FAILED","REG_LIST_FETCH_FAILED","initialState","regList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","filter","item","ID","toString","indexOf","Label","toLowerCase","OcpVersion","RegistryContent","RegReducer","state","action","type","message","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,oBADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,sBAJF,EAKEC,qBALF,QAMO,6BANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,OAAD,EAAUK,OAAV,KAAsB;AAC5C,SAAOL,OAAO,CAACO,MAAR,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BN,OAA3B,IAAsC,CAAC,CAAvC,IACAG,IAAI,CAACI,KAAL,CAAWC,WAAX,GAAyBF,OAAzB,CAAiCN,OAAjC,IAA4C,CAAC,CAD7C,IAEAG,IAAI,CAACM,UAAL,CAAgBD,WAAhB,GAA8BF,OAA9B,CAAsCN,OAAtC,IAAiD,CAAC,CAFlD,IAGAG,IAAI,CAACO,eAAL,CAAqBF,WAArB,GAAmCF,OAAnC,CAA2CN,OAA3C,IAAsD,CAAC,CALpD,CAAP;AAOD,CARD;;AASA,eAAe,SAASW,UAAT,CAAoBC,KAAK,GAAGlB,YAA5B,EAA0CmB,MAA1C,EAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,sBAAL;AACA,SAAKC,qBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELd,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,YAAY,EAAEc,MAAM,CAACE;AAHhB,OAAP;;AAKF,SAAK1B,oBAAL;AACE,aAAO,EACL,GAAGuB,KADE;AAELd,QAAAA,SAAS,EAAEe,MAAM,CAACG;AAFb,OAAP;;AAIF,SAAK1B,gBAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAEL;AACAjB,QAAAA,OAAO,EAAEkB,MAAM,CAAClB,OAHX;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACY,MAAM,CAAClB,OAAR,EAAiBiB,KAAK,CAACZ,OAAvB;AAJxB,OAAP;;AAMF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELZ,QAAAA,OAAO,EAAEa,MAAM,CAACb,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACW,KAAK,CAACjB,OAAP,EAAgBkB,MAAM,CAACb,OAAvB;AAHxB,OAAP;;AAKF;AACE,aAAOY,KAAP;AA3BJ;AA6BD;KA9BuBD,U","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  REG_LIST_IS_FETCHING,\n  REG_LIST_FETCHED,\n  REG_LIST_FILTER,\n  REG_LIST_DELETE_FAILED,\n  REG_LIST_FETCH_FAILED,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  regList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (regList, keyword) => {\n  return regList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Label.toLowerCase().indexOf(keyword) > -1 ||\n      item.OcpVersion.toLowerCase().indexOf(keyword) > -1 ||\n      item.RegistryContent.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function RegReducer(state = initialState, action) {\n  switch (action.type) {\n    case REG_LIST_DELETE_FAILED:\n    case REG_LIST_FETCH_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errorMessage: action.message,\n      };\n    case REG_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case REG_LIST_FETCHED:\n      return {\n        ...state,\n        // isLoading: action.loading,\n        regList: action.regList,\n        filteredList: getFilteredList(action.regList, state.keyword),\n      };\n    case REG_LIST_FILTER:\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.regList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}