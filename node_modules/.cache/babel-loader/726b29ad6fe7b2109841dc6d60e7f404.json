{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/login/Login.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Card, Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport logoLoginImg from \"../../assets/img/cland.png\";\nimport \"./Login.css\";\nimport { setToken } from \"../../utils/auth\";\nimport { loginApi } from \"../../service/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"Received values of form: \", values); // setToken(values.username);\n          // this.props.history.push(\"/\");\n\n          loginApi({\n            username: values.username,\n            password: values.password\n          }).then(res => {\n            if (res.token) {\n              console.log(\"login-res:\", res);\n              setToken(res.token);\n              message.info(\"Login Successfully\");\n              this.props.history.push(\"/\");\n            } else {\n              //message.info(res.ErrorMsg);\n              message.error(\"Failure to Login\");\n            }\n\n            console.log(res);\n          }).catch(err => {\n            // message.error(err.ErrorMsg);\n            console.log(err);\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoLoginImg,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-logo-text\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"CloudLand System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: getFieldDecorator(\"username\", {\n            rules: [{\n              required: true,\n              message: \"Please input your username!\"\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(Icon, {\n              type: \"user\",\n              style: {\n                color: \"rgba(0,0,0,.25)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this),\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: getFieldDecorator(\"password\", {\n            rules: [{\n              required: true,\n              message: \"Please input your Password!\"\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(Icon, {\n              type: \"lock\",\n              style: {\n                color: \"rgba(0,0,0,.25)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this),\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [getFieldDecorator(\"remember\", {\n            valuePropName: \"checked\",\n            initialValue: true\n          })( /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 16\n          }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"login-form-forgot\",\n            href: \"\",\n            children: \"Forgot password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            className: \"login-form-button\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), \"Or \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            children: \"register now!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"loginFrom\"\n})(Login);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/login/Login.jsx"],"names":["React","Component","Card","Form","Icon","Input","Button","Checkbox","message","logoLoginImg","setToken","loginApi","Login","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","username","password","then","res","token","info","history","push","error","catch","render","getFieldDecorator","rules","required","color","valuePropName","initialValue","create","name"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Card, Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport logoLoginImg from \"../../assets/img/cland.png\";\nimport \"./Login.css\";\nimport { setToken } from \"../../utils/auth\";\nimport { loginApi } from \"../../service/auth\";\nclass Login extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        // setToken(values.username);\n        // this.props.history.push(\"/\");\n        loginApi({\n          username: values.username,\n          password: values.password,\n        })\n          .then((res) => {\n            if (res.token) {\n              console.log(\"login-res:\", res);\n              setToken(res.token);\n              message.info(\"Login Successfully\");\n              this.props.history.push(\"/\");\n            } else {\n              //message.info(res.ErrorMsg);\n              message.error(\"Failure to Login\");\n            }\n            console.log(res);\n          })\n\n          .catch((err) => {\n            // message.error(err.ErrorMsg);\n            console.log(err);\n          });\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Card className=\"login-form\">\n        <Form onSubmit={this.handleSubmit}>\n          <div className=\"login-logo\">\n            <img src={logoLoginImg} alt=\"logo\" />\n            <div className=\"login-logo-text\">\n              <h2>CloudLand System</h2>\n            </div>\n          </div>\n          <Form.Item>\n            {getFieldDecorator(\"username\", {\n              rules: [\n                { required: true, message: \"Please input your username!\" },\n              ],\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"Username\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [\n                { required: true, message: \"Please input your Password!\" },\n              ],\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"remember\", {\n              valuePropName: \"checked\",\n              initialValue: true,\n            })(<Checkbox>Remember me</Checkbox>)}\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n            Or <a href=\"\">register now!</a>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"loginFrom\" })(Login);\n"]},"metadata":{},"sourceType":"module"}