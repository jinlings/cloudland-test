{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { INST_LIST_IS_FETCHING, INST_LIST_FETCHED, INST_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  instList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (instList, keyword) => {\n  return instList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Hostname.toLowerCase().indexOf(keyword) > -1 || item.Status.toLowerCase().indexOf(keyword) > -1 || item.Zone.Name.toLowerCase().indexOf(keyword) > -1);\n};\n\nexport default function InstReducer(state = initialState, action) {\n  switch (action.type) {\n    case INST_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case INST_LIST_FETCHED:\n      return { ...state,\n        // isLoading: action.loading,\n        instList: action.instList,\n        filteredList: getFilteredList(action.instList, state.keyword)\n      };\n\n    case INST_LIST_FILTER:\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.instList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = InstReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/InstReducer.jsx"],"names":["INST_LIST_IS_FETCHING","INST_LIST_FETCHED","INST_LIST_FILTER","initialState","instList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","filter","item","ID","toString","indexOf","Hostname","toLowerCase","Status","Zone","Name","InstReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,qBADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,QAAD,EAAWK,OAAX,KAAuB;AAC7C,SAAOL,QAAQ,CAACO,MAAT,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BN,OAA3B,IAAsC,CAAC,CAAvC,IACAG,IAAI,CAACI,QAAL,CAAcC,WAAd,GAA4BF,OAA5B,CAAoCN,OAApC,IAA+C,CAAC,CADhD,IAEAG,IAAI,CAACM,MAAL,CAAYD,WAAZ,GAA0BF,OAA1B,CAAkCN,OAAlC,IAA6C,CAAC,CAF9C,IAGAG,IAAI,CAACO,IAAL,CAAUC,IAAV,CAAeH,WAAf,GAA6BF,OAA7B,CAAqCN,OAArC,IAAgD,CAAC,CAL9C,CAAP;AAOD,CARD;;AASA,eAAe,SAASY,WAAT,CAAqBC,KAAK,GAAGnB,YAA7B,EAA2CoB,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKxB,qBAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELf,QAAAA,SAAS,EAAEgB,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKxB,iBAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAEL;AACAlB,QAAAA,QAAQ,EAAEmB,MAAM,CAACnB,QAHZ;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACa,MAAM,CAACnB,QAAR,EAAkBkB,KAAK,CAACb,OAAxB;AAJxB,OAAP;;AAMF,SAAKP,gBAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELb,QAAAA,OAAO,EAAEc,MAAM,CAACd,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACY,KAAK,CAAClB,QAAP,EAAiBmB,MAAM,CAACd,OAAxB;AAHxB,OAAP;;AAKF;AACE,aAAOa,KAAP;AApBJ;AAsBD;KAvBuBD,W","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  INST_LIST_IS_FETCHING,\n  INST_LIST_FETCHED,\n  INST_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  instList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (instList, keyword) => {\n  return instList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Hostname.toLowerCase().indexOf(keyword) > -1 ||\n      item.Status.toLowerCase().indexOf(keyword) > -1 ||\n      item.Zone.Name.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function InstReducer(state = initialState, action) {\n  switch (action.type) {\n    case INST_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case INST_LIST_FETCHED:\n      return {\n        ...state,\n        // isLoading: action.loading,\n        instList: action.instList,\n        filteredList: getFilteredList(action.instList, state.keyword),\n      };\n    case INST_LIST_FILTER:\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.instList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}