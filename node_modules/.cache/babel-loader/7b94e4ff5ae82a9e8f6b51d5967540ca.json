{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/import request from\"../utils/request\";export function regListApi(paramsObj){return request({url:\"/api/registrys\",method:\"get\",params:paramsObj?paramsObj:{}});}export function createRegApi(objReg){return request({url:\"/api/registrys/new\",method:\"post\",data:objReg});}export function getRegInforById(registryid){return request({url:\"/api/registrys/\".concat(registryid),method:\"get\"//params: { registryid },\n});}export function delRegInfor(registryid){return request({url:\"/api/registrys/\".concat(registryid),method:\"delete\"//data: registryid,\n});}export function editRegInfor(registryid,obj){return request({url:\"/api/registrys/\".concat(registryid),method:\"post\",data:obj});}","map":{"version":3,"sources":["/Users/emily/cloudland/src/service/registrys.jsx"],"names":["request","regListApi","paramsObj","url","method","params","createRegApi","objReg","data","getRegInforById","registryid","delRegInfor","editRegInfor","obj"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,MAAOA,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,SAApB,CAA+B,CACpC,MAAOF,CAAAA,OAAO,CAAC,CACbG,GAAG,CAAE,gBADQ,CAEbC,MAAM,CAAE,KAFK,CAGbC,MAAM,CAAEH,SAAS,CAAGA,SAAH,CAAe,EAHnB,CAAD,CAAd,CAKD,CAED,MAAO,SAASI,CAAAA,YAAT,CAAsBC,MAAtB,CAA8B,CACnC,MAAOP,CAAAA,OAAO,CAAC,CACbG,GAAG,CAAE,oBADQ,CAEbC,MAAM,CAAE,MAFK,CAGbI,IAAI,CAAED,MAHO,CAAD,CAAd,CAKD,CACD,MAAO,SAASE,CAAAA,eAAT,CAAyBC,UAAzB,CAAqC,CAC1C,MAAOV,CAAAA,OAAO,CAAC,CACbG,GAAG,0BAAoBO,UAApB,CADU,CAEbN,MAAM,CAAE,KACR;AAHa,CAAD,CAAd,CAKD,CACD,MAAO,SAASO,CAAAA,WAAT,CAAqBD,UAArB,CAAiC,CACtC,MAAOV,CAAAA,OAAO,CAAC,CACbG,GAAG,0BAAoBO,UAApB,CADU,CAEbN,MAAM,CAAE,QACR;AAHa,CAAD,CAAd,CAKD,CACD,MAAO,SAASQ,CAAAA,YAAT,CAAsBF,UAAtB,CAAkCG,GAAlC,CAAuC,CAC5C,MAAOb,CAAAA,OAAO,CAAC,CACbG,GAAG,0BAAoBO,UAApB,CADU,CAEbN,MAAM,CAAE,MAFK,CAGbI,IAAI,CAAEK,GAHO,CAAD,CAAd,CAKD","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport request from \"../utils/request\";\nexport function regListApi(paramsObj) {\n  return request({\n    url: \"/api/registrys\",\n    method: \"get\",\n    params: paramsObj ? paramsObj : {},\n  });\n}\n\nexport function createRegApi(objReg) {\n  return request({\n    url: \"/api/registrys/new\",\n    method: \"post\",\n    data: objReg,\n  });\n}\nexport function getRegInforById(registryid) {\n  return request({\n    url: `/api/registrys/${registryid}`,\n    method: \"get\",\n    //params: { registryid },\n  });\n}\nexport function delRegInfor(registryid) {\n  return request({\n    url: `/api/registrys/${registryid}`,\n    method: \"delete\",\n    //data: registryid,\n  });\n}\nexport function editRegInfor(registryid, obj) {\n  return request({\n    url: `/api/registrys/${registryid}`,\n    method: \"post\",\n    data: obj,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}