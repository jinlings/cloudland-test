{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/floatingips/Floatingips.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Card, Button, Popconfirm, message } from \"antd\";\nimport { floatingipsListApi, delFloatingipInfor } from \"../../service/floatingips\";\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport DataFilter from \"../../components/Filter/DataFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Floatingips extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: \"ID\",\n      dataIndex: \"ID\",\n      key: \"ID\",\n      width: 80,\n      align: \"center\"\n    }, {\n      title: \"FloatingIP\",\n      dataIndex: \"FipAddress\",\n      align: \"center\"\n    }, {\n      title: \"InternalIP\",\n      dataIndex: \"IntAddress\",\n      align: \"center\"\n    }, {\n      title: \"Instance\",\n      dataIndex: \"Instance.Hostname\",\n      align: \"center\"\n    }, {\n      title: \"Zone\",\n      dataIndex: \"Instance.Zone.Name\",\n      align: \"center\"\n    }, {\n      title: \"Action\",\n      align: \"center\",\n      render: (txt, record, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n            title: \"Are you sure to delete?\",\n            onCancel: () => {\n              console.log(\"cancell to delete\");\n            },\n            onConfirm: () => {\n              console.log(\"onClick-delete-fl:\", record); //this.props.history.push(\"/registrys/new/\" + record.ID);\n\n              delFloatingipInfor(record.ID).then(res => {\n                //const _this = this;\n                message.success(res.Msg);\n                this.loadData(this.state.current, this.state.pageSize);\n                console.log(\"用户~~-fl\", res);\n                console.log(\"用户~~state\", this.state);\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: \"5px\",\n                marginRight: \"0px\",\n                marginTop: \"10px\"\n              },\n              type: \"danger\",\n              size: \"small\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this);\n      }\n    }];\n\n    this.createFloatingips = () => {\n      this.props.history.push(\"/floatingips/new\");\n    };\n\n    this.loadData = (page, pageSize) => {\n      console.log(\"image-loadData~~\", page, pageSize);\n\n      const _this = this;\n\n      const offset = (page - 1) * pageSize;\n      const limit = pageSize;\n      floatingipsListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          floatingips: res.floatingips,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n\n        console.log(\"loadData-page-\", page, _this.state);\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.toSelectchange = (page, num) => {\n      console.log(\"toSelectchange\", page, num);\n\n      const _this = this;\n\n      const offset = (page - 1) * num;\n      const limit = num;\n      console.log(\"flavor-toSelectchange~limit:\", offset, limit);\n      floatingipsListApi(offset, limit).then(res => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          floatingips: res.floatingips,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page\n        });\n      }).catch(error => {\n        _this.setState({\n          isLoaded: false,\n          error: error\n        });\n      });\n    };\n\n    this.onPaginationChange = e => {\n      console.log(\"onPaginationChange\", e);\n      this.loadData(e, this.state.pageSize);\n    };\n\n    this.onShowSizeChange = (current, pageSize) => {\n      console.log(\"onShowSizeChange:\", current, pageSize); //当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n\n      this.toSelectchange(current, pageSize);\n    };\n\n    this.state = {\n      floatingips: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1\n    };\n  }\n\n  //组件初始化的时候执行\n  componentDidMount() {\n    const _this = this;\n\n    console.log(\"componentDidMount:\", this);\n    floatingipsListApi().then(res => {\n      _this.setState({\n        floatingips: res.floatingips,\n        isLoaded: true,\n        total: res.total\n      });\n\n      console.log(\"floatingipsListApi\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Floating IP Manage Panel\" + \"(Total: \" + this.state.total + \")\",\n      extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DataFilter, {\n          placeholder: \"Search...\",\n          onSearch: value => console.log(value),\n          enterButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            float: \"right\"\n          },\n          type: \"primary\",\n          onClick: this.createFloatingips,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        rowKey: \"ID\",\n        columns: this.columns,\n        dataSource: this.state.floatingips,\n        bordered: true,\n        total: this.state.total,\n        pageSize: this.state.pageSize,\n        scroll: {\n          y: 600\n        },\n        onPaginationChange: this.onPaginationChange,\n        onShowSizeChange: this.onShowSizeChange,\n        pageSizeOptions: this.state.pageSizeOptions,\n        loading: !this.state.isLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  reg\n}) => {\n  console.log(\"mapStateToProps-state\", reg);\n  return {\n    reg\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleFetchRegList: () => dispatch(fetchRegList()),\n    handleFilterRegList: keyword => dispatch(filterRegList(keyword))\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(Registrys);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/floatingips/Floatingips.jsx"],"names":["React","Component","Card","Button","Popconfirm","message","floatingipsListApi","delFloatingipInfor","DataTable","DataFilter","Floatingips","constructor","props","columns","title","dataIndex","key","width","align","render","txt","record","index","console","log","ID","then","res","success","Msg","loadData","state","current","pageSize","margin","marginRight","marginTop","createFloatingips","history","push","page","_this","offset","limit","setState","floatingips","isLoaded","total","catch","error","toSelectchange","num","onPaginationChange","e","onShowSizeChange","pageSizeOptions","componentDidMount","value","float","y","mapStateToProps","reg","mapDispatchToProps","dispatch","handleFetchRegList","fetchRegList","handleFilterRegList","keyword","filterRegList","compose","withRouter","connect","Registrys"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Card, Button, Popconfirm, message } from \"antd\";\nimport {\n  floatingipsListApi,\n  delFloatingipInfor,\n} from \"../../service/floatingips\";\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport DataFilter from \"../../components/Filter/DataFilter\";\n\nclass Floatingips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      floatingips: [],\n      isLoaded: false,\n      total: 0,\n      pageSize: 10,\n      offset: 0,\n      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"],\n      current: 1,\n    };\n  }\n  columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"ID\",\n      key: \"ID\",\n      width: 80,\n      align: \"center\",\n    },\n    {\n      title: \"FloatingIP\",\n      dataIndex: \"FipAddress\",\n      align: \"center\",\n    },\n    {\n      title: \"InternalIP\",\n      dataIndex: \"IntAddress\",\n      align: \"center\",\n    },\n    {\n      title: \"Instance\",\n      dataIndex: \"Instance.Hostname\",\n      align: \"center\",\n    },\n    {\n      title: \"Zone\",\n      dataIndex: \"Instance.Zone.Name\",\n      align: \"center\",\n    },\n    {\n      title: \"Action\",\n      align: \"center\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Popconfirm\n              title=\"Are you sure to delete?\"\n              onCancel={() => {\n                console.log(\"cancell to delete\");\n              }}\n              onConfirm={() => {\n                console.log(\"onClick-delete-fl:\", record);\n                //this.props.history.push(\"/registrys/new/\" + record.ID);\n                delFloatingipInfor(record.ID).then((res) => {\n                  //const _this = this;\n                  message.success(res.Msg);\n                  this.loadData(this.state.current, this.state.pageSize);\n\n                  console.log(\"用户~~-fl\", res);\n                  console.log(\"用户~~state\", this.state);\n                });\n              }}\n            >\n              <Button\n                style={{\n                  margin: \"5px\",\n                  marginRight: \"0px\",\n                  marginTop: \"10px\",\n                }}\n                type=\"danger\"\n                size=\"small\"\n              >\n                Delete\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n  createFloatingips = () => {\n    this.props.history.push(\"/floatingips/new\");\n  };\n  //组件初始化的时候执行\n  componentDidMount() {\n    const _this = this;\n    console.log(\"componentDidMount:\", this);\n    floatingipsListApi()\n      .then((res) => {\n        _this.setState({\n          floatingips: res.floatingips,\n          isLoaded: true,\n          total: res.total,\n        });\n        console.log(\"floatingipsListApi\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  loadData = (page, pageSize) => {\n    console.log(\"image-loadData~~\", page, pageSize);\n    const _this = this;\n    const offset = (page - 1) * pageSize;\n    const limit = pageSize;\n    floatingipsListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n\n        _this.setState({\n          floatingips: res.floatingips,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n        console.log(\"loadData-page-\", page, _this.state);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  toSelectchange = (page, num) => {\n    console.log(\"toSelectchange\", page, num);\n    const _this = this;\n    const offset = (page - 1) * num;\n    const limit = num;\n    console.log(\"flavor-toSelectchange~limit:\", offset, limit);\n    floatingipsListApi(offset, limit)\n      .then((res) => {\n        console.log(\"loadData\", res);\n        _this.setState({\n          floatingips: res.floatingips,\n          isLoaded: true,\n          total: res.total,\n          pageSize: limit,\n          current: page,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  };\n  onPaginationChange = (e) => {\n    console.log(\"onPaginationChange\", e);\n    this.loadData(e, this.state.pageSize);\n  };\n  onShowSizeChange = (current, pageSize) => {\n    console.log(\"onShowSizeChange:\", current, pageSize);\n    //当几条一页的值改变后调用函数，current：改变显示条数时当前数据所在页；pageSize:改变后的一页显示条数\n    this.toSelectchange(current, pageSize);\n  };\n  render() {\n    return (\n      <Card\n        title={\"Floating IP Manage Panel\" + \"(Total: \" + this.state.total + \")\"}\n        extra={\n          <>\n            <DataFilter\n              placeholder=\"Search...\"\n              onSearch={(value) => console.log(value)}\n              enterButton\n            />\n            <Button\n              style={{ float: \"right\" }}\n              type=\"primary\"\n              onClick={this.createFloatingips}\n            >\n              Create\n            </Button>\n          </>\n        }\n      >\n        <DataTable\n          rowKey=\"ID\"\n          columns={this.columns}\n          dataSource={this.state.floatingips}\n          bordered\n          total={this.state.total}\n          pageSize={this.state.pageSize}\n          scroll={{ y: 600 }}\n          onPaginationChange={this.onPaginationChange}\n          onShowSizeChange={this.onShowSizeChange}\n          pageSizeOptions={this.state.pageSizeOptions}\n          loading={!this.state.isLoaded}\n        />\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = ({ reg }) => {\n  console.log(\"mapStateToProps-state\", reg);\n  return {\n    reg,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleFetchRegList: () => dispatch(fetchRegList()),\n    handleFilterRegList: (keyword) => dispatch(filterRegList(keyword)),\n  };\n};\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Registrys);\n"]},"metadata":{},"sourceType":"module"}