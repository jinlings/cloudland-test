{"ast":null,"code":"import { LIST_FILTER } from \"../../constants/actionTypes\";\nimport { regListApi, delRegInfor } from \"../../service/registrys\";\nexport const filterRegList = keyword => ({\n  type: LIST_FILTER,\n  keyword\n});\nexport const fetchUserList = () => {\n  return dispatch => {\n    //   dispatch(fetchingUserList(true));\n    regListApi().then(res => {\n      let resData = res.data;\n\n      if (resData && resData.success === true) {// dispatch(fetchingUserList(false));\n        // dispatch(fetchUserListSuccess(resData.data));\n      } else {\n        dispatch(fetchingUserList(false));\n        dispatch(fetchUserListFailed(\"\b获取用户列表失败\"));\n      }\n    }).catch(e => dispatch(fetchUserListFailed(e.message)));\n  };\n};","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/actions/RegAction.jsx"],"names":["LIST_FILTER","regListApi","delRegInfor","filterRegList","keyword","type","fetchUserList","dispatch","then","res","resData","data","success","fetchingUserList","fetchUserListFailed","catch","e","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,yBAAxC;AACA,OAAO,MAAMC,aAAa,GAAIC,OAAD,KAAc;AACzCC,EAAAA,IAAI,EAAEL,WADmC;AAEzCI,EAAAA;AAFyC,CAAd,CAAtB;AAIP,OAAO,MAAME,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAc;AACnB;AAEAN,IAAAA,UAAU,GACPO,IADH,CACSC,GAAD,IAAS;AACb,UAAIC,OAAO,GAAGD,GAAG,CAACE,IAAlB;;AACA,UAAID,OAAO,IAAIA,OAAO,CAACE,OAAR,KAAoB,IAAnC,EAAyC,CACvC;AACA;AACD,OAHD,MAGO;AACLL,QAAAA,QAAQ,CAACM,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAN,QAAAA,QAAQ,CAACO,mBAAmB,CAAC,WAAD,CAApB,CAAR;AACD;AACF,KAVH,EAWGC,KAXH,CAWUC,CAAD,IAAOT,QAAQ,CAACO,mBAAmB,CAACE,CAAC,CAACC,OAAH,CAApB,CAXxB;AAYD,GAfD;AAgBD,CAjBM","sourcesContent":["import { LIST_FILTER } from \"../../constants/actionTypes\";\nimport { regListApi, delRegInfor } from \"../../service/registrys\";\nexport const filterRegList = (keyword) => ({\n  type: LIST_FILTER,\n  keyword,\n});\nexport const fetchUserList = () => {\n  return (dispatch) => {\n    //   dispatch(fetchingUserList(true));\n\n    regListApi()\n      .then((res) => {\n        let resData = res.data;\n        if (resData && resData.success === true) {\n          // dispatch(fetchingUserList(false));\n          // dispatch(fetchUserListSuccess(resData.data));\n        } else {\n          dispatch(fetchingUserList(false));\n          dispatch(fetchUserListFailed(\"\b获取用户列表失败\"));\n        }\n      })\n      .catch((e) => dispatch(fetchUserListFailed(e.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}