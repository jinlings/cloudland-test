{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/secgroups/ModifySecgroups.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport { createSecgroupApi, getSecgroupInforById, editSecgroupInfor } from \"../../service/secgroups\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifySecgroups extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listSecgroups = () => {\n      this.props.history.push(\"/secgroups\");\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            //const _this = this;\n            editSecgroupInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"editSecgroupInfor:\", res); // _this.setState({\n              //   isShowEdit: ! this.state.isShowEdit,\n              // });\n\n              this.props.history.push(\"/secgroups\");\n            });\n          } else {\n            console.log(\"before-createSecgroupApi:\", values);\n            values.isdefault = values.isdefault === undefined ? this.state.isDefault : values.isdefault;\n            createSecgroupApi(values).then(res => {\n              console.log(\"handleSubmit-res-createSecgroupApi:\", res);\n              this.props.history.push(\"/secgroups\");\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      isDefault: \"\"\n    };\n\n    if (props.match.params.id) {\n      getSecgroupInforById(props.match.params.id).then(res => {\n        console.log(\"getSecgroupInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true\n        });\n        console.log(\"getSecgroupInforById-this.state:\", this.state);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Security Group\" : \"Create New Security Group \",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: \"right\"\n        },\n        type: \"primary\",\n        onClick: this.listSecgroups,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Name\",\n          name: \"name\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"name\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Name\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Is Default\",\n          name: \"isdefault\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"isdefault\", {\n            rules: [],\n            initialValue: this.state.currentData.isDefault\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"no\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"yes\",\n              children: \"yes\"\n            }, \"yes\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"no\",\n              children: \"no\"\n            }, \"no\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Security Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create Security Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifySecgroups\"\n})(ModifySecgroups);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/secgroups/ModifySecgroups.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","createSecgroupApi","getSecgroupInforById","editSecgroupInfor","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifySecgroups","constructor","props","listSecgroups","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","isdefault","undefined","state","isDefault","catch","error","isShowEdit","currentData","setState","render","float","getFieldDecorator","rules","required","initialValue","Name","offset","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport {\n  createSecgroupApi,\n  getSecgroupInforById,\n  editSecgroupInfor,\n} from \"../../service/secgroups\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass ModifySecgroups extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      isDefault: \"\",\n    };\n    if (props.match.params.id) {\n      getSecgroupInforById(props.match.params.id).then((res) => {\n        console.log(\"getSecgroupInforById:\", res);\n        this.setState({\n          currentData: res,\n          isShowEdit: true,\n        });\n        console.log(\"getSecgroupInforById-this.state:\", this.state);\n      });\n    }\n  }\n  listSecgroups = () => {\n    this.props.history.push(\"/secgroups\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          //const _this = this;\n          editSecgroupInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"editSecgroupInfor:\", res);\n            // _this.setState({\n            //   isShowEdit: ! this.state.isShowEdit,\n            // });\n            this.props.history.push(\"/secgroups\");\n          });\n        } else {\n          console.log(\"before-createSecgroupApi:\", values);\n          values.isdefault =\n            values.isdefault === undefined\n              ? this.state.isDefault\n              : values.isdefault;\n          createSecgroupApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createSecgroupApi:\", res);\n              this.props.history.push(\"/secgroups\");\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\n          this.state.isShowEdit\n            ? \"Edit Security Group\"\n            : \"Create New Security Group \"\n        }\n        extra={\n          <Button\n            style={{ float: \"right\" }}\n            type=\"primary\"\n            onClick={this.listSecgroups}\n          >\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"name\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Name,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Is Default\"\n            name=\"isdefault\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"isdefault\", {\n              rules: [],\n              initialValue: this.state.currentData.isDefault,\n            })(\n              <Select placeholder=\"no\">\n                <Select.Option key=\"yes\" value=\"yes\">\n                  yes\n                </Select.Option>\n                <Select.Option key=\"no\" value=\"no\">\n                  no\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Security Group\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create Security Group\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifySecgroups\" })(ModifySecgroups);\n"]},"metadata":{},"sourceType":"module"}