{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/instances/ModifyInstances.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message, Row, Col, InputNumber, Avatar } from \"antd\";\nimport CreateKeyModal from \"./CreateKeyModal\";\nimport { createInstApi, getInsInforById, editInsInfor } from \"../../service/instances\";\nimport { createKeyApi } from \"../../service/keys\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport { imagesListApi } from \"../../service/images\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { secgroupsListApi } from \"../../service/secgroups\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nimport \"./instances.css\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifyInstances extends Component {\n  constructor(props) {\n    super(props); //const { getFieldDecorator } = this.props.form;\n\n    this.listInstances = () => {\n      this.props.history.push(\"/instances\");\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value:\", values);\n          console.log(\"提交\");\n\n          if (this.props.match.params.id) {\n            let tempFlavorArr = values.flavor.split(\"-\");\n            let tempFlavor = parseInt(tempFlavorArr[0]);\n            values.flavor = tempFlavor;\n            console.log(\"tempFlavorArr\", tempFlavorArr);\n            console.log(\"tempFlavor\", tempFlavor);\n            console.log(\"values.flavor\", values.flavor);\n            console.log(\"instance-edit\", this.props.match.params.id, values);\n            editInsInfor(this.props.match.params.id, values).then(res => {\n              console.log(\"instance-editInsInfor:\", res);\n              this.props.history.push(\"/instances\");\n            });\n          } else {\n            values.hyper = values.hyper === undefined ? this.state.defaultHyper : values.hyper;\n            console.log(\"submit-value\", values);\n            createInstApi(values).then(res => {\n              console.log(\"handleSubmit-res-createInstApi:\", res);\n              this.props.history.push(\"/instances\"); // Utils.loadData(this.state.current, this.state.pageSize)\n            }).catch(err => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n          }\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.valueChange = e => {\n      console.log(\"valueChange-e\", e);\n    };\n\n    this.filterZones = () => {\n      var initZone = [];\n      var newZone = [];\n      this.state.zones.map(item => {\n        if (initZone.indexOf(item[\"Name\"]) === -1) {\n          initZone.push(item[\"Name\"]);\n          newZone.push(item);\n          console.log(\"zonearr\", initZone);\n        }\n\n        return newZone;\n      });\n      this.setState({\n        zones: newZone\n      });\n      console.log(\"test111\", this.state.zones);\n    };\n\n    this.showKeyModal = () => {\n      this.setState({\n        visible: true\n      });\n      console.log(\"create key\");\n    };\n\n    this.hideKeyModal = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.createKey = values => {\n      // const p = this;\n      // const { form } = this.props;\n      console.log(\"createKey-form\", values);\n      createKeyApi(values).then(res => {\n        console.log(\"createKey-createKeyApi:\", res);\n        this.setState({\n          visible: false\n        });\n        this.props.form.resetFields();\n      }).catch(err => {\n        console.log(\"createKey-error:\", err);\n      });\n    };\n\n    console.log(\"ModifyInstances111~~\", this.props);\n    this.state = {\n      value: \"\",\n      visible: false,\n      isShowEdit: false,\n      defaultHyper: -1,\n      currentData: [],\n      instFlavor: {},\n      instInterface: [],\n      instSubnet: [],\n      images: [],\n      hypers: [],\n      zones: [],\n      flavors: [],\n      keys: [],\n      secgroups: [],\n      subnets: []\n    };\n    let that = this;\n\n    if (props.match.params.id) {\n      getInstInforById(props.match.params.id).then(res => {\n        console.log(\"getInstInforById-res:\", res);\n        that.setState({\n          currentData: res.instance,\n          isShowEdit: true,\n          instFlavor: res.instance.Flavor,\n          instInterface: res.instance.Interfaces.map(iface => {\n            return iface.Address;\n          }),\n          instSubnet: res.instance.Interfaces.map(iface => {\n            return iface.Address.Subnet;\n          })\n        });\n        console.log(\"getInsInforById~instInterface:\", this.state.instInterface);\n        console.log(\"getInsInforById~state:\", this.state);\n      });\n    }\n\n    console.log(\"state-instance:\", that.state);\n  }\n\n  componentDidMount() {\n    const _this = this;\n\n    imagesListApi().then(res => {\n      _this.setState({\n        images: res.images,\n        isLoaded: true\n      });\n\n      console.log(\"images:\", res.images);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    hypersListApi().then(res => {\n      _this.setState({\n        hypers: res.hypers,\n        isLoaded: true\n      });\n\n      this.state.hypers.forEach(val => {\n        let zoneList = {\n          Name: val.Zone.Name,\n          ID: val.Zone.ID\n        };\n        this.state.zones.push(zoneList);\n      });\n      this.filterZones();\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    flavorsListApi().then(res => {\n      _this.setState({\n        flavors: res.flavors,\n        isLoaded: true\n      });\n\n      console.log(\"flavors:\", res);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    subnetsListApi().then(res => {\n      _this.setState({\n        subnets: res.subnets,\n        isLoaded: true\n      });\n\n      console.log(\"instance-subnets\", this.state.subnets);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    secgroupsListApi().then(res => {\n      _this.setState({\n        secgroups: res.secgroups,\n        isLoaded: true\n      });\n\n      console.log(\"secgroup\", res.secgroups);\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n    keysListApi().then(res => {\n      console.log(\"componentDidMount-keys:\", res);\n\n      _this.setState({\n        keys: res.keys,\n        isLoaded: true\n      });\n    }).catch(error => {\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: this.state.isShowEdit ? \"Edit Instance\" : \"Create Instance\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: \"right\"\n        },\n        type: \"primary\",\n        onClick: this.listInstances,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        onSubmit: e => {\n          this.handleSubmit(e);\n        },\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Hostname (or prefix)\",\n          name: \"hostname\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"hostname\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.Hostname\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            ref: c => {\n              this.hostname = c;\n            },\n            disabled: this.state.isShowEdit // onChange={(e) => this.setState({ hostname: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Hyper\",\n          name: \"hyper\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.props.loginInfo.isAdmin,\n          children: this.props.form.getFieldDecorator(\"hyper\", {\n            rules: [],\n            initialValue: this.state.currentData.Hyper\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            ref: c => {\n              this.hyper = c;\n            } // labelInValue\n            ,\n            disabled: this.state.isShowEdit // onChange={this.hyperChanged}\n            // name=\"hyper\"\n            // onChange={this.valueChange}\n            // allowClear=\"true\"\n            //placeholder=\"Auto\"\n            ,\n            children: this.state.hypers.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: index,\n                children: item.Hostname\n              }, item.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Zone\",\n          name: \"zone\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"zone\", {\n            rules: [],\n            initialValue: this.state.currentData.Hyper\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: this.state.zones.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item.ID,\n                children: item.Name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Created At\",\n          name: \"createdAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"createdAt\", {\n            rules: [],\n            initialValue: this.state.currentData.CreatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"createdAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Updated At\",\n          name: \"updatedAt\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"updatedAt\", {\n            rules: [],\n            initialValue: this.state.currentData.UpdatedAt\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            disabled: this.state.isShowEdit,\n            name: \"updatedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Count\",\n          name: \"count\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"count\", {\n            rules: [{\n              required: true\n            } // {\n            //   validator: checkCount,\n            // },\n            ],\n            initialValue: 1\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"image\",\n          label: \"Image\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"image\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: this.state.images.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"flavor\",\n          label: \"Flavor\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"flavor\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.length === 0 ? \"\" : this.state.currentData.FlavorID + \"-\" + this.state.instFlavor.Name\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.flavors.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: val.Name\n              }, val.ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"primary\",\n          label: \"Primary Interface\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"primary\", {\n            rules: [{\n              required: !this.state.isShowEdit\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: this.state.subnets.map(val => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: [val.Name, \"-\", val.Network, val.Gateway.substring(val.Gateway.indexOf(\"/\"))]\n              }, val.ID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"primaryID\",\n          label: \"Primary IP\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"primaryID\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"primaryid\" // onChange={(e) => this.setState({ primaryid: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"primaryMac\",\n          label: \"Primary Mac\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"primaryMac\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"primaryMac\" // onChange={(e) => this.setState({ primaryMac: e.target.value })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"secondary\",\n          label: \"Secondary Interface\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"secondary\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: this.state.subnets.map((val, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: val.ID,\n                children: [val.Name, \"-\", val.Network, val.Gateway.substring(val.Gateway.indexOf(\"/\"))]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"secgroups\",\n          label: \"Security Groups\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"secgroups\", {\n            rules: [] // initialValue: window.localStorage.token,\n\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            disabled: this.state.isShowEdit,\n            children: this.state.secgroups.map((val, index) => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: `${val.ID}`,\n                children: [val.ID, \"-\", val.Name]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Interfaces\",\n          name: \"interfaces\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: !this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"interfaces\", {\n            rules: [],\n            initialValue: this.state.currentData.length === 0 ? \"\" : this.state.instSubnet.map(iSubnet => {\n              return iSubnet.Name;\n            }) + \"-\" + this.state.instInterface.map(ifaces => {\n              return ifaces.Address;\n            })\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"tags\",\n            style: {\n              width: \"100%\"\n            },\n            placeholder: \"Please select\",\n            children: this.state.instInterface.map(ifaces => {\n              console.log(\"select-instInterface\", ifaces);\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: `${ifaces.SubnetID}`,\n                children: [this.state.instSubnet.map(isubnet => {\n                  return isubnet.Name;\n                }), \"-\", ifaces.Address]\n              }, ifaces.ID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Keys\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 8,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 17,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"keys\",\n                children: this.props.form.getFieldDecorator(\"keys\", {\n                  rules: [] // initialValue: this.state.keys,\n\n                })( /*#__PURE__*/_jsxDEV(Select, {\n                  mode: \"tags\",\n                  style: {\n                    width: \"100%\"\n                  },\n                  placeholder: \"Key\",\n                  disabled: this.state.isShowEdit,\n                  children: this.state.keys.map((val, index) => {\n                    console.log(\"keysss\", val.ID);\n                    return /*#__PURE__*/_jsxDEV(Select.Option, {\n                      value: `${val.ID}`,\n                      children: [val.ID, \" - \", val.Name]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 5,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: this.showKeyModal,\n                children: \"Create Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"userdata\",\n          label: \"User Data\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          hidden: this.state.isShowEdit,\n          children: this.props.form.getFieldDecorator(\"userdata\", {\n            rules: [],\n            initialValue: this.state.currentData.Userdata\n          })( /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            autoSize: {\n              minRows: 3,\n              maxRows: 6\n            },\n            name: \"userdata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: this.state.isShowEdit ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create Instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateKeyModal, {\n        title: \"Create New Key\",\n        visible: this.state.visible,\n        submit: this.createKey.bind(this),\n        close: () => {\n          this.setState({\n            visible: false\n          });\n          this.props.form.resetFields();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mapStateToProps-modifyinstance:\", state); // var loginInfo = JSON.parse(state.loginInfo);\n  // console.log(\"mapStateToProps-isadmin:\", JSON.parse(state.loginInfo));\n\n  return state;\n};\n\nexport default connect(mapStateToProps)(Form.create({\n  name: \"modifyInstances\"\n})(ModifyInstances));","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/instances/ModifyInstances.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","Row","Col","InputNumber","Avatar","CreateKeyModal","createInstApi","getInsInforById","editInsInfor","createKeyApi","hypersListApi","imagesListApi","flavorsListApi","secgroupsListApi","subnetsListApi","keysListApi","connect","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifyInstances","constructor","props","listInstances","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","tempFlavorArr","flavor","split","tempFlavor","parseInt","then","res","hyper","undefined","state","defaultHyper","catch","error","valueChange","filterZones","initZone","newZone","zones","map","item","indexOf","setState","showKeyModal","visible","hideKeyModal","createKey","resetFields","value","isShowEdit","currentData","instFlavor","instInterface","instSubnet","images","hypers","flavors","keys","secgroups","subnets","that","getInstInforById","instance","Flavor","Interfaces","iface","Address","Subnet","componentDidMount","_this","isLoaded","forEach","val","zoneList","Name","Zone","ID","render","float","getFieldDecorator","rules","required","initialValue","Hostname","c","hostname","loginInfo","isAdmin","Hyper","index","CreatedAt","UpdatedAt","length","FlavorID","Network","Gateway","substring","iSubnet","ifaces","width","SubnetID","isubnet","Userdata","minRows","maxRows","offset","bind","mapStateToProps","ownProps","create","name"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Input,\n  Select,\n  Button,\n  message,\n  Row,\n  Col,\n  InputNumber,\n  Avatar,\n} from \"antd\";\nimport CreateKeyModal from \"./CreateKeyModal\";\nimport {\n  createInstApi,\n  getInsInforById,\n  editInsInfor,\n} from \"../../service/instances\";\nimport { createKeyApi } from \"../../service/keys\";\nimport { hypersListApi } from \"../../service/hypers\";\nimport { imagesListApi } from \"../../service/images\";\nimport { flavorsListApi } from \"../../service/flavors\";\nimport { secgroupsListApi } from \"../../service/secgroups\";\nimport { subnetsListApi } from \"../../service/subnets\";\nimport { keysListApi } from \"../../service/keys\";\nimport \"./instances.css\";\nimport { connect } from \"react-redux\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\n\nclass ModifyInstances extends Component {\n  constructor(props) {\n    super(props);\n    //const { getFieldDecorator } = this.props.form;\n    console.log(\"ModifyInstances111~~\", this.props);\n    this.state = {\n      value: \"\",\n      visible: false,\n      isShowEdit: false,\n      defaultHyper: -1,\n      currentData: [],\n      instFlavor: {},\n      instInterface: [],\n      instSubnet: [],\n      images: [],\n      hypers: [],\n      zones: [],\n      flavors: [],\n      keys: [],\n      secgroups: [],\n      subnets: [],\n    };\n    let that = this;\n    if (props.match.params.id) {\n      getInstInforById(props.match.params.id).then((res) => {\n        console.log(\"getInstInforById-res:\", res);\n        that.setState({\n          currentData: res.instance,\n          isShowEdit: true,\n\n          instFlavor: res.instance.Flavor,\n          instInterface: res.instance.Interfaces.map((iface) => {\n            return iface.Address;\n          }),\n          instSubnet: res.instance.Interfaces.map((iface) => {\n            return iface.Address.Subnet;\n          }),\n        });\n        console.log(\"getInsInforById~instInterface:\", this.state.instInterface);\n        console.log(\"getInsInforById~state:\", this.state);\n      });\n    }\n    console.log(\"state-instance:\", that.state);\n  }\n  listInstances = () => {\n    this.props.history.push(\"/instances\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        console.log(\"提交\");\n        if (this.props.match.params.id) {\n          let tempFlavorArr = values.flavor.split(\"-\");\n          let tempFlavor = parseInt(tempFlavorArr[0]);\n          values.flavor = tempFlavor;\n          console.log(\"tempFlavorArr\", tempFlavorArr);\n          console.log(\"tempFlavor\", tempFlavor);\n          console.log(\"values.flavor\", values.flavor);\n          console.log(\"instance-edit\", this.props.match.params.id, values);\n          editInsInfor(this.props.match.params.id, values).then((res) => {\n            console.log(\"instance-editInsInfor:\", res);\n            this.props.history.push(\"/instances\");\n          });\n        } else {\n          values.hyper =\n            values.hyper === undefined ? this.state.defaultHyper : values.hyper;\n\n          console.log(\"submit-value\", values);\n          createInstApi(values)\n            .then((res) => {\n              console.log(\"handleSubmit-res-createInstApi:\", res);\n              this.props.history.push(\"/instances\");\n              // Utils.loadData(this.state.current, this.state.pageSize)\n            })\n            .catch((err) => {\n              console.log(\"handleSubmit-error:\", err);\n            });\n        }\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  valueChange = (e) => {\n    console.log(\"valueChange-e\", e);\n  };\n  filterZones = () => {\n    var initZone = [];\n    var newZone = [];\n    this.state.zones.map((item) => {\n      if (initZone.indexOf(item[\"Name\"]) === -1) {\n        initZone.push(item[\"Name\"]);\n        newZone.push(item);\n        console.log(\"zonearr\", initZone);\n      }\n      return newZone;\n    });\n    this.setState({\n      zones: newZone,\n    });\n\n    console.log(\"test111\", this.state.zones);\n  };\n  showKeyModal = () => {\n    this.setState({ visible: true });\n    console.log(\"create key\");\n  };\n  hideKeyModal = () => {\n    this.setState({ visible: false });\n  };\n  createKey = (values) => {\n    // const p = this;\n    // const { form } = this.props;\n    console.log(\"createKey-form\", values);\n    createKeyApi(values)\n      .then((res) => {\n        console.log(\"createKey-createKeyApi:\", res);\n        this.setState({\n          visible: false,\n        });\n        this.props.form.resetFields();\n      })\n      .catch((err) => {\n        console.log(\"createKey-error:\", err);\n      });\n  };\n\n  componentDidMount() {\n    const _this = this;\n    imagesListApi()\n      .then((res) => {\n        _this.setState({\n          images: res.images,\n          isLoaded: true,\n        });\n        console.log(\"images:\", res.images);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    hypersListApi()\n      .then((res) => {\n        _this.setState({\n          hypers: res.hypers,\n          isLoaded: true,\n        });\n        this.state.hypers.forEach((val) => {\n          let zoneList = {\n            Name: val.Zone.Name,\n            ID: val.Zone.ID,\n          };\n          this.state.zones.push(zoneList);\n        });\n        this.filterZones();\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    flavorsListApi()\n      .then((res) => {\n        _this.setState({\n          flavors: res.flavors,\n          isLoaded: true,\n        });\n        console.log(\"flavors:\", res);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    subnetsListApi()\n      .then((res) => {\n        _this.setState({\n          subnets: res.subnets,\n          isLoaded: true,\n        });\n\n        console.log(\"instance-subnets\", this.state.subnets);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    secgroupsListApi()\n      .then((res) => {\n        _this.setState({\n          secgroups: res.secgroups,\n          isLoaded: true,\n        });\n        console.log(\"secgroup\", res.secgroups);\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n    keysListApi()\n      .then((res) => {\n        console.log(\"componentDidMount-keys:\", res);\n        _this.setState({\n          keys: res.keys,\n          isLoaded: true,\n        });\n      })\n      .catch((error) => {\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  render() {\n    return (\n      <Card\n        title={this.state.isShowEdit ? \"Edit Instance\" : \"Create Instance\"}\n        extra={\n          <Button\n            style={{ float: \"right\" }}\n            type=\"primary\"\n            onClick={this.listInstances}\n          >\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          onSubmit={(e) => {\n            this.handleSubmit(e);\n          }}\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n        >\n          <Form.Item\n            label=\"Hostname (or prefix)\"\n            name=\"hostname\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"hostname\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.Hostname,\n            })(\n              <Input\n                ref={(c) => {\n                  this.hostname = c;\n                }}\n                disabled={this.state.isShowEdit}\n                // onChange={(e) => this.setState({ hostname: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Hyper\"\n            name=\"hyper\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.props.loginInfo.isAdmin}\n          >\n            {this.props.form.getFieldDecorator(\"hyper\", {\n              rules: [],\n              initialValue: this.state.currentData.Hyper,\n            })(\n              <Select\n                ref={(c) => {\n                  this.hyper = c;\n                }}\n                // labelInValue\n                disabled={this.state.isShowEdit}\n                // onChange={this.hyperChanged}\n                // name=\"hyper\"\n                // onChange={this.valueChange}\n                // allowClear=\"true\"\n                //placeholder=\"Auto\"\n              >\n                {this.state.hypers.map((item, index) => {\n                  return (\n                    <Select.Option key={item.ID} value={index}>\n                      {item.Hostname}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Zone\"\n            name=\"zone\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"zone\", {\n              rules: [],\n              initialValue: this.state.currentData.Hyper,\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                {this.state.zones.map((item, index) => {\n                  return (\n                    <Select.Option key={index} value={item.ID}>\n                      {item.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Created At\"\n            name=\"createdAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"createdAt\", {\n              rules: [],\n              initialValue: this.state.currentData.CreatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"createdAt\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Updated At\"\n            name=\"updatedAt\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"updatedAt\", {\n              rules: [],\n              initialValue: this.state.currentData.UpdatedAt,\n            })(<Input disabled={this.state.isShowEdit} name=\"updatedAt\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Count\"\n            name=\"count\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"count\", {\n              rules: [\n                {\n                  required: true,\n                },\n                // {\n                //   validator: checkCount,\n                // },\n              ],\n              initialValue: 1,\n            })(<InputNumber min={1} />)}\n          </Form.Item>\n          <Form.Item\n            name=\"image\"\n            label=\"Image\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"image\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                {this.state.images.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"flavor\"\n            label=\"Flavor\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"flavor\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue:\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.currentData.FlavorID +\n                    \"-\" +\n                    this.state.instFlavor.Name,\n            })(\n              <Select>\n                {this.state.flavors.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"primary\"\n            label=\"Primary Interface\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"primary\", {\n              rules: [\n                {\n                  required: !this.state.isShowEdit,\n                },\n              ],\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                {this.state.subnets.map((val) => {\n                  return (\n                    <Select.Option key={val.ID} value={val.ID}>\n                      {val.Name}-{val.Network}\n                      {val.Gateway.substring(val.Gateway.indexOf(\"/\"))}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"primaryID\"\n            label=\"Primary IP\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"primaryID\", {\n              rules: [],\n            })(\n              <Input\n                name=\"primaryid\"\n                // onChange={(e) => this.setState({ primaryid: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"primaryMac\"\n            label=\"Primary Mac\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"primaryMac\", {\n              rules: [],\n            })(\n              <Input\n                name=\"primaryMac\"\n                // onChange={(e) => this.setState({ primaryMac: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"secondary\"\n            label=\"Secondary Interface\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"secondary\", {\n              rules: [],\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                {this.state.subnets.map((val, index) => {\n                  return (\n                    <Select.Option key={index} value={val.ID}>\n                      {val.Name}-{val.Network}\n                      {val.Gateway.substring(val.Gateway.indexOf(\"/\"))}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"secgroups\"\n            label=\"Security Groups\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"secgroups\", {\n              rules: [],\n              // initialValue: window.localStorage.token,\n            })(\n              <Select disabled={this.state.isShowEdit}>\n                {this.state.secgroups.map((val, index) => {\n                  return (\n                    <Select.Option key={index} value={`${val.ID}`}>\n                      {val.ID}-{val.Name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Interfaces\"\n            name=\"interfaces\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={!this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"interfaces\", {\n              rules: [],\n              initialValue:\n                this.state.currentData.length === 0\n                  ? \"\"\n                  : this.state.instSubnet.map((iSubnet) => {\n                      return iSubnet.Name;\n                    }) +\n                    \"-\" +\n                    this.state.instInterface.map((ifaces) => {\n                      return ifaces.Address;\n                    }),\n            })(\n              <Select\n                mode=\"tags\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Please select\"\n              >\n                {this.state.instInterface.map((ifaces) => {\n                  console.log(\"select-instInterface\", ifaces);\n                  return (\n                    <Select.Option key={ifaces.ID} value={`${ifaces.SubnetID}`}>\n                      {this.state.instSubnet.map((isubnet) => {\n                        return isubnet.Name;\n                      })}\n                      -{ifaces.Address}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Keys\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            <Row gutter={8}>\n              <Col span={17}>\n                <Form.Item name=\"keys\">\n                  {this.props.form.getFieldDecorator(\"keys\", {\n                    rules: [],\n                    // initialValue: this.state.keys,\n                  })(\n                    <Select\n                      mode=\"tags\"\n                      style={{ width: \"100%\" }}\n                      placeholder=\"Key\"\n                      disabled={this.state.isShowEdit}\n                    >\n                      {this.state.keys.map((val, index) => {\n                        console.log(\"keysss\", val.ID);\n                        return (\n                          <Select.Option key={index} value={`${val.ID}`}>\n                            {val.ID} - {val.Name}\n                          </Select.Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Button type=\"primary\" onClick={this.showKeyModal}>\n                  Create Key\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n          <Form.Item\n            name=\"userdata\"\n            label=\"User Data\"\n            labelCol={{ ...layoutForm.labelCol }}\n            hidden={this.state.isShowEdit}\n          >\n            {this.props.form.getFieldDecorator(\"userdata\", {\n              rules: [],\n              initialValue: this.state.currentData.Userdata,\n            })(\n              <Input.TextArea\n                autoSize={{ minRows: 3, maxRows: 6 }}\n                name=\"userdata\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {this.state.isShowEdit ? (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Instance\n              </Button>\n            ) : (\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create Instance\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n        <CreateKeyModal\n          title=\"Create New Key\"\n          visible={this.state.visible}\n          submit={this.createKey.bind(this)}\n          close={() => {\n            this.setState({\n              visible: false,\n            });\n            this.props.form.resetFields();\n          }}\n        ></CreateKeyModal>\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"mapStateToProps-modifyinstance:\", state);\n  // var loginInfo = JSON.parse(state.loginInfo);\n  // console.log(\"mapStateToProps-isadmin:\", JSON.parse(state.loginInfo));\n\n  return state;\n};\nexport default connect(mapStateToProps)(\n  Form.create({ name: \"modifyInstances\" })(ModifyInstances)\n);\n"]},"metadata":{},"sourceType":"module"}