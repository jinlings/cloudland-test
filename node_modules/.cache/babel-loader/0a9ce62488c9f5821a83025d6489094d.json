{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { SECRULE_LIST_IS_FETCHING, SECRULE_LIST_FETCHED, SECRULE_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  secruleList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (secruleList, keyword) => {\n  console.log(\"getFilteredUserList-secruleList:\", secruleList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return secruleList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Protocol.toLowerCase().indexOf(keyword) > -1 || item.Direction.toLowerCase().indexOf(keyword) > -1 || item.Direction.toLowerCase().indexOf(keyword) > -1);\n};\n\nexport default function RegReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n\n  switch (action.type) {\n    case SECRULE_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case SECRULE_LIST_FETCHED:\n      console.log(\"SECRULE_LIST_FETCHED\", action);\n      return { ...state,\n        secruleList: action.secruleList,\n        filteredList: getFilteredList(action.secruleList, state.keyword)\n      };\n\n    case SECRULE_LIST_FILTER:\n      console.log(\"SECRULE_LIST_FILTER-state\", state);\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.secruleList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = RegReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/SecruleReducer.jsx"],"names":["SECRULE_LIST_IS_FETCHING","SECRULE_LIST_FETCHED","SECRULE_LIST_FILTER","initialState","secruleList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","console","log","filter","item","ID","toString","indexOf","Protocol","toLowerCase","Direction","RegReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,wBADF,EAEEC,oBAFF,EAGEC,mBAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,WAAD,EAAcK,OAAd,KAA0B;AAChDE,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDR,WAAhD;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,OAA5C;AACA,SAAOL,WAAW,CAACS,MAAZ,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BR,OAA3B,IAAsC,CAAC,CAAvC,IACAK,IAAI,CAACI,QAAL,CAAcC,WAAd,GAA4BF,OAA5B,CAAoCR,OAApC,IAA+C,CAAC,CADhD,IAEAK,IAAI,CAACM,SAAL,CAAeD,WAAf,GAA6BF,OAA7B,CAAqCR,OAArC,IAAgD,CAAC,CAFjD,IAGAK,IAAI,CAACM,SAAL,CAAeD,WAAf,GAA6BF,OAA7B,CAAqCR,OAArC,IAAgD,CAAC,CAL9C,CAAP;AAOD,CAVD;;AAWA,eAAe,SAASY,UAAT,CAAoBC,KAAK,GAAGnB,YAA5B,EAA0CoB,MAA1C,EAAkD;AAC/DZ,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCU,KAAlC;;AACA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAKxB,wBAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELf,QAAAA,SAAS,EAAEgB,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKxB,oBAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCW,MAApC;AACA,aAAO,EACL,GAAGD,KADE;AAELlB,QAAAA,WAAW,EAAEmB,MAAM,CAACnB,WAFf;AAGLE,QAAAA,YAAY,EAAEI,eAAe,CAACa,MAAM,CAACnB,WAAR,EAAqBkB,KAAK,CAACb,OAA3B;AAHxB,OAAP;;AAKF,SAAKP,mBAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCU,KAAzC;AACA,aAAO,EACL,GAAGA,KADE;AAELb,QAAAA,OAAO,EAAEc,MAAM,CAACd,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACY,KAAK,CAAClB,WAAP,EAAoBmB,MAAM,CAACd,OAA3B;AAHxB,OAAP;;AAKF;AACE,aAAOa,KAAP;AArBJ;AAuBD;KAzBuBD,U","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  SECRULE_LIST_IS_FETCHING,\n  SECRULE_LIST_FETCHED,\n  SECRULE_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  secruleList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (secruleList, keyword) => {\n  console.log(\"getFilteredUserList-secruleList:\", secruleList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return secruleList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Protocol.toLowerCase().indexOf(keyword) > -1 ||\n      item.Direction.toLowerCase().indexOf(keyword) > -1 ||\n      item.Direction.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function RegReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n  switch (action.type) {\n    case SECRULE_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case SECRULE_LIST_FETCHED:\n      console.log(\"SECRULE_LIST_FETCHED\", action);\n      return {\n        ...state,\n        secruleList: action.secruleList,\n        filteredList: getFilteredList(action.secruleList, state.keyword),\n      };\n    case SECRULE_LIST_FILTER:\n      console.log(\"SECRULE_LIST_FILTER-state\", state);\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.secruleList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}