{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { USER_LIST_IS_FETCHING, USER_LIST_FETCHED, USER_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  userList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (userList, keyword) => {\n  console.log(\"getFilteredUserList-userList:\", userList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return userList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.username.toLowerCase().indexOf(keyword) > -1);\n};\n\nexport default function UserReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n\n  switch (action.type) {\n    case USER_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case USER_LIST_FETCHED:\n      console.log(\"USER_LIST_FETCHED\", action);\n      return { ...state,\n        // isLoading: action.loading,\n        userList: action.userList,\n        filteredList: getFilteredList(action.userList, state.keyword)\n      };\n\n    case USER_LIST_FILTER:\n      console.log(\"LIST_FILTER-state\", state);\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.userList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/UserReducer.jsx"],"names":["USER_LIST_IS_FETCHING","USER_LIST_FETCHED","USER_LIST_FILTER","initialState","userList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","console","log","filter","item","ID","toString","indexOf","username","toLowerCase","UserReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,qBADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,QAAD,EAAWK,OAAX,KAAuB;AAC7CE,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CR,QAA7C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,OAA5C;AACA,SAAOL,QAAQ,CAACS,MAAT,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BR,OAA3B,IAAsC,CAAC,CAAvC,IACAK,IAAI,CAACI,QAAL,CAAcC,WAAd,GAA4BF,OAA5B,CAAoCR,OAApC,IAA+C,CAAC,CAH7C,CAAP;AAKD,CARD;;AASA,eAAe,SAASW,WAAT,CAAqBC,KAAK,GAAGlB,YAA7B,EAA2CmB,MAA3C,EAAmD;AAChEX,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCS,KAAlC;;AACA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAKvB,qBAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELd,QAAAA,SAAS,EAAEe,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKvB,iBAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCU,MAAjC;AACA,aAAO,EACL,GAAGD,KADE;AAEL;AACAjB,QAAAA,QAAQ,EAAEkB,MAAM,CAAClB,QAHZ;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACY,MAAM,CAAClB,QAAR,EAAkBiB,KAAK,CAACZ,OAAxB;AAJxB,OAAP;;AAMF,SAAKP,gBAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCS,KAAjC;AACA,aAAO,EACL,GAAGA,KADE;AAELZ,QAAAA,OAAO,EAAEa,MAAM,CAACb,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACW,KAAK,CAACjB,QAAP,EAAiBkB,MAAM,CAACb,OAAxB;AAHxB,OAAP;;AAKF;AACE,aAAOY,KAAP;AAtBJ;AAwBD;KA1BuBD,W","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  USER_LIST_IS_FETCHING,\n  USER_LIST_FETCHED,\n  USER_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  userList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (userList, keyword) => {\n  console.log(\"getFilteredUserList-userList:\", userList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return userList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.username.toLowerCase().indexOf(keyword) > -1\n  );\n};\nexport default function UserReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n  switch (action.type) {\n    case USER_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case USER_LIST_FETCHED:\n      console.log(\"USER_LIST_FETCHED\", action);\n      return {\n        ...state,\n        // isLoading: action.loading,\n        userList: action.userList,\n        filteredList: getFilteredList(action.userList, state.keyword),\n      };\n    case USER_LIST_FILTER:\n      console.log(\"LIST_FILTER-state\", state);\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.userList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}