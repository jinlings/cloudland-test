{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/orgs/ModifyOrg.jsx\";\n\n/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport { getOrgInforById, editOrgInfor } from \"../../service/orgs\";\nimport \"./orgs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass ModifyOrg extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listOrgs = () => {\n      this.props.history.push(\"/orgs\");\n    };\n\n    this.handleSubmit = e => {\n      console.log(\"handleSubmit:\", e);\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"handleSubmit-value:\", values); //const _this = this;\n\n          editOrgInfor(this.props.match.params.id, values).then(res => {\n            this.props.history.push(\"/orgs\");\n          });\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      owerUser: [],\n      members: []\n    };\n    let that = this;\n\n    if (props.match.params.id) {\n      getOrgInforById(props.match.params.id).then(res => {\n        console.log(\"getOrgInforById-res:\", res);\n        that.setState({\n          currentData: res,\n          owerUser: res.OwnerUser,\n          members: res.Members.filter(item => {\n            return {\n              UserName: item.UserName,\n              Role: item.Role\n            };\n          }),\n          isShowEdit: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Edit Organization\",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.listOrgs,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Organization Name\",\n          name: \"orgname\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"orgname\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.currentData.name\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Owner\",\n          name: \"owner\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"owner\", {\n            rules: [{\n              required: true\n            }],\n            initialValue: this.state.owerUser.username\n          })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Member List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), this.state.members.map((item, index) => {\n          return [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\",\n            name: \"names\",\n            labelCol: { ...layoutForm.labelCol\n            },\n            children: this.props.form.getFieldDecorator(\"names\", {\n              rules: [{\n                required: true\n              }],\n              initialValue: item.UserName\n            })( /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 20\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\",\n            name: \"roles\",\n            labelCol: { ...layoutForm.labelCol\n            },\n            children: this.props.form.getFieldDecorator(\"roles\", {\n              rules: [{\n                required: true\n              }],\n              initialValue: item.Role.toString()\n            })( /*#__PURE__*/_jsxDEV(Select, {\n              children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"0\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"1\",\n                children: \"Reader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"2\",\n                children: \"Writer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"3\",\n                children: \"Owner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: \"4\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)];\n        }), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update Registry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"modifyOrg\"\n})(ModifyOrg);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/orgs/ModifyOrg.jsx"],"names":["React","Component","Form","Card","Input","Select","Button","message","getOrgInforById","editOrgInfor","layoutButton","labelCol","span","wrapperCol","layoutForm","ModifyOrg","constructor","props","listOrgs","history","push","handleSubmit","e","console","log","preventDefault","form","validateFieldsAndScroll","err","values","match","params","id","then","res","error","state","isShowEdit","currentData","owerUser","members","that","setState","OwnerUser","Members","filter","item","UserName","Role","render","getFieldDecorator","rules","required","initialValue","name","username","map","index","toString","offset","create"],"mappings":"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","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport React, { Component } from \"react\";\nimport { Form, Card, Input, Select, Button, message } from \"antd\";\nimport { getOrgInforById, editOrgInfor } from \"../../service/orgs\";\nimport \"./orgs.css\";\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass ModifyOrg extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowEdit: false,\n      currentData: [],\n      owerUser: [],\n      members: [],\n\n    };\n    let that = this;\n    if (props.match.params.id) {\n      getOrgInforById(props.match.params.id).then((res) => {\n        console.log(\"getOrgInforById-res:\", res);\n        that.setState({\n          currentData: res,\n          owerUser: res.OwnerUser,\n          members: res.Members.filter((item) => {\n            return {UserName:item.UserName, Role:item.Role};\n          }),          \n          isShowEdit: true,\n        });\n      });\n    }\n  }\n\n  listOrgs = () => {\n    this.props.history.push(\"/orgs\");\n  };\n  handleSubmit = (e) => {\n    console.log(\"handleSubmit:\", e);\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"handleSubmit-value:\", values);\n        //const _this = this;\n        editOrgInfor(this.props.match.params.id, values).then((res) => {\n\n          this.props.history.push(\"/orgs\");\n        });\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Card\n        title={\"Edit Organization\"}\n        extra={\n          <Button type=\"primary\" onClick={this.listOrgs}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"Organization Name\"\n            name=\"orgname\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"orgname\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.currentData.name,\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label=\"Owner\"\n            name=\"owner\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"owner\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n              initialValue: this.state.owerUser.username,\n            })(<Input />)}\n          </Form.Item>\n          <h3>Member List</h3>\n          {\n\t        this.state.members.map((item,index) => {\n\t\t      return ([\n                <Form.Item\n                  label=\"\"\n                  name=\"names\"\n                  labelCol={{ ...layoutForm.labelCol }}\n                >\n                {this.props.form.getFieldDecorator(\"names\", {\n                  rules: [\n                    {\n                      required: true,\n                    },\n                  ],\n                  initialValue: item.UserName,\n                })(<Input />)}\n                </Form.Item>,\n                <Form.Item\n                  label=\"\"\n                  name=\"roles\"\n                  labelCol={{ ...layoutForm.labelCol }}\n                >\n                {this.props.form.getFieldDecorator(\"roles\", {\n                  rules: [\n                    {\n                      required: true,\n                    },\n                  ],\n                  initialValue: item.Role.toString(),\n                })(\n                  <Select>\n                    <Select.Option value=\"0\">None</Select.Option>\n                    <Select.Option value=\"1\">Reader</Select.Option>\n                    <Select.Option value=\"2\">Writer</Select.Option>\n                    <Select.Option value=\"3\">Owner</Select.Option>\n                    <Select.Option value=\"4\">Admin</Select.Option>\n                  </Select>\t\n\t            )}\n                </Form.Item>                            \t\t\n\t\t      ])\n\n\n\t        }\n\t        )\n\n          }\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update Registry\n              </Button>\n            }\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"modifyOrg\" })(ModifyOrg);\n"]},"metadata":{},"sourceType":"module"}