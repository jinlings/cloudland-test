{"ast":null,"code":"var _jsxFileName = \"/Users/emily/cloudland/src/pages/floatingips/CreateFloatingips.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Card, Button, Select, Input, message } from \"antd\";\nimport { createFloatingipApi } from \"../../service/floatingips\";\nimport { insListApi } from \"../../service/instances\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layoutButton = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst layoutForm = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 10\n  }\n};\n\nclass CreateFloatingips extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listFloatingIps = () => {\n      this.props.history.push(\"/floatingips\");\n    };\n\n    this.handleSubmit = event => {\n      console.log(\"handleSubmit-state:\", this.state);\n      console.log(\"handleSubmit:\", event);\n      event.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        let _this = this;\n\n        if (!err) {\n          // this.setState({\n          //   flavors: {\n          //     Name: this.state.name,\n          //     Cpu: parseInt(this.state.cpu),\n          //     Memory: parseInt(this.state.memory),\n          //     Disk: parseInt(this.state.disk),\n          //     Swap: parseInt(this.state.swap),\n          //     Ephemeral: parseInt(this.state.ephemeral),\n          //   },\n          // });\n          let ifaceID = [];\n\n          if (values.privateip != undefined) {\n            ifaceID.push(values.privateip);\n          }\n\n          if (values.publicip != undefined) {\n            ifaceID.push(values.publicip);\n          }\n\n          console.log(\"提交~~~\", {\n            ftype: values.ftype,\n            instance: `${values.instance}`,\n            ifaceID: ifaceID\n          });\n          createFloatingipApi({\n            ftype: values.ftype,\n            instance: `${values.instance}`,\n            publicip: ifaceID\n          }).then(res => {\n            console.log(\"handleSubmit-res-createFlavorApi:\", res);\n            this.props.history.push(\"/flavors\");\n          }).catch(err => {\n            console.log(\"handleSubmit-error:\", err);\n          });\n        } else {\n          message.error(\" input wrong information\");\n        }\n      });\n    };\n\n    this.state = {\n      instances: [],\n      publicip: \"\",\n      privateip: \"\",\n      ftype: [],\n      instance: \"\"\n    };\n  }\n\n  componentWilMount() {\n    console.log(\"componentDidMount:\", this);\n    insListApi().then(res => {\n      const _this = this;\n\n      console.log(\"componentDidMount-instances:\", res);\n\n      _this.setState({\n        instances: res.instances,\n        isLoaded: true,\n        pagination: {\n          total: res.total\n        }\n      });\n    }).catch(error => {\n      const _this = this;\n\n      _this.setState({\n        isLoaded: false,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Create New FloatingIp \",\n      extra: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: this.listFloatingIps,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"horizontal\",\n        wrapperCol: { ...layoutForm.wrapperCol\n        },\n        onSubmit: e => this.handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Instance Address\",\n          name: \"instance\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"instance\", {\n            rules: [{\n              required: true\n            }]\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: this.state.instances.map((item, index) => {\n              console.log(\"instance~\", item, index);\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item.ID,\n                children: [item.ID, \" - \", item.Hostname, \"-\", item.Interfaces.map(val => {\n                  return val.Address.Address;\n                })]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Public IP\",\n          name: \"publicip\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"publicip\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"publicip\",\n            onChange: e => this.setState({\n              publicip: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Private IP\",\n          name: \"privateip\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"privateip\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            name: \"privateip\",\n            onChange: e => this.setState({\n              privateip: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Floating IP Type\",\n          name: \"ftype\",\n          labelCol: { ...layoutForm.labelCol\n          },\n          children: this.props.form.getFieldDecorator(\"ftype\", {\n            rules: []\n          })( /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"public\",\n              children: \"public\"\n            }, \"public\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"private\",\n              children: \"private\"\n            }, \"private\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...layoutButton.wrapperCol,\n            offset: 8\n          },\n          labelCol: {\n            span: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create FloatingIp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form.create({\n  name: \"createFloatingips\"\n})(CreateFloatingips);","map":{"version":3,"sources":["/Users/emily/cloudland/src/pages/floatingips/CreateFloatingips.jsx"],"names":["React","Component","Form","Card","Button","Select","Input","message","createFloatingipApi","insListApi","layoutButton","labelCol","span","wrapperCol","layoutForm","CreateFloatingips","constructor","props","listFloatingIps","history","push","handleSubmit","event","console","log","state","preventDefault","form","validateFieldsAndScroll","err","values","_this","ifaceID","privateip","undefined","publicip","ftype","instance","then","res","catch","error","instances","componentWilMount","setState","isLoaded","pagination","total","render","e","getFieldDecorator","rules","required","map","item","index","ID","Hostname","Interfaces","val","Address","target","value","offset","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Card, Button, Select, Input, message } from \"antd\";\nimport { createFloatingipApi } from \"../../service/floatingips\";\nimport { insListApi } from \"../../service/instances\";\n\nconst layoutButton = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 10 },\n};\nclass CreateFloatingips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instances: [],\n      publicip: \"\",\n      privateip: \"\",\n      ftype: [],\n      instance: \"\",\n    };\n  }\n  componentWilMount() {\n    console.log(\"componentDidMount:\", this);\n    insListApi()\n      .then((res) => {\n        const _this = this;\n        console.log(\"componentDidMount-instances:\", res);\n        _this.setState({\n          instances: res.instances,\n          isLoaded: true,\n          pagination: {\n            total: res.total,\n          },\n        });\n      })\n      .catch((error) => {\n        const _this = this;\n        _this.setState({\n          isLoaded: false,\n          error: error,\n        });\n      });\n  }\n  listFloatingIps = () => {\n    this.props.history.push(\"/floatingips\");\n  };\n  handleSubmit = (event) => {\n    console.log(\"handleSubmit-state:\", this.state);\n    console.log(\"handleSubmit:\", event);\n    event.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      let _this = this;\n      if (!err) {\n        // this.setState({\n        //   flavors: {\n        //     Name: this.state.name,\n        //     Cpu: parseInt(this.state.cpu),\n        //     Memory: parseInt(this.state.memory),\n        //     Disk: parseInt(this.state.disk),\n        //     Swap: parseInt(this.state.swap),\n        //     Ephemeral: parseInt(this.state.ephemeral),\n        //   },\n        // });\n\n        let ifaceID = [];\n        if (values.privateip != undefined) {\n          ifaceID.push(values.privateip);\n        }\n        if (values.publicip != undefined) {\n          ifaceID.push(values.publicip);\n        }\n\n        console.log(\"提交~~~\", {\n          ftype: values.ftype,\n          instance: `${values.instance}`,\n          ifaceID: ifaceID,\n        });\n        createFloatingipApi({\n          ftype: values.ftype,\n          instance: `${values.instance}`,\n          publicip: ifaceID,\n        })\n          .then((res) => {\n            console.log(\"handleSubmit-res-createFlavorApi:\", res);\n            this.props.history.push(\"/flavors\");\n          })\n          .catch((err) => {\n            console.log(\"handleSubmit-error:\", err);\n          });\n      } else {\n        message.error(\" input wrong information\");\n      }\n    });\n  };\n  render() {\n    return (\n      <Card\n        title={\"Create New FloatingIp \"}\n        extra={\n          <Button type=\"primary\" size=\"small\" onClick={this.listFloatingIps}>\n            Return\n          </Button>\n        }\n      >\n        <Form\n          layout=\"horizontal\"\n          wrapperCol={{ ...layoutForm.wrapperCol }}\n          onSubmit={(e) => this.handleSubmit(e)}\n        >\n          <Form.Item\n            label=\"Instance Address\"\n            name=\"instance\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"instance\", {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n            })(\n              <Select>\n                {this.state.instances.map((item, index) => {\n                  console.log(\"instance~\", item, index);\n                  return (\n                    <Select.Option key={index} value={item.ID}>\n                      {item.ID} - {item.Hostname}-\n                      {item.Interfaces.map((val) => {\n                        return val.Address.Address;\n                      })}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Public IP\"\n            name=\"publicip\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"publicip\", {\n              rules: [],\n            })(\n              <Input\n                name=\"publicip\"\n                onChange={(e) => this.setState({ publicip: e.target.value })}\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"Private IP\"\n            name=\"privateip\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"privateip\", {\n              rules: [],\n            })(\n              <Input\n                name=\"privateip\"\n                onChange={(e) => this.setState({ privateip: e.target.value })}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Floating IP Type\"\n            name=\"ftype\"\n            labelCol={{ ...layoutForm.labelCol }}\n          >\n            {this.props.form.getFieldDecorator(\"ftype\", {\n              rules: [],\n            })(\n              <Select>\n                <Select.Option key=\"public\" value=\"public\">\n                  public\n                </Select.Option>\n\n                <Select.Option key=\"private\" value=\"private\">\n                  private\n                </Select.Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{ ...layoutButton.wrapperCol, offset: 8 }}\n            labelCol={{ span: 6 }}\n          >\n            {\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create FloatingIp\n              </Button>\n            }\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\nexport default Form.create({ name: \"createFloatingips\" })(CreateFloatingips);\n"]},"metadata":{},"sourceType":"module"}