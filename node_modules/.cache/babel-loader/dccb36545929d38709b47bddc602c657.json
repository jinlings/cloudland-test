{"ast":null,"code":"/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport { SUB_LIST_IS_FETCHING, SUB_LIST_FETCHED, SUB_LIST_FILTER } from \"../../constants/actionTypes\";\nconst initialState = {\n  subList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\"\n};\n\nconst getFilteredList = (subList, keyword) => {\n  console.log(\"getFilteredUserList-SUBList:\", subList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return subList.filter(item => item.ID.toString().indexOf(keyword) > -1 || item.Name.toLowerCase().indexOf(keyword) > -1 || item.Network.toLowerCase().indexOf(keyword) > -1 || item.Network.toLowerCase().indexOf(keyword) > -1 || item.Vlan.toString().indexOf(keyword) > -1 || item.OwnerInfo.name);\n};\n\nexport default function SubReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n\n  switch (action.type) {\n    case SUB_LIST_IS_FETCHING:\n      return { ...state,\n        isLoading: action.loading\n      };\n\n    case SUB_LIST_FETCHED:\n      console.log(\"SUB_LIST_FETCHED\", action);\n      return { ...state,\n        // isLoading: action.loading,\n        subList: action.subList,\n        filteredList: getFilteredList(action.subList, state.keyword)\n      };\n\n    case SUB_LIST_FILTER:\n      console.log(\"SUB_LIST_FILTER-state\", state);\n      return { ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.subList, action.keyword)\n      };\n\n    default:\n      return state;\n  }\n}\n_c = SubReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubReducer\");","map":{"version":3,"sources":["/Users/emily/cloudland/src/redux/reducers/SubReducer.jsx"],"names":["SUB_LIST_IS_FETCHING","SUB_LIST_FETCHED","SUB_LIST_FILTER","initialState","subList","total","filteredList","isLoading","errorMessage","keyword","getFilteredList","console","log","filter","item","ID","toString","indexOf","Name","toLowerCase","Network","Vlan","OwnerInfo","name","SubReducer","state","action","type","loading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,oBADF,EAEEC,gBAFF,EAGEC,eAHF,QAIO,6BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACN,OAAD,EAAUK,OAAV,KAAsB;AAC5CE,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CR,OAA5C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,OAA5C;AACA,SAAOL,OAAO,CAACS,MAAR,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,CAAQC,QAAR,GAAmBC,OAAnB,CAA2BR,OAA3B,IAAsC,CAAC,CAAvC,IACAK,IAAI,CAACI,IAAL,CAAUC,WAAV,GAAwBF,OAAxB,CAAgCR,OAAhC,IAA2C,CAAC,CAD5C,IAEAK,IAAI,CAACM,OAAL,CAAaD,WAAb,GAA2BF,OAA3B,CAAmCR,OAAnC,IAA8C,CAAC,CAF/C,IAGAK,IAAI,CAACM,OAAL,CAAaD,WAAb,GAA2BF,OAA3B,CAAmCR,OAAnC,IAA8C,CAAC,CAH/C,IAIAK,IAAI,CAACO,IAAL,CAAUL,QAAV,GAAqBC,OAArB,CAA6BR,OAA7B,IAAwC,CAAC,CAJzC,IAKAK,IAAI,CAACQ,SAAL,CAAeC,IAPZ,CAAP;AASD,CAZD;;AAaA,eAAe,SAASC,UAAT,CAAoBC,KAAK,GAAGtB,YAA5B,EAA0CuB,MAA1C,EAAkD;AAC/Df,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCa,KAAlC;;AACA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAK3B,oBAAL;AACE,aAAO,EACL,GAAGyB,KADE;AAELlB,QAAAA,SAAS,EAAEmB,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAK3B,gBAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCc,MAAhC;AACA,aAAO,EACL,GAAGD,KADE;AAEL;AACArB,QAAAA,OAAO,EAAEsB,MAAM,CAACtB,OAHX;AAILE,QAAAA,YAAY,EAAEI,eAAe,CAACgB,MAAM,CAACtB,OAAR,EAAiBqB,KAAK,CAAChB,OAAvB;AAJxB,OAAP;;AAMF,SAAKP,eAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCa,KAArC;AACA,aAAO,EACL,GAAGA,KADE;AAELhB,QAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAFX;AAGLH,QAAAA,YAAY,EAAEI,eAAe,CAACe,KAAK,CAACrB,OAAP,EAAgBsB,MAAM,CAACjB,OAAvB;AAHxB,OAAP;;AAKF;AACE,aAAOgB,KAAP;AAtBJ;AAwBD;KA1BuBD,U","sourcesContent":["/*\n\nCopyright <holder> All Rights Reserved\n\nSPDX-License-Identifier: Apache-2.0\n\n*/\nimport {\n  SUB_LIST_IS_FETCHING,\n  SUB_LIST_FETCHED,\n  SUB_LIST_FILTER,\n} from \"../../constants/actionTypes\";\n\nconst initialState = {\n  subList: [],\n  total: 0,\n  filteredList: [],\n  isLoading: false,\n  errorMessage: \"\",\n  keyword: \"\",\n};\nconst getFilteredList = (subList, keyword) => {\n  console.log(\"getFilteredUserList-SUBList:\", subList);\n  console.log(\"getFilteredUserList-keyword:\", keyword);\n  return subList.filter(\n    (item) =>\n      item.ID.toString().indexOf(keyword) > -1 ||\n      item.Name.toLowerCase().indexOf(keyword) > -1 ||\n      item.Network.toLowerCase().indexOf(keyword) > -1 ||\n      item.Network.toLowerCase().indexOf(keyword) > -1 ||\n      item.Vlan.toString().indexOf(keyword) > -1 ||\n      item.OwnerInfo.name\n  );\n};\nexport default function SubReducer(state = initialState, action) {\n  console.log(\"initialState-state\", state);\n  switch (action.type) {\n    case SUB_LIST_IS_FETCHING:\n      return {\n        ...state,\n        isLoading: action.loading,\n      };\n    case SUB_LIST_FETCHED:\n      console.log(\"SUB_LIST_FETCHED\", action);\n      return {\n        ...state,\n        // isLoading: action.loading,\n        subList: action.subList,\n        filteredList: getFilteredList(action.subList, state.keyword),\n      };\n    case SUB_LIST_FILTER:\n      console.log(\"SUB_LIST_FILTER-state\", state);\n      return {\n        ...state,\n        keyword: action.keyword,\n        filteredList: getFilteredList(state.subList, action.keyword),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}